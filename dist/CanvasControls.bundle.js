!function(e,o){"object"==typeof exports&&"object"==typeof module?module.exports=o():"function"==typeof define&&define.amd?define([],o):"object"==typeof exports?exports.CanvasControls=o():e.CanvasControls=o()}(window,function(){return function(e){var o={};function s(n){if(o[n])return o[n].exports;var t=o[n]={i:n,l:!1,exports:{}};return e[n].call(t.exports,t,t.exports,s),t.l=!0,t.exports}return s.m=e,s.c=o,s.d=function(e,o,n){s.o(e,o)||Object.defineProperty(e,o,{enumerable:!0,get:n})},s.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},s.t=function(e,o){if(1&o&&(e=s(e)),8&o)return e;if(4&o&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(s.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&o&&"string"!=typeof e)for(var t in e)s.d(n,t,function(o){return e[o]}.bind(null,t));return n},s.n=function(e){var o=e&&e.__esModule?function(){return e.default}:function(){return e};return s.d(o,"a",o),o},s.o=function(e,o){return Object.prototype.hasOwnProperty.call(e,o)},s.p="",s(s.s="./dist/babel/CanvasControls.js")}({"./dist/babel/CanvasControls.js":
/*!**************************************!*\
  !*** ./dist/babel/CanvasControls.js ***!
  \**************************************/
/*! no static exports found */function(e,o,s){"use strict";function n(e){return function(e){if(Array.isArray(e)){for(var o=0,s=new Array(e.length);o<e.length;o++)s[o]=e[o];return s}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}function t(e,o){if(!(e instanceof o))throw new TypeError("Cannot call a class as a function")}function u(e,o){for(var s=0;s<o.length;s++){var n=o[s];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function r(e,o,s){return o&&u(e.prototype,o),s&&u(e,s),e}
/**
 * The root of the main library
 * @module CanvasControls
 * @license ISC
 * @global
 */
var d;Object.defineProperty(o,"__esModule",{value:!0}),s(/*! @babel/polyfill */"./node_modules/@babel/polyfill/lib/index.js"),function(e){function o(e,o){var s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:function(e,o,s){return void 0===e[s]&&(e[s]=o[s])};for(var n in o)s(e,o,n);return e}function s(e,o,s){var n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;return e>s+n?s:e<o-n?o:e}function u(e,o,s,n){return e>s&&n>0?e:e>s?e+n:e<o&&n<0?e:e+n}function d(e,o){return Math.sqrt([e[1]-e[0],o[1]-o[0]].map(function(e){return Math.pow(e,2)}).reduce(function(e,o){return e+o}))}function l(e,o){var s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:.5;return e[0]-s<=o[0]&&e[0]+e[2]+s>=o[0]&&e[1]-s<=o[1]&&e[1]+e[3]+s>=o[1]}var c,i;e.inherit=o,e.bound=s,e.block=u,e.dist=d,e.isWithin=l,function(e){!function(e){e[e.USELEFT=1]="USELEFT",e[e.USERIGHT=2]="USERIGHT",e[e.USEBOTH=3]="USEBOTH"}(e.UseButton||(e.UseButton={})),function(e){e[e.NORMAL=1]="NORMAL",e[e.FREESCALE=2]="FREESCALE"}(e.ScaleMode||(e.ScaleMode={})),function(e){e[e.FIXED=1]="FIXED",e[e.ABSOLUTE=2]="ABSOLUTE",e[e.UNSCALABLE=4]="UNSCALABLE"}(e.Position||(e.Position={}))}(c=e.Opts||(e.Opts={})),function(e){e.ENOTCANV=new TypeError("Not an HTMLCanvasElement."),e.ENOTCTX=new TypeError("Not a CanvasRenderingContext2D."),e.ENOTNUMARR2=new TypeError("Not an Array of 2-at-least Numbers."),e.ENOTNUM=new TypeError("Not a valid Number."),e.EISALR=new ReferenceError("Object is already registered.")}(i=e.Errors||(e.Errors={}));var m=function(){function e(){var s=arguments.length>0&&void 0!==arguments[0]?arguments[0]:e.defaultOpts;if(t(this,e),this.trans=[0,0],this.scl=[1,1],this.transBounds=[-1/0,-1/0,1/0,1/0],this.dynamicTransBounds=!0,this.sclBounds=[0,0,1/0,1/0],this.dragEnabled=!1,this.pinchEnabled=!1,this.wheelEnabled=!1,this.keysEnabled=!1,this.panEnabled=!1,this.tiltEnabled=!1,this.eventsReversed=!1,this.useButton=c.UseButton.USELEFT,this.scaleMode=c.ScaleMode.NORMAL,this.transSpeed=1,this.sclSpeed=1,this.touchSensitivity=.5,this.clickSensitivity=800,this._zoomChanged=[!1,!1],this._mobile=!1,this._pressed=!1,this._clktime=0,this._coordinates=[],this._touches=[],o(s,e.defaultOpts),!(s.target instanceof HTMLCanvasElement))throw i.ENOTCANV;if([s.trans,s.scl,s.transBounds,s.sclBounds].some(function(e){return!(e instanceof Array||e instanceof Float32Array||e instanceof Float64Array)||e.length<2||Array.from(e).some(function(e){return isNaN(e)||""===e})}))throw i.ENOTNUMARR2;if(o(s._adapts,e.defaultOpts._adapts),void 0===s.pin)s.pin=[s.target.width/2,s.target.height/2];else if(!(s.pin instanceof Array||s.pin instanceof Float32Array||s.pin instanceof Float64Array)||s.pin.length<2||Array.from(s.pin).some(function(e){return isNaN(e)||""===e}))throw i.ENOTNUMARR2;this.target=s.target,this.context=this.target.getContext("2d"),this.keybinds=new j(this.target,s.keysEnabled),this._adapts={},o(this._adapts,s._adapts),this.transSpeed=1*s.transSpeed,this.sclSpeed=1*s.sclSpeed,this.touchSensitivity=1*s.touchSensitivity,this.clickSensitivity=1*s.clickSensitivity,this.useButton=0|s.useButton,this.scaleMode=0|s.scaleMode,this.wgets=new Set(s.wgets),this.trans=Array.from(s.trans).map(Number),this.scl=Array.from(s.scl).map(Number),this.pin=Array.from(s.pin).map(Number),this.transBounds=Array.from(s.transBounds).map(Number),this.sclBounds=Array.from(s.sclBounds).map(Number),this.dynamicTransBounds=!!s.dynamicTransBounds,this.dragEnabled=!!s.dragEnabled,this.pinchEnabled=!!s.pinchEnabled,this.wheelEnabled=!!s.wheelEnabled,this.panEnabled=!!s.panEnabled,this.tiltEnabled=!!s.tiltEnabled,this.eventsReversed=!!s.eventsReversed,this._pressed=!1,this._coordinates=[0,0],this._touches=[],this._mobile=e.isMobile,e._linepix||(e._linepix=e.lineToPix),Object.defineProperty(this.target,"_cc_",{value:this,enumerable:!1,writable:!1,configurable:!0})}return r(e,[{key:"handle",value:function(){this._mobile?this._mobileAdapt():this._pcAdapt()}},{key:"addWidget",value:function(o){if(o instanceof _&&!this.wgets.has(o))o.parent=this,this.wgets.add(o);else{if(o instanceof _)throw i.EISALR;(o=new e.CanvasButton(o)).parent=this,this.wgets.add(o)}return o}},{key:"retransform",value:function(){return this.context.setTransform(1,0,0,1,0,0),this.context.translate(this.trans[0],this.trans[1]),this.context.scale(this.scl[0],this.scl[1]),this}},{key:"translate",value:function(){var e=this,o=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,t=arguments.length>2&&void 0!==arguments[2]&&arguments[2],u=[o,n].map(Number);return this.eventsReversed&&(u=u.map(function(e){return-e})),this.trans=this.trans.map(function(o,n){return s(Number(t?u[n]:o+u[n]),e.dynamicTransBounds?e.transBounds[n]*e.scl[n]:e.transBounds[n],e.dynamicTransBounds?e.transBounds[n+2]*e.scl[n]:e.transBounds[n+2])})}},{key:"scale",value:function(){var e=this,o=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:o,t=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=[o,n].map(Number);if(this.eventsReversed&&(r=r.map(function(e){return-e})),t)return this._zoomChanged=[this.scl[0]!==s(this.scl[0],this.sclBounds[0],this.sclBounds[2]),this.scl[1]!==s(this.scl[1],this.sclBounds[1],this.sclBounds[3])],this.scl=this.scl.map(function(o,n){return s(o*r[n],e.sclBounds[n],e.sclBounds[n+2])});var d=this.scl.map(function(e,o){return e*r[o]});return d=[d[0]-this.scl[0],d[1]-this.scl[1]],this._zoomChanged=[this.scl[0]!==u(this.scl[0],this.sclBounds[0],this.sclBounds[2],d[0]),this.scl[1]!==u(this.scl[1],this.sclBounds[1],this.sclBounds[3],d[1])],this.scl=[u(this.scl[0],this.sclBounds[0],this.sclBounds[2],d[0]),u(this.scl[1],this.sclBounds[1],this.sclBounds[3],d[1])]}},{key:"_mobileAdapt",value:function(){var o=this;this._adapts.drag||this._adapts.pinch||!this.dragEnabled||(this.target.addEventListener("touchstart",function(s){return e.dragMobileStart(s,o)},{passive:!1}),this.target.addEventListener("touchmove",this._adapts.pinch=this._adapts.drag=function(s){return e.dragMobileMove(s,o)},{passive:!1}),this.target.addEventListener("touchend",function(s){return e.dragMobileEnd(s,o)},{passive:!1}),this.target.addEventListener("touchcancel",function(s){return e.dragMobileEnd(s,o)},{passive:!1})),!this._adapts.tilt&&this.tiltEnabled}},{key:"_pcAdapt",value:function(){var o=this;this._adapts.drag||this._adapts.click||!this.dragEnabled||(this.target.addEventListener("mousemove",this._adapts.drag=function(s){return e.dragPC(s,o)}),this.target.addEventListener("mousedown",function(e){o._clktime=Date.now(),o._pressed=!0}),this.target.addEventListener("mouseup",this._adapts.click=function(s){return e.clickPC(s,o)}),this.target.addEventListener("mouseout",function(e){return o._adapts.click(e)}),(this.useButton&c.UseButton.USERIGHT)===c.UseButton.USERIGHT&&this.target.addEventListener("contextmenu",function(e){return e.preventDefault()},{capture:!0,passive:!1})),!this._adapts.wheel&&this.wheelEnabled&&this.target.addEventListener("wheel",this._adapts.wheel=function(s){return e.wheel(s,o)}),!this._adapts.tilt&&this.tiltEnabled}},{key:"getCoords",value:function(){var e=this;return this._coordinates.map(function(o,s){return(o-e.trans[s])/e.scl[s]})}},{key:"ratio",get:function(){return this.target.width/this.target.height}},{key:"min",get:function(){return Math.min(this.target.width,this.target.height)}},{key:"max",get:function(){return Math.max(this.target.width,this.target.height)}}],[{key:"clickPC",value:function(e,o){if(Date.now()-o._clktime<=o.clickSensitivity){var s=[(e.clientX-o.target.offsetLeft-o.trans[0])/o.scl[0],(e.clientY-o.target.offsetTop-o.trans[1])/o.scl[1]],n=Array.from(o.wgets.entries()).map(function(e){return e[1]}).sort(function(e,o){return o._id-e._id}),t=!1,u=!0,r=!1,d=void 0;try{for(var l,c=n[Symbol.iterator]();!(u=(l=c.next()).done);u=!0){var i=l.value;if(i.enabled&&i._isOn(s)&&(t=i.click(s)),t)break}}catch(e){r=!0,d=e}finally{try{u||null==c.return||c.return()}finally{if(r)throw d}}}o._clktime=0,o._pressed=!1}},{key:"dragPC",value:function(e,o){e.preventDefault();var s=[e.clientX-o.target.offsetLeft,e.clientY-o.target.offsetTop],n=[],t=!1;if(o._coordinates=s,!((o.useButton&c.UseButton.USERIGHT)!==c.UseButton.USERIGHT&&("buttons"in e&&2==(2&e.buttons)||"which"in e&&3===e.which||"button"in e&&2===e.button)||(o.useButton&c.UseButton.USERIGHT)===c.UseButton.USERIGHT&&(o.useButton&c.UseButton.USEBOTH)!==c.UseButton.USEBOTH&&"buttons"in e&&2!=(2&e.buttons)&&"which"in e&&3!==e.which&&"button"in e&&2!==e.button)){o._pressed&&(o._clktime=0,o.translate(e.movementX*o.transSpeed,e.movementY*o.transSpeed));var u=!0,r=!1,d=void 0;try{for(var l,i=o.wgets[Symbol.iterator]();!(u=(l=i.next()).done);u=!0){var m=l.value;if(m.enabled&&m._isOn(n=s.map(function(e,s){return(e-o.trans[s])/o.scl[s]}))&&!m.pstate&&(m.pstate=!0,t=m.focus(n)),t)break}}catch(e){r=!0,d=e}finally{try{u||null==i.return||i.return()}finally{if(r)throw d}}}}},{key:"dragMobileMove",value:function(e,o){function s(e,s){return!!e.every(function(e,n){return Math.abs(e-s[n])>=o.touchSensitivity})}function t(){var s=arguments.length>0&&void 0!==arguments[0]&&arguments[0];o._touches[0]=[e.targetTouches[0].clientX-o.target.offsetLeft,e.targetTouches[0].clientY-o.target.offsetTop],s||(o._touches[1]=[e.targetTouches[1].clientX-o.target.offsetLeft,e.targetTouches[1].clientY-o.target.offsetTop])}e.preventDefault();var u,r=[e.targetTouches[e.targetTouches.length-1].clientX-o.target.offsetLeft,e.targetTouches[e.targetTouches.length-1].clientY-o.target.offsetTop];if(o.dragEnabled&&1===o._touches.length){var l=Array.from(o.trans);o.translate.apply(o,n([r[0]-o._coordinates[0],r[1]-o._coordinates[1]].map(function(e){return e*o.transSpeed}))),d([l[0],o.trans[0]],[l[1],o.trans[1]])>o.touchSensitivity&&(o._clktime=0),t(!0)}else if(o.pinchEnabled&&2===o._touches.length&&2===e.targetTouches.length&&function(e,o){var n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],t=arguments.length>3&&void 0!==arguments[3]&&arguments[3],u=!1;return!!(n&&s(e[0],o[0])&&s(e[1],o[1]))||!n&&(s(e[0],o[0])&&(u=t||!u),s(e[1],o[1])&&(u=t||!u),u)}([[(u=e.targetTouches)[0].clientX-o.target.offsetLeft,u[0].clientY-o.target.offsetTop],[u[1].clientX-o.target.offsetLeft,u[1].clientY-o.target.offsetTop]],o._touches,!1,!0)){if((o.scaleMode&c.ScaleMode.FREESCALE)===c.ScaleMode.FREESCALE){var i=[Math.abs(o._touches[e.targetTouches[0].identifier][0]-o._touches[e.targetTouches[1].identifier][0]),Math.abs(o._touches[e.targetTouches[0].identifier][1]-o._touches[e.targetTouches[1].identifier][1])],m=[Math.abs(e.targetTouches[0].clientX-e.targetTouches[1].clientX-2*o.target.offsetLeft),Math.abs(e.targetTouches[0].clientY-e.targetTouches[1].clientY-2*o.target.offsetTop)],j=[o._touches[e.targetTouches[0].identifier][0]+o._touches[e.targetTouches[1].identifier][0],o._touches[e.targetTouches[0].identifier][1]+o._touches[e.targetTouches[1].identifier][1]].map(function(e,s){return e/2-o.trans[s]}),_=[m[0]/i[0],m[1]/i[1]].map(function(e){return e*o.sclSpeed}),f=j.map(function(e,o){return e*(1-_[o])});o._zoomChanged[0]&&o.translate(f[0]),o._zoomChanged[1]&&o.translate(f[1]),o.scale(_[0],_[1])}else{var a=d([o._touches[e.targetTouches[0].identifier][0],o._touches[e.targetTouches[1].identifier][0]],[o._touches[e.targetTouches[0].identifier][1],o._touches[e.targetTouches[1].identifier][1]]),h=d([e.targetTouches[0].clientX-o.target.offsetLeft,e.targetTouches[1].clientX-o.target.offsetLeft],[e.targetTouches[0].clientY-o.target.offsetTop,e.targetTouches[1].clientY-o.target.offsetTop]),p=[o._touches[e.targetTouches[0].identifier][0]+o._touches[e.targetTouches[1].identifier][0],o._touches[e.targetTouches[0].identifier][1]+o._touches[e.targetTouches[1].identifier][1]].map(function(e,s){return e/2-o.trans[s]}),v=o.sclSpeed*h/a,g=p.map(function(e){return e*(1-v)});o.scale(v),o._zoomChanged.every(function(e){return e})&&o.translate.apply(o,n(g))}t()}o._coordinates=r}},{key:"dragMobileStart",value:function(e,o){var s=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(e.preventDefault(),!s){var n,t=Array.from(o.wgets.entries()).map(function(e){return e[1]}).sort(function(e,o){return o._id-e._id}),u=!1;Array.from(e.changedTouches).forEach(function(e){return o._touches[e.identifier]=[e.clientX-o.target.offsetLeft,e.clientY-o.target.offsetTop]});var r=!0,d=!1,l=void 0;try{for(var c,i=e.changedTouches[Symbol.iterator]();!(r=(c=i.next()).done);r=!0){var m=c.value;n=[(m.clientX-o.target.offsetLeft-o.trans[0])/o.scl[0],(m.clientY-o.target.offsetTop-o.trans[1])/o.scl[1]];var j=!0,_=!1,f=void 0;try{for(var a,h=t[Symbol.iterator]();!(j=(a=h.next()).done);j=!0){var p=a.value;if(p.enabled&&p._isOn(n)&&!p.pstate&&(p.pstate=!0,u=p.focus(n)),u)break}}catch(e){_=!0,f=e}finally{try{j||null==h.return||h.return()}finally{if(_)throw f}}}}catch(e){d=!0,l=e}finally{try{r||null==i.return||i.return()}finally{if(d)throw l}}}1===o._touches.length?(o._clktime=Date.now(),o._coordinates=o._touches[o._touches.length-1]):o._clktime=0,o._pressed=!0}},{key:"dragMobileEnd",value:function(o,s){o.preventDefault();var n,t=Array.from(s.wgets.entries()).map(function(e){return e[1]}).sort(function(e,o){return o._id-e._id}),u=!1,r=!0,d=!1,l=void 0;try{for(var c,i=o.changedTouches[Symbol.iterator]();!(r=(c=i.next()).done);r=!0){var m=c.value;n=[(m.clientX-s.target.offsetLeft-s.trans[0])/s.scl[0],(m.clientY-s.target.offsetTop-s.trans[1])/s.scl[1]];var j=!0,_=!1,f=void 0;try{for(var a,h=t[Symbol.iterator]();!(j=(a=h.next()).done);j=!0){var p=a.value;p.enabled&&p._isOn(n)}}catch(e){_=!0,f=e}finally{try{j||null==h.return||h.return()}finally{if(_)throw f}}}}catch(e){d=!0,l=e}finally{try{r||null==i.return||i.return()}finally{if(d)throw l}}if(1===s._touches.length&&Date.now()-s._clktime<=s.clickSensitivity){var v=!0,g=!1,b=void 0;try{for(var w,x=t[Symbol.iterator]();!(v=(w=x.next()).done);v=!0){var y=w.value;if(y.enabled&&y._isOn(n)&&(u=y.click(n)),u)break}}catch(e){g=!0,b=e}finally{try{v||null==x.return||x.return()}finally{if(g)throw b}}s._clktime=0}Array.from(o.changedTouches).forEach(function(e){s._touches.splice(e.identifier,1)}),1==Object.keys(s._touches).length&&e.dragMobileStart(o,s,!0),s._pressed=!!s._touches.length}},{key:"wheel",value:function(o,s){o.preventDefault();var t=1-s.sclSpeed*e.fixDelta(o.deltaMode,o.deltaY)/s.min,u=[o.clientX-s.target.offsetLeft-s.trans[0],o.clientY-s.target.offsetTop-s.trans[1]];s.scale(t),s._zoomChanged.every(function(e){return e})&&s.translate.apply(s,n(u.map(function(e){return e*(1-t)})))}},{key:"fixDelta",value:function(o,s){return 1===o?e._linepix*s:2===o?window.innerHeight:s}},{key:"isMobile",get:function(){return!!(navigator.userAgent.match(/Android/i)||navigator.userAgent.match(/webOS/i)||navigator.userAgent.match(/iPhone/i)||navigator.userAgent.match(/iPad/i)||navigator.userAgent.match(/iPod/i)||navigator.userAgent.match(/BlackBerry/i)||navigator.userAgent.match(/Windows Phone/i))}},{key:"lineToPix",get:function(){var e,o=document.createElement("iframe");o.src="#",document.body.appendChild(o);var s=o.contentWindow.document;return s.open(),s.write("<!DOCTYPE html><html><head></head><body><p>a</p></body></html>"),s.close(),e=s.body.firstElementChild.offsetHeight,document.body.removeChild(o),e}}]),e}();m._linepix=10,m.defaultOpts={target:document.getElementsByTagName("canvas")[0],trans:[0,0],scl:[1,1],dragEnabled:!1,pinchEnabled:!1,wheelEnabled:!1,keysEnabled:!1,panEnabled:!1,tiltEnabled:!1,eventsReversed:!1,dynamicTransBounds:!0,useButton:1,scaleMode:1,transSpeed:1,sclSpeed:1,touchSensitivity:.35,clickSensitivity:800,sclBounds:[0,0,1/0,1/0],transBounds:[-1/0,-1/0,1/0,1/0],_adapts:{drag:!1,pinch:!1,wheel:!1,pan:!1,tilt:!1,click:!1},wgets:new Set},e.ControllableCanvas=m;var j=function(){function e(o){var s=arguments.length>1&&void 0!==arguments[1]&&arguments[1];t(this,e),this.press=[],this.down=[],this.up=[],this._bound=!1,this.arrowMoveSpeedupEnabled=!0,this.arrowBindings={},this.element=o,Object.assign(this.arrowBindings,e.arrowBindings),this.arrowMoveSpeed=e.arrowMoveSpeed,this.arrowMoveSpeedup=e.arrowMoveSpeedup,this.arrowMoveSpeedMax=e.arrowMoveSpeedMax,s&&this.bind()}return r(e,[{key:"bindArrows",value:function(){for(var o in this.arrowBindings)this.registerKeydown(o,e.arrowMove.bind(this)),this.registerKeyup(o,e.arrowMove.bind(this));this.bindArrows=function(){}}},{key:"bind",value:function(){var e=this;return!this._bound&&(this.element.addEventListener("keypress",function(o){return e._handler.bind(e)("keypress",o)},!1),this.element.addEventListener("keyup",function(o){return e._handler.bind(e)("keyup",o)},!1),this.element.addEventListener("keydown",function(o){return e._handler.bind(e)("keydown",o)},!1),this._bound=!0)}},{key:"_handler",value:function(e,o){var s=!1;return this[e.replace("key","")].forEach(function(n){n.key===o.key&&(s=!n.callback(o,e))}),s}},{key:"registerKeypress",value:function(o,s){var n;return this.press.push(n={key:o,callback:s,id:e._idcntr++,type:"press"}),n}},{key:"registerKeydown",value:function(o,s){var n;return this.down.push(n={key:o,callback:s,id:e._idcntr++,type:"down"}),n}},{key:"registerKeyup",value:function(o,s){var n;return this.up.push(n={key:o,callback:s,id:e._idcntr++,type:"up"}),n}},{key:"unregister",value:function(e,o){var s;return"number"==typeof e?(s=this.press.findIndex(function(o){return o.id===e}))>=0?this.press.splice(s,1,o):(s=this.down.findIndex(function(o){return o.id===e}))>=0?this.down.splice(s,1,o):(s=this.up.findIndex(function(o){return o.id===e}))>=0&&this.up.splice(s,1,o):"string"!=typeof e?this[e.type].splice(this[e.type].findIndex(function(o){return o.id===e.id}),1,o):(this.press=this.press.filter(function(o){return o.key!==e}),this.down=this.down.filter(function(o){return o.key!==e}),void(this.up=this.up.filter(function(o){return o.key!==e})))}}],[{key:"arrowMove",value:function(o,n){return"keydown"===n?(o.target._cc_.translate(this.arrowMoveSpeed*this.arrowBindings[o.key][0],this.arrowMoveSpeed*this.arrowBindings[o.key][1]),this.arrowMoveSpeedupEnabled&&(this.arrowMoveSpeed=s(this.arrowMoveSpeed+this.arrowMoveSpeedup,0,this.arrowMoveSpeedMax))):this.arrowMoveSpeed=e.arrowMoveSpeed,!1}}]),e}();j._idcntr=0,j.arrowMoveSpeed=5,j.arrowMoveSpeedup=.5,j.arrowMoveSpeedMax=20,j.arrowBindings={ArrowUp:[0,1],ArrowDown:[0,-1],ArrowLeft:[1,0],ArrowRight:[-1,0]},e.KeyBind=j;var _=function(){function e(){var s=arguments.length>0&&void 0!==arguments[0]?arguments[0]:e.defaultOpts;if(t(this,e),this.x=0,this.y=0,this.dx=0,this.dy=0,this.index=-1,this.enabled=!0,this.pstate=!1,this.position=2,o(s,e.defaultOpts),[s.x,s.y,s.dx,s.dy,s.position,s.index].some(function(e){return isNaN(e)||""===e}))throw i.ENOTNUM;this.x=1*s.x,this.y=1*s.y,this.dx=1*s.dx,this.dy=1*s.dy,this.position=0|s.position,this.index=0|s.index,this.enabled=!!s.enabled,this._id=e._idcntr++}return r(e,[{key:"blur",value:function(){return!0}},{key:"focus",value:function(){return!1}},{key:"click",value:function(){return!0}},{key:"_isOn",value:function(o){var s=l([(this.position&c.Position.FIXED)===c.Position.FIXED?(this.x-this.parent.trans[0])/this.parent.scl[0]:this.x,(this.position&c.Position.FIXED)===c.Position.FIXED?(this.y-this.parent.trans[1])/this.parent.scl[1]:this.y,(this.position&c.Position.UNSCALABLE)===c.Position.UNSCALABLE?this.dx/this.parent.scl[0]:this.dx,(this.position&c.Position.UNSCALABLE)===c.Position.UNSCALABLE?this.dy/this.parent.scl[1]:this.dy],[o[0],o[1]],e.sensitivity);return!s&&this.pstate&&(this.blur(o),this.pstate=!1),s}}]),e}();_.sensitivity=.3,_._idcntr=0,_.defaultOpts={x:0,y:0,dx:0,dy:0,index:-1,pstate:!1,enabled:!0,position:2,parent:new m},e.CanvasButton=_,m.CanvasButton=_;var f=function(){function e(){var o=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[];t(this,e),this.props=Array.from(o.map(Number))}return r(e,[{key:"add",value:function(o){var s=this,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;return o instanceof e?this.props.forEach(function(e,t){s.props[t]+=n*o[t]}):this.props.forEach(function(e,t){s.props[t]+=n*o}),this}},{key:"mult",value:function(o){var s=this,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;return o instanceof e?this.props.forEach(function(e,t){s.props[t]*=Math.pow(o[t],n)}):this.props.forEach(function(e,t){s.props[t]*=Math.pow(o,n)}),this}},{key:"dot",value:function(e){return this.props.reduce(function(o,s,n){return o+s*e[n]})}}]),e}();e.Vector=f;var a=function(){function e(o,s){var n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];t(this,e),this.resources=[],this._loadcntr=0,this.resources=Array.from(o),this.load=s||this.load,n&&this.bind(this.load)}return r(e,[{key:"bind",value:function(e){var o=this;e&&(this.load=e),this.resources.forEach(function(e){e.addEventListener("load",function(){++o._loadcntr===o.resources.length&&o.load(e,o._loadcntr)})})}},{key:"load",value:function(e,o){}}],[{key:"images",value:function(o,s){var n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2],t=[],u=!0,r=!1,d=void 0;try{for(var l,c=o[Symbol.iterator]();!(u=(l=c.next()).done);u=!0){var i=l.value,m=new Image;m.src=i,t.push(m)}}catch(e){r=!0,d=e}finally{try{u||null==c.return||c.return()}finally{if(r)throw d}}return new e(t,s,n)}},{key:"audios",value:function(o,s){var n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2],t=[],u=!0,r=!1,d=void 0;try{for(var l,c=o[Symbol.iterator]();!(u=(l=c.next()).done);u=!0){var i=l.value,m=new Audio(i);m.load(),t.push(m)}}catch(e){r=!0,d=e}finally{try{u||null==c.return||c.return()}finally{if(r)throw d}}return new e(t,s,n)}}]),e}();e.ResourceLoader=a}(d=o.CanvasControls||(o.CanvasControls={})),o.default=d.ControllableCanvas},"./node_modules/@babel/polyfill/lib/index.js":
/*!***************************************************!*\
  !*** ./node_modules/@babel/polyfill/lib/index.js ***!
  \***************************************************/
/*! no static exports found */function(e,o,s){"use strict";(function(e){s(/*! core-js/es6 */"./node_modules/core-js/es6/index.js"),s(/*! core-js/fn/array/includes */"./node_modules/core-js/fn/array/includes.js"),s(/*! core-js/fn/string/pad-start */"./node_modules/core-js/fn/string/pad-start.js"),s(/*! core-js/fn/string/pad-end */"./node_modules/core-js/fn/string/pad-end.js"),s(/*! core-js/fn/symbol/async-iterator */"./node_modules/core-js/fn/symbol/async-iterator.js"),s(/*! core-js/fn/object/get-own-property-descriptors */"./node_modules/core-js/fn/object/get-own-property-descriptors.js"),s(/*! core-js/fn/object/values */"./node_modules/core-js/fn/object/values.js"),s(/*! core-js/fn/object/entries */"./node_modules/core-js/fn/object/entries.js"),s(/*! core-js/fn/promise/finally */"./node_modules/core-js/fn/promise/finally.js"),s(/*! core-js/web */"./node_modules/core-js/web/index.js"),s(/*! regenerator-runtime/runtime */"./node_modules/regenerator-runtime/runtime.js"),e._babelPolyfill&&"undefined"!=typeof console&&console.warn&&console.warn("@babel/polyfill is loaded more than once on this page. This is probably not desirable/intended and may have consequences if different versions of the polyfills are applied sequentially. If you do need to load the polyfill more than once, use @babel/polyfill/noConflict instead to bypass the warning."),e._babelPolyfill=!0}).call(this,s(/*! ./../../../webpack/buildin/global.js */"./node_modules/webpack/buildin/global.js"))},"./node_modules/core-js/es6/index.js":
/*!*******************************************!*\
  !*** ./node_modules/core-js/es6/index.js ***!
  \*******************************************/
/*! no static exports found */function(e,o,s){s(/*! ../modules/es6.symbol */"./node_modules/core-js/modules/es6.symbol.js"),s(/*! ../modules/es6.object.create */"./node_modules/core-js/modules/es6.object.create.js"),s(/*! ../modules/es6.object.define-property */"./node_modules/core-js/modules/es6.object.define-property.js"),s(/*! ../modules/es6.object.define-properties */"./node_modules/core-js/modules/es6.object.define-properties.js"),s(/*! ../modules/es6.object.get-own-property-descriptor */"./node_modules/core-js/modules/es6.object.get-own-property-descriptor.js"),s(/*! ../modules/es6.object.get-prototype-of */"./node_modules/core-js/modules/es6.object.get-prototype-of.js"),s(/*! ../modules/es6.object.keys */"./node_modules/core-js/modules/es6.object.keys.js"),s(/*! ../modules/es6.object.get-own-property-names */"./node_modules/core-js/modules/es6.object.get-own-property-names.js"),s(/*! ../modules/es6.object.freeze */"./node_modules/core-js/modules/es6.object.freeze.js"),s(/*! ../modules/es6.object.seal */"./node_modules/core-js/modules/es6.object.seal.js"),s(/*! ../modules/es6.object.prevent-extensions */"./node_modules/core-js/modules/es6.object.prevent-extensions.js"),s(/*! ../modules/es6.object.is-frozen */"./node_modules/core-js/modules/es6.object.is-frozen.js"),s(/*! ../modules/es6.object.is-sealed */"./node_modules/core-js/modules/es6.object.is-sealed.js"),s(/*! ../modules/es6.object.is-extensible */"./node_modules/core-js/modules/es6.object.is-extensible.js"),s(/*! ../modules/es6.object.assign */"./node_modules/core-js/modules/es6.object.assign.js"),s(/*! ../modules/es6.object.is */"./node_modules/core-js/modules/es6.object.is.js"),s(/*! ../modules/es6.object.set-prototype-of */"./node_modules/core-js/modules/es6.object.set-prototype-of.js"),s(/*! ../modules/es6.object.to-string */"./node_modules/core-js/modules/es6.object.to-string.js"),s(/*! ../modules/es6.function.bind */"./node_modules/core-js/modules/es6.function.bind.js"),s(/*! ../modules/es6.function.name */"./node_modules/core-js/modules/es6.function.name.js"),s(/*! ../modules/es6.function.has-instance */"./node_modules/core-js/modules/es6.function.has-instance.js"),s(/*! ../modules/es6.parse-int */"./node_modules/core-js/modules/es6.parse-int.js"),s(/*! ../modules/es6.parse-float */"./node_modules/core-js/modules/es6.parse-float.js"),s(/*! ../modules/es6.number.constructor */"./node_modules/core-js/modules/es6.number.constructor.js"),s(/*! ../modules/es6.number.to-fixed */"./node_modules/core-js/modules/es6.number.to-fixed.js"),s(/*! ../modules/es6.number.to-precision */"./node_modules/core-js/modules/es6.number.to-precision.js"),s(/*! ../modules/es6.number.epsilon */"./node_modules/core-js/modules/es6.number.epsilon.js"),s(/*! ../modules/es6.number.is-finite */"./node_modules/core-js/modules/es6.number.is-finite.js"),s(/*! ../modules/es6.number.is-integer */"./node_modules/core-js/modules/es6.number.is-integer.js"),s(/*! ../modules/es6.number.is-nan */"./node_modules/core-js/modules/es6.number.is-nan.js"),s(/*! ../modules/es6.number.is-safe-integer */"./node_modules/core-js/modules/es6.number.is-safe-integer.js"),s(/*! ../modules/es6.number.max-safe-integer */"./node_modules/core-js/modules/es6.number.max-safe-integer.js"),s(/*! ../modules/es6.number.min-safe-integer */"./node_modules/core-js/modules/es6.number.min-safe-integer.js"),s(/*! ../modules/es6.number.parse-float */"./node_modules/core-js/modules/es6.number.parse-float.js"),s(/*! ../modules/es6.number.parse-int */"./node_modules/core-js/modules/es6.number.parse-int.js"),s(/*! ../modules/es6.math.acosh */"./node_modules/core-js/modules/es6.math.acosh.js"),s(/*! ../modules/es6.math.asinh */"./node_modules/core-js/modules/es6.math.asinh.js"),s(/*! ../modules/es6.math.atanh */"./node_modules/core-js/modules/es6.math.atanh.js"),s(/*! ../modules/es6.math.cbrt */"./node_modules/core-js/modules/es6.math.cbrt.js"),s(/*! ../modules/es6.math.clz32 */"./node_modules/core-js/modules/es6.math.clz32.js"),s(/*! ../modules/es6.math.cosh */"./node_modules/core-js/modules/es6.math.cosh.js"),s(/*! ../modules/es6.math.expm1 */"./node_modules/core-js/modules/es6.math.expm1.js"),s(/*! ../modules/es6.math.fround */"./node_modules/core-js/modules/es6.math.fround.js"),s(/*! ../modules/es6.math.hypot */"./node_modules/core-js/modules/es6.math.hypot.js"),s(/*! ../modules/es6.math.imul */"./node_modules/core-js/modules/es6.math.imul.js"),s(/*! ../modules/es6.math.log10 */"./node_modules/core-js/modules/es6.math.log10.js"),s(/*! ../modules/es6.math.log1p */"./node_modules/core-js/modules/es6.math.log1p.js"),s(/*! ../modules/es6.math.log2 */"./node_modules/core-js/modules/es6.math.log2.js"),s(/*! ../modules/es6.math.sign */"./node_modules/core-js/modules/es6.math.sign.js"),s(/*! ../modules/es6.math.sinh */"./node_modules/core-js/modules/es6.math.sinh.js"),s(/*! ../modules/es6.math.tanh */"./node_modules/core-js/modules/es6.math.tanh.js"),s(/*! ../modules/es6.math.trunc */"./node_modules/core-js/modules/es6.math.trunc.js"),s(/*! ../modules/es6.string.from-code-point */"./node_modules/core-js/modules/es6.string.from-code-point.js"),s(/*! ../modules/es6.string.raw */"./node_modules/core-js/modules/es6.string.raw.js"),s(/*! ../modules/es6.string.trim */"./node_modules/core-js/modules/es6.string.trim.js"),s(/*! ../modules/es6.string.iterator */"./node_modules/core-js/modules/es6.string.iterator.js"),s(/*! ../modules/es6.string.code-point-at */"./node_modules/core-js/modules/es6.string.code-point-at.js"),s(/*! ../modules/es6.string.ends-with */"./node_modules/core-js/modules/es6.string.ends-with.js"),s(/*! ../modules/es6.string.includes */"./node_modules/core-js/modules/es6.string.includes.js"),s(/*! ../modules/es6.string.repeat */"./node_modules/core-js/modules/es6.string.repeat.js"),s(/*! ../modules/es6.string.starts-with */"./node_modules/core-js/modules/es6.string.starts-with.js"),s(/*! ../modules/es6.string.anchor */"./node_modules/core-js/modules/es6.string.anchor.js"),s(/*! ../modules/es6.string.big */"./node_modules/core-js/modules/es6.string.big.js"),s(/*! ../modules/es6.string.blink */"./node_modules/core-js/modules/es6.string.blink.js"),s(/*! ../modules/es6.string.bold */"./node_modules/core-js/modules/es6.string.bold.js"),s(/*! ../modules/es6.string.fixed */"./node_modules/core-js/modules/es6.string.fixed.js"),s(/*! ../modules/es6.string.fontcolor */"./node_modules/core-js/modules/es6.string.fontcolor.js"),s(/*! ../modules/es6.string.fontsize */"./node_modules/core-js/modules/es6.string.fontsize.js"),s(/*! ../modules/es6.string.italics */"./node_modules/core-js/modules/es6.string.italics.js"),s(/*! ../modules/es6.string.link */"./node_modules/core-js/modules/es6.string.link.js"),s(/*! ../modules/es6.string.small */"./node_modules/core-js/modules/es6.string.small.js"),s(/*! ../modules/es6.string.strike */"./node_modules/core-js/modules/es6.string.strike.js"),s(/*! ../modules/es6.string.sub */"./node_modules/core-js/modules/es6.string.sub.js"),s(/*! ../modules/es6.string.sup */"./node_modules/core-js/modules/es6.string.sup.js"),s(/*! ../modules/es6.date.now */"./node_modules/core-js/modules/es6.date.now.js"),s(/*! ../modules/es6.date.to-json */"./node_modules/core-js/modules/es6.date.to-json.js"),s(/*! ../modules/es6.date.to-iso-string */"./node_modules/core-js/modules/es6.date.to-iso-string.js"),s(/*! ../modules/es6.date.to-string */"./node_modules/core-js/modules/es6.date.to-string.js"),s(/*! ../modules/es6.date.to-primitive */"./node_modules/core-js/modules/es6.date.to-primitive.js"),s(/*! ../modules/es6.array.is-array */"./node_modules/core-js/modules/es6.array.is-array.js"),s(/*! ../modules/es6.array.from */"./node_modules/core-js/modules/es6.array.from.js"),s(/*! ../modules/es6.array.of */"./node_modules/core-js/modules/es6.array.of.js"),s(/*! ../modules/es6.array.join */"./node_modules/core-js/modules/es6.array.join.js"),s(/*! ../modules/es6.array.slice */"./node_modules/core-js/modules/es6.array.slice.js"),s(/*! ../modules/es6.array.sort */"./node_modules/core-js/modules/es6.array.sort.js"),s(/*! ../modules/es6.array.for-each */"./node_modules/core-js/modules/es6.array.for-each.js"),s(/*! ../modules/es6.array.map */"./node_modules/core-js/modules/es6.array.map.js"),s(/*! ../modules/es6.array.filter */"./node_modules/core-js/modules/es6.array.filter.js"),s(/*! ../modules/es6.array.some */"./node_modules/core-js/modules/es6.array.some.js"),s(/*! ../modules/es6.array.every */"./node_modules/core-js/modules/es6.array.every.js"),s(/*! ../modules/es6.array.reduce */"./node_modules/core-js/modules/es6.array.reduce.js"),s(/*! ../modules/es6.array.reduce-right */"./node_modules/core-js/modules/es6.array.reduce-right.js"),s(/*! ../modules/es6.array.index-of */"./node_modules/core-js/modules/es6.array.index-of.js"),s(/*! ../modules/es6.array.last-index-of */"./node_modules/core-js/modules/es6.array.last-index-of.js"),s(/*! ../modules/es6.array.copy-within */"./node_modules/core-js/modules/es6.array.copy-within.js"),s(/*! ../modules/es6.array.fill */"./node_modules/core-js/modules/es6.array.fill.js"),s(/*! ../modules/es6.array.find */"./node_modules/core-js/modules/es6.array.find.js"),s(/*! ../modules/es6.array.find-index */"./node_modules/core-js/modules/es6.array.find-index.js"),s(/*! ../modules/es6.array.species */"./node_modules/core-js/modules/es6.array.species.js"),s(/*! ../modules/es6.array.iterator */"./node_modules/core-js/modules/es6.array.iterator.js"),s(/*! ../modules/es6.regexp.constructor */"./node_modules/core-js/modules/es6.regexp.constructor.js"),s(/*! ../modules/es6.regexp.exec */"./node_modules/core-js/modules/es6.regexp.exec.js"),s(/*! ../modules/es6.regexp.to-string */"./node_modules/core-js/modules/es6.regexp.to-string.js"),s(/*! ../modules/es6.regexp.flags */"./node_modules/core-js/modules/es6.regexp.flags.js"),s(/*! ../modules/es6.regexp.match */"./node_modules/core-js/modules/es6.regexp.match.js"),s(/*! ../modules/es6.regexp.replace */"./node_modules/core-js/modules/es6.regexp.replace.js"),s(/*! ../modules/es6.regexp.search */"./node_modules/core-js/modules/es6.regexp.search.js"),s(/*! ../modules/es6.regexp.split */"./node_modules/core-js/modules/es6.regexp.split.js"),s(/*! ../modules/es6.promise */"./node_modules/core-js/modules/es6.promise.js"),s(/*! ../modules/es6.map */"./node_modules/core-js/modules/es6.map.js"),s(/*! ../modules/es6.set */"./node_modules/core-js/modules/es6.set.js"),s(/*! ../modules/es6.weak-map */"./node_modules/core-js/modules/es6.weak-map.js"),s(/*! ../modules/es6.weak-set */"./node_modules/core-js/modules/es6.weak-set.js"),s(/*! ../modules/es6.typed.array-buffer */"./node_modules/core-js/modules/es6.typed.array-buffer.js"),s(/*! ../modules/es6.typed.data-view */"./node_modules/core-js/modules/es6.typed.data-view.js"),s(/*! ../modules/es6.typed.int8-array */"./node_modules/core-js/modules/es6.typed.int8-array.js"),s(/*! ../modules/es6.typed.uint8-array */"./node_modules/core-js/modules/es6.typed.uint8-array.js"),s(/*! ../modules/es6.typed.uint8-clamped-array */"./node_modules/core-js/modules/es6.typed.uint8-clamped-array.js"),s(/*! ../modules/es6.typed.int16-array */"./node_modules/core-js/modules/es6.typed.int16-array.js"),s(/*! ../modules/es6.typed.uint16-array */"./node_modules/core-js/modules/es6.typed.uint16-array.js"),s(/*! ../modules/es6.typed.int32-array */"./node_modules/core-js/modules/es6.typed.int32-array.js"),s(/*! ../modules/es6.typed.uint32-array */"./node_modules/core-js/modules/es6.typed.uint32-array.js"),s(/*! ../modules/es6.typed.float32-array */"./node_modules/core-js/modules/es6.typed.float32-array.js"),s(/*! ../modules/es6.typed.float64-array */"./node_modules/core-js/modules/es6.typed.float64-array.js"),s(/*! ../modules/es6.reflect.apply */"./node_modules/core-js/modules/es6.reflect.apply.js"),s(/*! ../modules/es6.reflect.construct */"./node_modules/core-js/modules/es6.reflect.construct.js"),s(/*! ../modules/es6.reflect.define-property */"./node_modules/core-js/modules/es6.reflect.define-property.js"),s(/*! ../modules/es6.reflect.delete-property */"./node_modules/core-js/modules/es6.reflect.delete-property.js"),s(/*! ../modules/es6.reflect.enumerate */"./node_modules/core-js/modules/es6.reflect.enumerate.js"),s(/*! ../modules/es6.reflect.get */"./node_modules/core-js/modules/es6.reflect.get.js"),s(/*! ../modules/es6.reflect.get-own-property-descriptor */"./node_modules/core-js/modules/es6.reflect.get-own-property-descriptor.js"),s(/*! ../modules/es6.reflect.get-prototype-of */"./node_modules/core-js/modules/es6.reflect.get-prototype-of.js"),s(/*! ../modules/es6.reflect.has */"./node_modules/core-js/modules/es6.reflect.has.js"),s(/*! ../modules/es6.reflect.is-extensible */"./node_modules/core-js/modules/es6.reflect.is-extensible.js"),s(/*! ../modules/es6.reflect.own-keys */"./node_modules/core-js/modules/es6.reflect.own-keys.js"),s(/*! ../modules/es6.reflect.prevent-extensions */"./node_modules/core-js/modules/es6.reflect.prevent-extensions.js"),s(/*! ../modules/es6.reflect.set */"./node_modules/core-js/modules/es6.reflect.set.js"),s(/*! ../modules/es6.reflect.set-prototype-of */"./node_modules/core-js/modules/es6.reflect.set-prototype-of.js"),e.exports=s(/*! ../modules/_core */"./node_modules/core-js/modules/_core.js")},"./node_modules/core-js/fn/array/includes.js":
/*!***************************************************!*\
  !*** ./node_modules/core-js/fn/array/includes.js ***!
  \***************************************************/
/*! no static exports found */function(e,o,s){s(/*! ../../modules/es7.array.includes */"./node_modules/core-js/modules/es7.array.includes.js"),e.exports=s(/*! ../../modules/_core */"./node_modules/core-js/modules/_core.js").Array.includes},"./node_modules/core-js/fn/object/entries.js":
/*!***************************************************!*\
  !*** ./node_modules/core-js/fn/object/entries.js ***!
  \***************************************************/
/*! no static exports found */function(e,o,s){s(/*! ../../modules/es7.object.entries */"./node_modules/core-js/modules/es7.object.entries.js"),e.exports=s(/*! ../../modules/_core */"./node_modules/core-js/modules/_core.js").Object.entries},"./node_modules/core-js/fn/object/get-own-property-descriptors.js":
/*!************************************************************************!*\
  !*** ./node_modules/core-js/fn/object/get-own-property-descriptors.js ***!
  \************************************************************************/
/*! no static exports found */function(e,o,s){s(/*! ../../modules/es7.object.get-own-property-descriptors */"./node_modules/core-js/modules/es7.object.get-own-property-descriptors.js"),e.exports=s(/*! ../../modules/_core */"./node_modules/core-js/modules/_core.js").Object.getOwnPropertyDescriptors},"./node_modules/core-js/fn/object/values.js":
/*!**************************************************!*\
  !*** ./node_modules/core-js/fn/object/values.js ***!
  \**************************************************/
/*! no static exports found */function(e,o,s){s(/*! ../../modules/es7.object.values */"./node_modules/core-js/modules/es7.object.values.js"),e.exports=s(/*! ../../modules/_core */"./node_modules/core-js/modules/_core.js").Object.values},"./node_modules/core-js/fn/promise/finally.js":
/*!****************************************************!*\
  !*** ./node_modules/core-js/fn/promise/finally.js ***!
  \****************************************************/
/*! no static exports found */function(e,o,s){"use strict";s(/*! ../../modules/es6.promise */"./node_modules/core-js/modules/es6.promise.js"),s(/*! ../../modules/es7.promise.finally */"./node_modules/core-js/modules/es7.promise.finally.js"),e.exports=s(/*! ../../modules/_core */"./node_modules/core-js/modules/_core.js").Promise.finally},"./node_modules/core-js/fn/string/pad-end.js":
/*!***************************************************!*\
  !*** ./node_modules/core-js/fn/string/pad-end.js ***!
  \***************************************************/
/*! no static exports found */function(e,o,s){s(/*! ../../modules/es7.string.pad-end */"./node_modules/core-js/modules/es7.string.pad-end.js"),e.exports=s(/*! ../../modules/_core */"./node_modules/core-js/modules/_core.js").String.padEnd},"./node_modules/core-js/fn/string/pad-start.js":
/*!*****************************************************!*\
  !*** ./node_modules/core-js/fn/string/pad-start.js ***!
  \*****************************************************/
/*! no static exports found */function(e,o,s){s(/*! ../../modules/es7.string.pad-start */"./node_modules/core-js/modules/es7.string.pad-start.js"),e.exports=s(/*! ../../modules/_core */"./node_modules/core-js/modules/_core.js").String.padStart},"./node_modules/core-js/fn/symbol/async-iterator.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/fn/symbol/async-iterator.js ***!
  \**********************************************************/
/*! no static exports found */function(e,o,s){s(/*! ../../modules/es7.symbol.async-iterator */"./node_modules/core-js/modules/es7.symbol.async-iterator.js"),e.exports=s(/*! ../../modules/_wks-ext */"./node_modules/core-js/modules/_wks-ext.js").f("asyncIterator")},"./node_modules/core-js/modules/_a-function.js":
/*!*****************************************************!*\
  !*** ./node_modules/core-js/modules/_a-function.js ***!
  \*****************************************************/
/*! no static exports found */function(e,o){e.exports=function(e){if("function"!=typeof e)throw TypeError(e+" is not a function!");return e}},"./node_modules/core-js/modules/_a-number-value.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/modules/_a-number-value.js ***!
  \*********************************************************/
/*! no static exports found */function(e,o,s){var n=s(/*! ./_cof */"./node_modules/core-js/modules/_cof.js");e.exports=function(e,o){if("number"!=typeof e&&"Number"!=n(e))throw TypeError(o);return+e}},"./node_modules/core-js/modules/_add-to-unscopables.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/modules/_add-to-unscopables.js ***!
  \*************************************************************/
/*! no static exports found */function(e,o,s){var n=s(/*! ./_wks */"./node_modules/core-js/modules/_wks.js")("unscopables"),t=Array.prototype;null==t[n]&&s(/*! ./_hide */"./node_modules/core-js/modules/_hide.js")(t,n,{}),e.exports=function(e){t[n][e]=!0}},"./node_modules/core-js/modules/_advance-string-index.js":
/*!***************************************************************!*\
  !*** ./node_modules/core-js/modules/_advance-string-index.js ***!
  \***************************************************************/
/*! no static exports found */function(e,o,s){"use strict";var n=s(/*! ./_string-at */"./node_modules/core-js/modules/_string-at.js")(!0);e.exports=function(e,o,s){return o+(s?n(e,o).length:1)}},"./node_modules/core-js/modules/_an-instance.js":
/*!******************************************************!*\
  !*** ./node_modules/core-js/modules/_an-instance.js ***!
  \******************************************************/
/*! no static exports found */function(e,o){e.exports=function(e,o,s,n){if(!(e instanceof o)||void 0!==n&&n in e)throw TypeError(s+": incorrect invocation!");return e}},"./node_modules/core-js/modules/_an-object.js":
/*!****************************************************!*\
  !*** ./node_modules/core-js/modules/_an-object.js ***!
  \****************************************************/
/*! no static exports found */function(e,o,s){var n=s(/*! ./_is-object */"./node_modules/core-js/modules/_is-object.js");e.exports=function(e){if(!n(e))throw TypeError(e+" is not an object!");return e}},"./node_modules/core-js/modules/_array-copy-within.js":
/*!************************************************************!*\
  !*** ./node_modules/core-js/modules/_array-copy-within.js ***!
  \************************************************************/
/*! no static exports found */function(e,o,s){"use strict";var n=s(/*! ./_to-object */"./node_modules/core-js/modules/_to-object.js"),t=s(/*! ./_to-absolute-index */"./node_modules/core-js/modules/_to-absolute-index.js"),u=s(/*! ./_to-length */"./node_modules/core-js/modules/_to-length.js");e.exports=[].copyWithin||function(e,o){var s=n(this),r=u(s.length),d=t(e,r),l=t(o,r),c=arguments.length>2?arguments[2]:void 0,i=Math.min((void 0===c?r:t(c,r))-l,r-d),m=1;for(l<d&&d<l+i&&(m=-1,l+=i-1,d+=i-1);i-- >0;)l in s?s[d]=s[l]:delete s[d],d+=m,l+=m;return s}},"./node_modules/core-js/modules/_array-fill.js":
/*!*****************************************************!*\
  !*** ./node_modules/core-js/modules/_array-fill.js ***!
  \*****************************************************/
/*! no static exports found */function(e,o,s){"use strict";var n=s(/*! ./_to-object */"./node_modules/core-js/modules/_to-object.js"),t=s(/*! ./_to-absolute-index */"./node_modules/core-js/modules/_to-absolute-index.js"),u=s(/*! ./_to-length */"./node_modules/core-js/modules/_to-length.js");e.exports=function(e){for(var o=n(this),s=u(o.length),r=arguments.length,d=t(r>1?arguments[1]:void 0,s),l=r>2?arguments[2]:void 0,c=void 0===l?s:t(l,s);c>d;)o[d++]=e;return o}},"./node_modules/core-js/modules/_array-includes.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/modules/_array-includes.js ***!
  \*********************************************************/
/*! no static exports found */function(e,o,s){var n=s(/*! ./_to-iobject */"./node_modules/core-js/modules/_to-iobject.js"),t=s(/*! ./_to-length */"./node_modules/core-js/modules/_to-length.js"),u=s(/*! ./_to-absolute-index */"./node_modules/core-js/modules/_to-absolute-index.js");e.exports=function(e){return function(o,s,r){var d,l=n(o),c=t(l.length),i=u(r,c);if(e&&s!=s){for(;c>i;)if((d=l[i++])!=d)return!0}else for(;c>i;i++)if((e||i in l)&&l[i]===s)return e||i||0;return!e&&-1}}},"./node_modules/core-js/modules/_array-methods.js":
/*!********************************************************!*\
  !*** ./node_modules/core-js/modules/_array-methods.js ***!
  \********************************************************/
/*! no static exports found */function(e,o,s){var n=s(/*! ./_ctx */"./node_modules/core-js/modules/_ctx.js"),t=s(/*! ./_iobject */"./node_modules/core-js/modules/_iobject.js"),u=s(/*! ./_to-object */"./node_modules/core-js/modules/_to-object.js"),r=s(/*! ./_to-length */"./node_modules/core-js/modules/_to-length.js"),d=s(/*! ./_array-species-create */"./node_modules/core-js/modules/_array-species-create.js");e.exports=function(e,o){var s=1==e,l=2==e,c=3==e,i=4==e,m=6==e,j=5==e||m,_=o||d;return function(o,d,f){for(var a,h,p=u(o),v=t(p),g=n(d,f,3),b=r(v.length),w=0,x=s?_(o,b):l?_(o,0):void 0;b>w;w++)if((j||w in v)&&(h=g(a=v[w],w,p),e))if(s)x[w]=h;else if(h)switch(e){case 3:return!0;case 5:return a;case 6:return w;case 2:x.push(a)}else if(i)return!1;return m?-1:c||i?i:x}}},"./node_modules/core-js/modules/_array-reduce.js":
/*!*******************************************************!*\
  !*** ./node_modules/core-js/modules/_array-reduce.js ***!
  \*******************************************************/
/*! no static exports found */function(e,o,s){var n=s(/*! ./_a-function */"./node_modules/core-js/modules/_a-function.js"),t=s(/*! ./_to-object */"./node_modules/core-js/modules/_to-object.js"),u=s(/*! ./_iobject */"./node_modules/core-js/modules/_iobject.js"),r=s(/*! ./_to-length */"./node_modules/core-js/modules/_to-length.js");e.exports=function(e,o,s,d,l){n(o);var c=t(e),i=u(c),m=r(c.length),j=l?m-1:0,_=l?-1:1;if(s<2)for(;;){if(j in i){d=i[j],j+=_;break}if(j+=_,l?j<0:m<=j)throw TypeError("Reduce of empty array with no initial value")}for(;l?j>=0:m>j;j+=_)j in i&&(d=o(d,i[j],j,c));return d}},"./node_modules/core-js/modules/_array-species-constructor.js":
/*!********************************************************************!*\
  !*** ./node_modules/core-js/modules/_array-species-constructor.js ***!
  \********************************************************************/
/*! no static exports found */function(e,o,s){var n=s(/*! ./_is-object */"./node_modules/core-js/modules/_is-object.js"),t=s(/*! ./_is-array */"./node_modules/core-js/modules/_is-array.js"),u=s(/*! ./_wks */"./node_modules/core-js/modules/_wks.js")("species");e.exports=function(e){var o;return t(e)&&("function"!=typeof(o=e.constructor)||o!==Array&&!t(o.prototype)||(o=void 0),n(o)&&null===(o=o[u])&&(o=void 0)),void 0===o?Array:o}},"./node_modules/core-js/modules/_array-species-create.js":
/*!***************************************************************!*\
  !*** ./node_modules/core-js/modules/_array-species-create.js ***!
  \***************************************************************/
/*! no static exports found */function(e,o,s){var n=s(/*! ./_array-species-constructor */"./node_modules/core-js/modules/_array-species-constructor.js");e.exports=function(e,o){return new(n(e))(o)}},"./node_modules/core-js/modules/_bind.js":
/*!***********************************************!*\
  !*** ./node_modules/core-js/modules/_bind.js ***!
  \***********************************************/
/*! no static exports found */function(e,o,s){"use strict";var n=s(/*! ./_a-function */"./node_modules/core-js/modules/_a-function.js"),t=s(/*! ./_is-object */"./node_modules/core-js/modules/_is-object.js"),u=s(/*! ./_invoke */"./node_modules/core-js/modules/_invoke.js"),r=[].slice,d={};e.exports=Function.bind||function(e){var o=n(this),s=r.call(arguments,1),l=function(){var n=s.concat(r.call(arguments));return this instanceof l?function(e,o,s){if(!(o in d)){for(var n=[],t=0;t<o;t++)n[t]="a["+t+"]";d[o]=Function("F,a","return new F("+n.join(",")+")")}return d[o](e,s)}(o,n.length,n):u(o,n,e)};return t(o.prototype)&&(l.prototype=o.prototype),l}},"./node_modules/core-js/modules/_classof.js":
/*!**************************************************!*\
  !*** ./node_modules/core-js/modules/_classof.js ***!
  \**************************************************/
/*! no static exports found */function(e,o,s){var n=s(/*! ./_cof */"./node_modules/core-js/modules/_cof.js"),t=s(/*! ./_wks */"./node_modules/core-js/modules/_wks.js")("toStringTag"),u="Arguments"==n(function(){return arguments}());e.exports=function(e){var o,s,r;return void 0===e?"Undefined":null===e?"Null":"string"==typeof(s=function(e,o){try{return e[o]}catch(e){}}(o=Object(e),t))?s:u?n(o):"Object"==(r=n(o))&&"function"==typeof o.callee?"Arguments":r}},"./node_modules/core-js/modules/_cof.js":
/*!**********************************************!*\
  !*** ./node_modules/core-js/modules/_cof.js ***!
  \**********************************************/
/*! no static exports found */function(e,o){var s={}.toString;e.exports=function(e){return s.call(e).slice(8,-1)}},"./node_modules/core-js/modules/_collection-strong.js":
/*!************************************************************!*\
  !*** ./node_modules/core-js/modules/_collection-strong.js ***!
  \************************************************************/
/*! no static exports found */function(e,o,s){"use strict";var n=s(/*! ./_object-dp */"./node_modules/core-js/modules/_object-dp.js").f,t=s(/*! ./_object-create */"./node_modules/core-js/modules/_object-create.js"),u=s(/*! ./_redefine-all */"./node_modules/core-js/modules/_redefine-all.js"),r=s(/*! ./_ctx */"./node_modules/core-js/modules/_ctx.js"),d=s(/*! ./_an-instance */"./node_modules/core-js/modules/_an-instance.js"),l=s(/*! ./_for-of */"./node_modules/core-js/modules/_for-of.js"),c=s(/*! ./_iter-define */"./node_modules/core-js/modules/_iter-define.js"),i=s(/*! ./_iter-step */"./node_modules/core-js/modules/_iter-step.js"),m=s(/*! ./_set-species */"./node_modules/core-js/modules/_set-species.js"),j=s(/*! ./_descriptors */"./node_modules/core-js/modules/_descriptors.js"),_=s(/*! ./_meta */"./node_modules/core-js/modules/_meta.js").fastKey,f=s(/*! ./_validate-collection */"./node_modules/core-js/modules/_validate-collection.js"),a=j?"_s":"size",h=function(e,o){var s,n=_(o);if("F"!==n)return e._i[n];for(s=e._f;s;s=s.n)if(s.k==o)return s};e.exports={getConstructor:function(e,o,s,c){var i=e(function(e,n){d(e,i,o,"_i"),e._t=o,e._i=t(null),e._f=void 0,e._l=void 0,e[a]=0,null!=n&&l(n,s,e[c],e)});return u(i.prototype,{clear:function(){for(var e=f(this,o),s=e._i,n=e._f;n;n=n.n)n.r=!0,n.p&&(n.p=n.p.n=void 0),delete s[n.i];e._f=e._l=void 0,e[a]=0},delete:function(e){var s=f(this,o),n=h(s,e);if(n){var t=n.n,u=n.p;delete s._i[n.i],n.r=!0,u&&(u.n=t),t&&(t.p=u),s._f==n&&(s._f=t),s._l==n&&(s._l=u),s[a]--}return!!n},forEach:function(e){f(this,o);for(var s,n=r(e,arguments.length>1?arguments[1]:void 0,3);s=s?s.n:this._f;)for(n(s.v,s.k,this);s&&s.r;)s=s.p},has:function(e){return!!h(f(this,o),e)}}),j&&n(i.prototype,"size",{get:function(){return f(this,o)[a]}}),i},def:function(e,o,s){var n,t,u=h(e,o);return u?u.v=s:(e._l=u={i:t=_(o,!0),k:o,v:s,p:n=e._l,n:void 0,r:!1},e._f||(e._f=u),n&&(n.n=u),e[a]++,"F"!==t&&(e._i[t]=u)),e},getEntry:h,setStrong:function(e,o,s){c(e,o,function(e,s){this._t=f(e,o),this._k=s,this._l=void 0},function(){for(var e=this._k,o=this._l;o&&o.r;)o=o.p;return this._t&&(this._l=o=o?o.n:this._t._f)?i(0,"keys"==e?o.k:"values"==e?o.v:[o.k,o.v]):(this._t=void 0,i(1))},s?"entries":"values",!s,!0),m(o)}}},"./node_modules/core-js/modules/_collection-weak.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/modules/_collection-weak.js ***!
  \**********************************************************/
/*! no static exports found */function(e,o,s){"use strict";var n=s(/*! ./_redefine-all */"./node_modules/core-js/modules/_redefine-all.js"),t=s(/*! ./_meta */"./node_modules/core-js/modules/_meta.js").getWeak,u=s(/*! ./_an-object */"./node_modules/core-js/modules/_an-object.js"),r=s(/*! ./_is-object */"./node_modules/core-js/modules/_is-object.js"),d=s(/*! ./_an-instance */"./node_modules/core-js/modules/_an-instance.js"),l=s(/*! ./_for-of */"./node_modules/core-js/modules/_for-of.js"),c=s(/*! ./_array-methods */"./node_modules/core-js/modules/_array-methods.js"),i=s(/*! ./_has */"./node_modules/core-js/modules/_has.js"),m=s(/*! ./_validate-collection */"./node_modules/core-js/modules/_validate-collection.js"),j=c(5),_=c(6),f=0,a=function(e){return e._l||(e._l=new h)},h=function(){this.a=[]},p=function(e,o){return j(e.a,function(e){return e[0]===o})};h.prototype={get:function(e){var o=p(this,e);if(o)return o[1]},has:function(e){return!!p(this,e)},set:function(e,o){var s=p(this,e);s?s[1]=o:this.a.push([e,o])},delete:function(e){var o=_(this.a,function(o){return o[0]===e});return~o&&this.a.splice(o,1),!!~o}},e.exports={getConstructor:function(e,o,s,u){var c=e(function(e,n){d(e,c,o,"_i"),e._t=o,e._i=f++,e._l=void 0,null!=n&&l(n,s,e[u],e)});return n(c.prototype,{delete:function(e){if(!r(e))return!1;var s=t(e);return!0===s?a(m(this,o)).delete(e):s&&i(s,this._i)&&delete s[this._i]},has:function(e){if(!r(e))return!1;var s=t(e);return!0===s?a(m(this,o)).has(e):s&&i(s,this._i)}}),c},def:function(e,o,s){var n=t(u(o),!0);return!0===n?a(e).set(o,s):n[e._i]=s,e},ufstore:a}},"./node_modules/core-js/modules/_collection.js":
/*!*****************************************************!*\
  !*** ./node_modules/core-js/modules/_collection.js ***!
  \*****************************************************/
/*! no static exports found */function(e,o,s){"use strict";var n=s(/*! ./_global */"./node_modules/core-js/modules/_global.js"),t=s(/*! ./_export */"./node_modules/core-js/modules/_export.js"),u=s(/*! ./_redefine */"./node_modules/core-js/modules/_redefine.js"),r=s(/*! ./_redefine-all */"./node_modules/core-js/modules/_redefine-all.js"),d=s(/*! ./_meta */"./node_modules/core-js/modules/_meta.js"),l=s(/*! ./_for-of */"./node_modules/core-js/modules/_for-of.js"),c=s(/*! ./_an-instance */"./node_modules/core-js/modules/_an-instance.js"),i=s(/*! ./_is-object */"./node_modules/core-js/modules/_is-object.js"),m=s(/*! ./_fails */"./node_modules/core-js/modules/_fails.js"),j=s(/*! ./_iter-detect */"./node_modules/core-js/modules/_iter-detect.js"),_=s(/*! ./_set-to-string-tag */"./node_modules/core-js/modules/_set-to-string-tag.js"),f=s(/*! ./_inherit-if-required */"./node_modules/core-js/modules/_inherit-if-required.js");e.exports=function(e,o,s,a,h,p){var v=n[e],g=v,b=h?"set":"add",w=g&&g.prototype,x={},y=function(e){var o=w[e];u(w,e,"delete"==e?function(e){return!(p&&!i(e))&&o.call(this,0===e?0:e)}:"has"==e?function(e){return!(p&&!i(e))&&o.call(this,0===e?0:e)}:"get"==e?function(e){return p&&!i(e)?void 0:o.call(this,0===e?0:e)}:"add"==e?function(e){return o.call(this,0===e?0:e),this}:function(e,s){return o.call(this,0===e?0:e,s),this})};if("function"==typeof g&&(p||w.forEach&&!m(function(){(new g).entries().next()}))){var S=new g,M=S[b](p?{}:-0,1)!=S,F=m(function(){S.has(1)}),k=j(function(e){new g(e)}),N=!p&&m(function(){for(var e=new g,o=5;o--;)e[b](o,o);return!e.has(-0)});k||((g=o(function(o,s){c(o,g,e);var n=f(new v,o,g);return null!=s&&l(s,h,n[b],n),n})).prototype=w,w.constructor=g),(F||N)&&(y("delete"),y("has"),h&&y("get")),(N||M)&&y(b),p&&w.clear&&delete w.clear}else g=a.getConstructor(o,e,h,b),r(g.prototype,s),d.NEED=!0;return _(g,e),x[e]=g,t(t.G+t.W+t.F*(g!=v),x),p||a.setStrong(g,e,h),g}},"./node_modules/core-js/modules/_core.js":
/*!***********************************************!*\
  !*** ./node_modules/core-js/modules/_core.js ***!
  \***********************************************/
/*! no static exports found */function(e,o){var s=e.exports={version:"2.6.1"};"number"==typeof __e&&(__e=s)},"./node_modules/core-js/modules/_create-property.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/modules/_create-property.js ***!
  \**********************************************************/
/*! no static exports found */function(e,o,s){"use strict";var n=s(/*! ./_object-dp */"./node_modules/core-js/modules/_object-dp.js"),t=s(/*! ./_property-desc */"./node_modules/core-js/modules/_property-desc.js");e.exports=function(e,o,s){o in e?n.f(e,o,t(0,s)):e[o]=s}},"./node_modules/core-js/modules/_ctx.js":
/*!**********************************************!*\
  !*** ./node_modules/core-js/modules/_ctx.js ***!
  \**********************************************/
/*! no static exports found */function(e,o,s){var n=s(/*! ./_a-function */"./node_modules/core-js/modules/_a-function.js");e.exports=function(e,o,s){if(n(e),void 0===o)return e;switch(s){case 1:return function(s){return e.call(o,s)};case 2:return function(s,n){return e.call(o,s,n)};case 3:return function(s,n,t){return e.call(o,s,n,t)}}return function(){return e.apply(o,arguments)}}},"./node_modules/core-js/modules/_date-to-iso-string.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/modules/_date-to-iso-string.js ***!
  \*************************************************************/
/*! no static exports found */function(e,o,s){"use strict";var n=s(/*! ./_fails */"./node_modules/core-js/modules/_fails.js"),t=Date.prototype.getTime,u=Date.prototype.toISOString,r=function(e){return e>9?e:"0"+e};e.exports=n(function(){return"0385-07-25T07:06:39.999Z"!=u.call(new Date(-5e13-1))})||!n(function(){u.call(new Date(NaN))})?function(){if(!isFinite(t.call(this)))throw RangeError("Invalid time value");var e=this,o=e.getUTCFullYear(),s=e.getUTCMilliseconds(),n=o<0?"-":o>9999?"+":"";return n+("00000"+Math.abs(o)).slice(n?-6:-4)+"-"+r(e.getUTCMonth()+1)+"-"+r(e.getUTCDate())+"T"+r(e.getUTCHours())+":"+r(e.getUTCMinutes())+":"+r(e.getUTCSeconds())+"."+(s>99?s:"0"+r(s))+"Z"}:u},"./node_modules/core-js/modules/_date-to-primitive.js":
/*!************************************************************!*\
  !*** ./node_modules/core-js/modules/_date-to-primitive.js ***!
  \************************************************************/
/*! no static exports found */function(e,o,s){"use strict";var n=s(/*! ./_an-object */"./node_modules/core-js/modules/_an-object.js"),t=s(/*! ./_to-primitive */"./node_modules/core-js/modules/_to-primitive.js");e.exports=function(e){if("string"!==e&&"number"!==e&&"default"!==e)throw TypeError("Incorrect hint");return t(n(this),"number"!=e)}},"./node_modules/core-js/modules/_defined.js":
/*!**************************************************!*\
  !*** ./node_modules/core-js/modules/_defined.js ***!
  \**************************************************/
/*! no static exports found */function(e,o){e.exports=function(e){if(null==e)throw TypeError("Can't call method on  "+e);return e}},"./node_modules/core-js/modules/_descriptors.js":
/*!******************************************************!*\
  !*** ./node_modules/core-js/modules/_descriptors.js ***!
  \******************************************************/
/*! no static exports found */function(e,o,s){e.exports=!s(/*! ./_fails */"./node_modules/core-js/modules/_fails.js")(function(){return 7!=Object.defineProperty({},"a",{get:function(){return 7}}).a})},"./node_modules/core-js/modules/_dom-create.js":
/*!*****************************************************!*\
  !*** ./node_modules/core-js/modules/_dom-create.js ***!
  \*****************************************************/
/*! no static exports found */function(e,o,s){var n=s(/*! ./_is-object */"./node_modules/core-js/modules/_is-object.js"),t=s(/*! ./_global */"./node_modules/core-js/modules/_global.js").document,u=n(t)&&n(t.createElement);e.exports=function(e){return u?t.createElement(e):{}}},"./node_modules/core-js/modules/_enum-bug-keys.js":
/*!********************************************************!*\
  !*** ./node_modules/core-js/modules/_enum-bug-keys.js ***!
  \********************************************************/
/*! no static exports found */function(e,o){e.exports="constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf".split(",")},"./node_modules/core-js/modules/_enum-keys.js":
/*!****************************************************!*\
  !*** ./node_modules/core-js/modules/_enum-keys.js ***!
  \****************************************************/
/*! no static exports found */function(e,o,s){var n=s(/*! ./_object-keys */"./node_modules/core-js/modules/_object-keys.js"),t=s(/*! ./_object-gops */"./node_modules/core-js/modules/_object-gops.js"),u=s(/*! ./_object-pie */"./node_modules/core-js/modules/_object-pie.js");e.exports=function(e){var o=n(e),s=t.f;if(s)for(var r,d=s(e),l=u.f,c=0;d.length>c;)l.call(e,r=d[c++])&&o.push(r);return o}},"./node_modules/core-js/modules/_export.js":
/*!*************************************************!*\
  !*** ./node_modules/core-js/modules/_export.js ***!
  \*************************************************/
/*! no static exports found */function(e,o,s){var n=s(/*! ./_global */"./node_modules/core-js/modules/_global.js"),t=s(/*! ./_core */"./node_modules/core-js/modules/_core.js"),u=s(/*! ./_hide */"./node_modules/core-js/modules/_hide.js"),r=s(/*! ./_redefine */"./node_modules/core-js/modules/_redefine.js"),d=s(/*! ./_ctx */"./node_modules/core-js/modules/_ctx.js"),l=function(e,o,s){var c,i,m,j,_=e&l.F,f=e&l.G,a=e&l.S,h=e&l.P,p=e&l.B,v=f?n:a?n[o]||(n[o]={}):(n[o]||{}).prototype,g=f?t:t[o]||(t[o]={}),b=g.prototype||(g.prototype={});for(c in f&&(s=o),s)m=((i=!_&&v&&void 0!==v[c])?v:s)[c],j=p&&i?d(m,n):h&&"function"==typeof m?d(Function.call,m):m,v&&r(v,c,m,e&l.U),g[c]!=m&&u(g,c,j),h&&b[c]!=m&&(b[c]=m)};n.core=t,l.F=1,l.G=2,l.S=4,l.P=8,l.B=16,l.W=32,l.U=64,l.R=128,e.exports=l},"./node_modules/core-js/modules/_fails-is-regexp.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/modules/_fails-is-regexp.js ***!
  \**********************************************************/
/*! no static exports found */function(e,o,s){var n=s(/*! ./_wks */"./node_modules/core-js/modules/_wks.js")("match");e.exports=function(e){var o=/./;try{"/./"[e](o)}catch(s){try{return o[n]=!1,!"/./"[e](o)}catch(e){}}return!0}},"./node_modules/core-js/modules/_fails.js":
/*!************************************************!*\
  !*** ./node_modules/core-js/modules/_fails.js ***!
  \************************************************/
/*! no static exports found */function(e,o){e.exports=function(e){try{return!!e()}catch(e){return!0}}},"./node_modules/core-js/modules/_fix-re-wks.js":
/*!*****************************************************!*\
  !*** ./node_modules/core-js/modules/_fix-re-wks.js ***!
  \*****************************************************/
/*! no static exports found */function(e,o,s){"use strict";s(/*! ./es6.regexp.exec */"./node_modules/core-js/modules/es6.regexp.exec.js");var n=s(/*! ./_redefine */"./node_modules/core-js/modules/_redefine.js"),t=s(/*! ./_hide */"./node_modules/core-js/modules/_hide.js"),u=s(/*! ./_fails */"./node_modules/core-js/modules/_fails.js"),r=s(/*! ./_defined */"./node_modules/core-js/modules/_defined.js"),d=s(/*! ./_wks */"./node_modules/core-js/modules/_wks.js"),l=s(/*! ./_regexp-exec */"./node_modules/core-js/modules/_regexp-exec.js"),c=d("species"),i=!u(function(){var e=/./;return e.exec=function(){var e=[];return e.groups={a:"7"},e},"7"!=="".replace(e,"$<a>")}),m=function(){var e=/(?:)/,o=e.exec;e.exec=function(){return o.apply(this,arguments)};var s="ab".split(e);return 2===s.length&&"a"===s[0]&&"b"===s[1]}();e.exports=function(e,o,s){var j=d(e),_=!u(function(){var o={};return o[j]=function(){return 7},7!=""[e](o)}),f=_?!u(function(){var o=!1,s=/a/;return s.exec=function(){return o=!0,null},"split"===e&&(s.constructor={},s.constructor[c]=function(){return s}),s[j](""),!o}):void 0;if(!_||!f||"replace"===e&&!i||"split"===e&&!m){var a=/./[j],h=s(r,j,""[e],function(e,o,s,n,t){return o.exec===l?_&&!t?{done:!0,value:a.call(o,s,n)}:{done:!0,value:e.call(s,o,n)}:{done:!1}}),p=h[0],v=h[1];n(String.prototype,e,p),t(RegExp.prototype,j,2==o?function(e,o){return v.call(e,this,o)}:function(e){return v.call(e,this)})}}},"./node_modules/core-js/modules/_flags.js":
/*!************************************************!*\
  !*** ./node_modules/core-js/modules/_flags.js ***!
  \************************************************/
/*! no static exports found */function(e,o,s){"use strict";var n=s(/*! ./_an-object */"./node_modules/core-js/modules/_an-object.js");e.exports=function(){var e=n(this),o="";return e.global&&(o+="g"),e.ignoreCase&&(o+="i"),e.multiline&&(o+="m"),e.unicode&&(o+="u"),e.sticky&&(o+="y"),o}},"./node_modules/core-js/modules/_for-of.js":
/*!*************************************************!*\
  !*** ./node_modules/core-js/modules/_for-of.js ***!
  \*************************************************/
/*! no static exports found */function(e,o,s){var n=s(/*! ./_ctx */"./node_modules/core-js/modules/_ctx.js"),t=s(/*! ./_iter-call */"./node_modules/core-js/modules/_iter-call.js"),u=s(/*! ./_is-array-iter */"./node_modules/core-js/modules/_is-array-iter.js"),r=s(/*! ./_an-object */"./node_modules/core-js/modules/_an-object.js"),d=s(/*! ./_to-length */"./node_modules/core-js/modules/_to-length.js"),l=s(/*! ./core.get-iterator-method */"./node_modules/core-js/modules/core.get-iterator-method.js"),c={},i={};(o=e.exports=function(e,o,s,m,j){var _,f,a,h,p=j?function(){return e}:l(e),v=n(s,m,o?2:1),g=0;if("function"!=typeof p)throw TypeError(e+" is not iterable!");if(u(p)){for(_=d(e.length);_>g;g++)if((h=o?v(r(f=e[g])[0],f[1]):v(e[g]))===c||h===i)return h}else for(a=p.call(e);!(f=a.next()).done;)if((h=t(a,v,f.value,o))===c||h===i)return h}).BREAK=c,o.RETURN=i},"./node_modules/core-js/modules/_global.js":
/*!*************************************************!*\
  !*** ./node_modules/core-js/modules/_global.js ***!
  \*************************************************/
/*! no static exports found */function(e,o){var s=e.exports="undefined"!=typeof window&&window.Math==Math?window:"undefined"!=typeof self&&self.Math==Math?self:Function("return this")();"number"==typeof __g&&(__g=s)},"./node_modules/core-js/modules/_has.js":
/*!**********************************************!*\
  !*** ./node_modules/core-js/modules/_has.js ***!
  \**********************************************/
/*! no static exports found */function(e,o){var s={}.hasOwnProperty;e.exports=function(e,o){return s.call(e,o)}},"./node_modules/core-js/modules/_hide.js":
/*!***********************************************!*\
  !*** ./node_modules/core-js/modules/_hide.js ***!
  \***********************************************/
/*! no static exports found */function(e,o,s){var n=s(/*! ./_object-dp */"./node_modules/core-js/modules/_object-dp.js"),t=s(/*! ./_property-desc */"./node_modules/core-js/modules/_property-desc.js");e.exports=s(/*! ./_descriptors */"./node_modules/core-js/modules/_descriptors.js")?function(e,o,s){return n.f(e,o,t(1,s))}:function(e,o,s){return e[o]=s,e}},"./node_modules/core-js/modules/_html.js":
/*!***********************************************!*\
  !*** ./node_modules/core-js/modules/_html.js ***!
  \***********************************************/
/*! no static exports found */function(e,o,s){var n=s(/*! ./_global */"./node_modules/core-js/modules/_global.js").document;e.exports=n&&n.documentElement},"./node_modules/core-js/modules/_ie8-dom-define.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/modules/_ie8-dom-define.js ***!
  \*********************************************************/
/*! no static exports found */function(e,o,s){e.exports=!s(/*! ./_descriptors */"./node_modules/core-js/modules/_descriptors.js")&&!s(/*! ./_fails */"./node_modules/core-js/modules/_fails.js")(function(){return 7!=Object.defineProperty(s(/*! ./_dom-create */"./node_modules/core-js/modules/_dom-create.js")("div"),"a",{get:function(){return 7}}).a})},"./node_modules/core-js/modules/_inherit-if-required.js":
/*!**************************************************************!*\
  !*** ./node_modules/core-js/modules/_inherit-if-required.js ***!
  \**************************************************************/
/*! no static exports found */function(e,o,s){var n=s(/*! ./_is-object */"./node_modules/core-js/modules/_is-object.js"),t=s(/*! ./_set-proto */"./node_modules/core-js/modules/_set-proto.js").set;e.exports=function(e,o,s){var u,r=o.constructor;return r!==s&&"function"==typeof r&&(u=r.prototype)!==s.prototype&&n(u)&&t&&t(e,u),e}},"./node_modules/core-js/modules/_invoke.js":
/*!*************************************************!*\
  !*** ./node_modules/core-js/modules/_invoke.js ***!
  \*************************************************/
/*! no static exports found */function(e,o){e.exports=function(e,o,s){var n=void 0===s;switch(o.length){case 0:return n?e():e.call(s);case 1:return n?e(o[0]):e.call(s,o[0]);case 2:return n?e(o[0],o[1]):e.call(s,o[0],o[1]);case 3:return n?e(o[0],o[1],o[2]):e.call(s,o[0],o[1],o[2]);case 4:return n?e(o[0],o[1],o[2],o[3]):e.call(s,o[0],o[1],o[2],o[3])}return e.apply(s,o)}},"./node_modules/core-js/modules/_iobject.js":
/*!**************************************************!*\
  !*** ./node_modules/core-js/modules/_iobject.js ***!
  \**************************************************/
/*! no static exports found */function(e,o,s){var n=s(/*! ./_cof */"./node_modules/core-js/modules/_cof.js");e.exports=Object("z").propertyIsEnumerable(0)?Object:function(e){return"String"==n(e)?e.split(""):Object(e)}},"./node_modules/core-js/modules/_is-array-iter.js":
/*!********************************************************!*\
  !*** ./node_modules/core-js/modules/_is-array-iter.js ***!
  \********************************************************/
/*! no static exports found */function(e,o,s){var n=s(/*! ./_iterators */"./node_modules/core-js/modules/_iterators.js"),t=s(/*! ./_wks */"./node_modules/core-js/modules/_wks.js")("iterator"),u=Array.prototype;e.exports=function(e){return void 0!==e&&(n.Array===e||u[t]===e)}},"./node_modules/core-js/modules/_is-array.js":
/*!***************************************************!*\
  !*** ./node_modules/core-js/modules/_is-array.js ***!
  \***************************************************/
/*! no static exports found */function(e,o,s){var n=s(/*! ./_cof */"./node_modules/core-js/modules/_cof.js");e.exports=Array.isArray||function(e){return"Array"==n(e)}},"./node_modules/core-js/modules/_is-integer.js":
/*!*****************************************************!*\
  !*** ./node_modules/core-js/modules/_is-integer.js ***!
  \*****************************************************/
/*! no static exports found */function(e,o,s){var n=s(/*! ./_is-object */"./node_modules/core-js/modules/_is-object.js"),t=Math.floor;e.exports=function(e){return!n(e)&&isFinite(e)&&t(e)===e}},"./node_modules/core-js/modules/_is-object.js":
/*!****************************************************!*\
  !*** ./node_modules/core-js/modules/_is-object.js ***!
  \****************************************************/
/*! no static exports found */function(e,o){e.exports=function(e){return"object"==typeof e?null!==e:"function"==typeof e}},"./node_modules/core-js/modules/_is-regexp.js":
/*!****************************************************!*\
  !*** ./node_modules/core-js/modules/_is-regexp.js ***!
  \****************************************************/
/*! no static exports found */function(e,o,s){var n=s(/*! ./_is-object */"./node_modules/core-js/modules/_is-object.js"),t=s(/*! ./_cof */"./node_modules/core-js/modules/_cof.js"),u=s(/*! ./_wks */"./node_modules/core-js/modules/_wks.js")("match");e.exports=function(e){var o;return n(e)&&(void 0!==(o=e[u])?!!o:"RegExp"==t(e))}},"./node_modules/core-js/modules/_iter-call.js":
/*!****************************************************!*\
  !*** ./node_modules/core-js/modules/_iter-call.js ***!
  \****************************************************/
/*! no static exports found */function(e,o,s){var n=s(/*! ./_an-object */"./node_modules/core-js/modules/_an-object.js");e.exports=function(e,o,s,t){try{return t?o(n(s)[0],s[1]):o(s)}catch(o){var u=e.return;throw void 0!==u&&n(u.call(e)),o}}},"./node_modules/core-js/modules/_iter-create.js":
/*!******************************************************!*\
  !*** ./node_modules/core-js/modules/_iter-create.js ***!
  \******************************************************/
/*! no static exports found */function(e,o,s){"use strict";var n=s(/*! ./_object-create */"./node_modules/core-js/modules/_object-create.js"),t=s(/*! ./_property-desc */"./node_modules/core-js/modules/_property-desc.js"),u=s(/*! ./_set-to-string-tag */"./node_modules/core-js/modules/_set-to-string-tag.js"),r={};s(/*! ./_hide */"./node_modules/core-js/modules/_hide.js")(r,s(/*! ./_wks */"./node_modules/core-js/modules/_wks.js")("iterator"),function(){return this}),e.exports=function(e,o,s){e.prototype=n(r,{next:t(1,s)}),u(e,o+" Iterator")}},"./node_modules/core-js/modules/_iter-define.js":
/*!******************************************************!*\
  !*** ./node_modules/core-js/modules/_iter-define.js ***!
  \******************************************************/
/*! no static exports found */function(e,o,s){"use strict";var n=s(/*! ./_library */"./node_modules/core-js/modules/_library.js"),t=s(/*! ./_export */"./node_modules/core-js/modules/_export.js"),u=s(/*! ./_redefine */"./node_modules/core-js/modules/_redefine.js"),r=s(/*! ./_hide */"./node_modules/core-js/modules/_hide.js"),d=s(/*! ./_iterators */"./node_modules/core-js/modules/_iterators.js"),l=s(/*! ./_iter-create */"./node_modules/core-js/modules/_iter-create.js"),c=s(/*! ./_set-to-string-tag */"./node_modules/core-js/modules/_set-to-string-tag.js"),i=s(/*! ./_object-gpo */"./node_modules/core-js/modules/_object-gpo.js"),m=s(/*! ./_wks */"./node_modules/core-js/modules/_wks.js")("iterator"),j=!([].keys&&"next"in[].keys()),_=function(){return this};e.exports=function(e,o,s,f,a,h,p){l(s,o,f);var v,g,b,w=function(e){if(!j&&e in M)return M[e];switch(e){case"keys":case"values":return function(){return new s(this,e)}}return function(){return new s(this,e)}},x=o+" Iterator",y="values"==a,S=!1,M=e.prototype,F=M[m]||M["@@iterator"]||a&&M[a],k=F||w(a),N=a?y?w("entries"):k:void 0,W="Array"==o&&M.entries||F;if(W&&(b=i(W.call(new e)))!==Object.prototype&&b.next&&(c(b,x,!0),n||"function"==typeof b[m]||r(b,m,_)),y&&F&&"values"!==F.name&&(S=!0,k=function(){return F.call(this)}),n&&!p||!j&&!S&&M[m]||r(M,m,k),d[o]=k,d[x]=_,a)if(v={values:y?k:w("values"),keys:h?k:w("keys"),entries:N},p)for(g in v)g in M||u(M,g,v[g]);else t(t.P+t.F*(j||S),o,v);return v}},"./node_modules/core-js/modules/_iter-detect.js":
/*!******************************************************!*\
  !*** ./node_modules/core-js/modules/_iter-detect.js ***!
  \******************************************************/
/*! no static exports found */function(e,o,s){var n=s(/*! ./_wks */"./node_modules/core-js/modules/_wks.js")("iterator"),t=!1;try{var u=[7][n]();u.return=function(){t=!0},Array.from(u,function(){throw 2})}catch(e){}e.exports=function(e,o){if(!o&&!t)return!1;var s=!1;try{var u=[7],r=u[n]();r.next=function(){return{done:s=!0}},u[n]=function(){return r},e(u)}catch(e){}return s}},"./node_modules/core-js/modules/_iter-step.js":
/*!****************************************************!*\
  !*** ./node_modules/core-js/modules/_iter-step.js ***!
  \****************************************************/
/*! no static exports found */function(e,o){e.exports=function(e,o){return{value:o,done:!!e}}},"./node_modules/core-js/modules/_iterators.js":
/*!****************************************************!*\
  !*** ./node_modules/core-js/modules/_iterators.js ***!
  \****************************************************/
/*! no static exports found */function(e,o){e.exports={}},"./node_modules/core-js/modules/_library.js":
/*!**************************************************!*\
  !*** ./node_modules/core-js/modules/_library.js ***!
  \**************************************************/
/*! no static exports found */function(e,o){e.exports=!1},"./node_modules/core-js/modules/_math-expm1.js":
/*!*****************************************************!*\
  !*** ./node_modules/core-js/modules/_math-expm1.js ***!
  \*****************************************************/
/*! no static exports found */function(e,o){var s=Math.expm1;e.exports=!s||s(10)>22025.465794806718||s(10)<22025.465794806718||-2e-17!=s(-2e-17)?function(e){return 0==(e=+e)?e:e>-1e-6&&e<1e-6?e+e*e/2:Math.exp(e)-1}:s},"./node_modules/core-js/modules/_math-fround.js":
/*!******************************************************!*\
  !*** ./node_modules/core-js/modules/_math-fround.js ***!
  \******************************************************/
/*! no static exports found */function(e,o,s){var n=s(/*! ./_math-sign */"./node_modules/core-js/modules/_math-sign.js"),t=Math.pow,u=t(2,-52),r=t(2,-23),d=t(2,127)*(2-r),l=t(2,-126);e.exports=Math.fround||function(e){var o,s,t=Math.abs(e),c=n(e);return t<l?c*(t/l/r+1/u-1/u)*l*r:(s=(o=(1+r/u)*t)-(o-t))>d||s!=s?c*(1/0):c*s}},"./node_modules/core-js/modules/_math-log1p.js":
/*!*****************************************************!*\
  !*** ./node_modules/core-js/modules/_math-log1p.js ***!
  \*****************************************************/
/*! no static exports found */function(e,o){e.exports=Math.log1p||function(e){return(e=+e)>-1e-8&&e<1e-8?e-e*e/2:Math.log(1+e)}},"./node_modules/core-js/modules/_math-sign.js":
/*!****************************************************!*\
  !*** ./node_modules/core-js/modules/_math-sign.js ***!
  \****************************************************/
/*! no static exports found */function(e,o){e.exports=Math.sign||function(e){return 0==(e=+e)||e!=e?e:e<0?-1:1}},"./node_modules/core-js/modules/_meta.js":
/*!***********************************************!*\
  !*** ./node_modules/core-js/modules/_meta.js ***!
  \***********************************************/
/*! no static exports found */function(e,o,s){var n=s(/*! ./_uid */"./node_modules/core-js/modules/_uid.js")("meta"),t=s(/*! ./_is-object */"./node_modules/core-js/modules/_is-object.js"),u=s(/*! ./_has */"./node_modules/core-js/modules/_has.js"),r=s(/*! ./_object-dp */"./node_modules/core-js/modules/_object-dp.js").f,d=0,l=Object.isExtensible||function(){return!0},c=!s(/*! ./_fails */"./node_modules/core-js/modules/_fails.js")(function(){return l(Object.preventExtensions({}))}),i=function(e){r(e,n,{value:{i:"O"+ ++d,w:{}}})},m=e.exports={KEY:n,NEED:!1,fastKey:function(e,o){if(!t(e))return"symbol"==typeof e?e:("string"==typeof e?"S":"P")+e;if(!u(e,n)){if(!l(e))return"F";if(!o)return"E";i(e)}return e[n].i},getWeak:function(e,o){if(!u(e,n)){if(!l(e))return!0;if(!o)return!1;i(e)}return e[n].w},onFreeze:function(e){return c&&m.NEED&&l(e)&&!u(e,n)&&i(e),e}}},"./node_modules/core-js/modules/_microtask.js":
/*!****************************************************!*\
  !*** ./node_modules/core-js/modules/_microtask.js ***!
  \****************************************************/
/*! no static exports found */function(e,o,s){var n=s(/*! ./_global */"./node_modules/core-js/modules/_global.js"),t=s(/*! ./_task */"./node_modules/core-js/modules/_task.js").set,u=n.MutationObserver||n.WebKitMutationObserver,r=n.process,d=n.Promise,l="process"==s(/*! ./_cof */"./node_modules/core-js/modules/_cof.js")(r);e.exports=function(){var e,o,s,c=function(){var n,t;for(l&&(n=r.domain)&&n.exit();e;){t=e.fn,e=e.next;try{t()}catch(n){throw e?s():o=void 0,n}}o=void 0,n&&n.enter()};if(l)s=function(){r.nextTick(c)};else if(!u||n.navigator&&n.navigator.standalone)if(d&&d.resolve){var i=d.resolve(void 0);s=function(){i.then(c)}}else s=function(){t.call(n,c)};else{var m=!0,j=document.createTextNode("");new u(c).observe(j,{characterData:!0}),s=function(){j.data=m=!m}}return function(n){var t={fn:n,next:void 0};o&&(o.next=t),e||(e=t,s()),o=t}}},"./node_modules/core-js/modules/_new-promise-capability.js":
/*!*****************************************************************!*\
  !*** ./node_modules/core-js/modules/_new-promise-capability.js ***!
  \*****************************************************************/
/*! no static exports found */function(e,o,s){"use strict";var n=s(/*! ./_a-function */"./node_modules/core-js/modules/_a-function.js");function t(e){var o,s;this.promise=new e(function(e,n){if(void 0!==o||void 0!==s)throw TypeError("Bad Promise constructor");o=e,s=n}),this.resolve=n(o),this.reject=n(s)}e.exports.f=function(e){return new t(e)}},"./node_modules/core-js/modules/_object-assign.js":
/*!********************************************************!*\
  !*** ./node_modules/core-js/modules/_object-assign.js ***!
  \********************************************************/
/*! no static exports found */function(e,o,s){"use strict";var n=s(/*! ./_object-keys */"./node_modules/core-js/modules/_object-keys.js"),t=s(/*! ./_object-gops */"./node_modules/core-js/modules/_object-gops.js"),u=s(/*! ./_object-pie */"./node_modules/core-js/modules/_object-pie.js"),r=s(/*! ./_to-object */"./node_modules/core-js/modules/_to-object.js"),d=s(/*! ./_iobject */"./node_modules/core-js/modules/_iobject.js"),l=Object.assign;e.exports=!l||s(/*! ./_fails */"./node_modules/core-js/modules/_fails.js")(function(){var e={},o={},s=Symbol(),n="abcdefghijklmnopqrst";return e[s]=7,n.split("").forEach(function(e){o[e]=e}),7!=l({},e)[s]||Object.keys(l({},o)).join("")!=n})?function(e,o){for(var s=r(e),l=arguments.length,c=1,i=t.f,m=u.f;l>c;)for(var j,_=d(arguments[c++]),f=i?n(_).concat(i(_)):n(_),a=f.length,h=0;a>h;)m.call(_,j=f[h++])&&(s[j]=_[j]);return s}:l},"./node_modules/core-js/modules/_object-create.js":
/*!********************************************************!*\
  !*** ./node_modules/core-js/modules/_object-create.js ***!
  \********************************************************/
/*! no static exports found */function(e,o,s){var n=s(/*! ./_an-object */"./node_modules/core-js/modules/_an-object.js"),t=s(/*! ./_object-dps */"./node_modules/core-js/modules/_object-dps.js"),u=s(/*! ./_enum-bug-keys */"./node_modules/core-js/modules/_enum-bug-keys.js"),r=s(/*! ./_shared-key */"./node_modules/core-js/modules/_shared-key.js")("IE_PROTO"),d=function(){},l=function(){var e,o=s(/*! ./_dom-create */"./node_modules/core-js/modules/_dom-create.js")("iframe"),n=u.length;for(o.style.display="none",s(/*! ./_html */"./node_modules/core-js/modules/_html.js").appendChild(o),o.src="javascript:",(e=o.contentWindow.document).open(),e.write("<script>document.F=Object<\/script>"),e.close(),l=e.F;n--;)delete l.prototype[u[n]];return l()};e.exports=Object.create||function(e,o){var s;return null!==e?(d.prototype=n(e),s=new d,d.prototype=null,s[r]=e):s=l(),void 0===o?s:t(s,o)}},"./node_modules/core-js/modules/_object-dp.js":
/*!****************************************************!*\
  !*** ./node_modules/core-js/modules/_object-dp.js ***!
  \****************************************************/
/*! no static exports found */function(e,o,s){var n=s(/*! ./_an-object */"./node_modules/core-js/modules/_an-object.js"),t=s(/*! ./_ie8-dom-define */"./node_modules/core-js/modules/_ie8-dom-define.js"),u=s(/*! ./_to-primitive */"./node_modules/core-js/modules/_to-primitive.js"),r=Object.defineProperty;o.f=s(/*! ./_descriptors */"./node_modules/core-js/modules/_descriptors.js")?Object.defineProperty:function(e,o,s){if(n(e),o=u(o,!0),n(s),t)try{return r(e,o,s)}catch(e){}if("get"in s||"set"in s)throw TypeError("Accessors not supported!");return"value"in s&&(e[o]=s.value),e}},"./node_modules/core-js/modules/_object-dps.js":
/*!*****************************************************!*\
  !*** ./node_modules/core-js/modules/_object-dps.js ***!
  \*****************************************************/
/*! no static exports found */function(e,o,s){var n=s(/*! ./_object-dp */"./node_modules/core-js/modules/_object-dp.js"),t=s(/*! ./_an-object */"./node_modules/core-js/modules/_an-object.js"),u=s(/*! ./_object-keys */"./node_modules/core-js/modules/_object-keys.js");e.exports=s(/*! ./_descriptors */"./node_modules/core-js/modules/_descriptors.js")?Object.defineProperties:function(e,o){t(e);for(var s,r=u(o),d=r.length,l=0;d>l;)n.f(e,s=r[l++],o[s]);return e}},"./node_modules/core-js/modules/_object-gopd.js":
/*!******************************************************!*\
  !*** ./node_modules/core-js/modules/_object-gopd.js ***!
  \******************************************************/
/*! no static exports found */function(e,o,s){var n=s(/*! ./_object-pie */"./node_modules/core-js/modules/_object-pie.js"),t=s(/*! ./_property-desc */"./node_modules/core-js/modules/_property-desc.js"),u=s(/*! ./_to-iobject */"./node_modules/core-js/modules/_to-iobject.js"),r=s(/*! ./_to-primitive */"./node_modules/core-js/modules/_to-primitive.js"),d=s(/*! ./_has */"./node_modules/core-js/modules/_has.js"),l=s(/*! ./_ie8-dom-define */"./node_modules/core-js/modules/_ie8-dom-define.js"),c=Object.getOwnPropertyDescriptor;o.f=s(/*! ./_descriptors */"./node_modules/core-js/modules/_descriptors.js")?c:function(e,o){if(e=u(e),o=r(o,!0),l)try{return c(e,o)}catch(e){}if(d(e,o))return t(!n.f.call(e,o),e[o])}},"./node_modules/core-js/modules/_object-gopn-ext.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/modules/_object-gopn-ext.js ***!
  \**********************************************************/
/*! no static exports found */function(e,o,s){var n=s(/*! ./_to-iobject */"./node_modules/core-js/modules/_to-iobject.js"),t=s(/*! ./_object-gopn */"./node_modules/core-js/modules/_object-gopn.js").f,u={}.toString,r="object"==typeof window&&window&&Object.getOwnPropertyNames?Object.getOwnPropertyNames(window):[];e.exports.f=function(e){return r&&"[object Window]"==u.call(e)?function(e){try{return t(e)}catch(e){return r.slice()}}(e):t(n(e))}},"./node_modules/core-js/modules/_object-gopn.js":
/*!******************************************************!*\
  !*** ./node_modules/core-js/modules/_object-gopn.js ***!
  \******************************************************/
/*! no static exports found */function(e,o,s){var n=s(/*! ./_object-keys-internal */"./node_modules/core-js/modules/_object-keys-internal.js"),t=s(/*! ./_enum-bug-keys */"./node_modules/core-js/modules/_enum-bug-keys.js").concat("length","prototype");o.f=Object.getOwnPropertyNames||function(e){return n(e,t)}},"./node_modules/core-js/modules/_object-gops.js":
/*!******************************************************!*\
  !*** ./node_modules/core-js/modules/_object-gops.js ***!
  \******************************************************/
/*! no static exports found */function(e,o){o.f=Object.getOwnPropertySymbols},"./node_modules/core-js/modules/_object-gpo.js":
/*!*****************************************************!*\
  !*** ./node_modules/core-js/modules/_object-gpo.js ***!
  \*****************************************************/
/*! no static exports found */function(e,o,s){var n=s(/*! ./_has */"./node_modules/core-js/modules/_has.js"),t=s(/*! ./_to-object */"./node_modules/core-js/modules/_to-object.js"),u=s(/*! ./_shared-key */"./node_modules/core-js/modules/_shared-key.js")("IE_PROTO"),r=Object.prototype;e.exports=Object.getPrototypeOf||function(e){return e=t(e),n(e,u)?e[u]:"function"==typeof e.constructor&&e instanceof e.constructor?e.constructor.prototype:e instanceof Object?r:null}},"./node_modules/core-js/modules/_object-keys-internal.js":
/*!***************************************************************!*\
  !*** ./node_modules/core-js/modules/_object-keys-internal.js ***!
  \***************************************************************/
/*! no static exports found */function(e,o,s){var n=s(/*! ./_has */"./node_modules/core-js/modules/_has.js"),t=s(/*! ./_to-iobject */"./node_modules/core-js/modules/_to-iobject.js"),u=s(/*! ./_array-includes */"./node_modules/core-js/modules/_array-includes.js")(!1),r=s(/*! ./_shared-key */"./node_modules/core-js/modules/_shared-key.js")("IE_PROTO");e.exports=function(e,o){var s,d=t(e),l=0,c=[];for(s in d)s!=r&&n(d,s)&&c.push(s);for(;o.length>l;)n(d,s=o[l++])&&(~u(c,s)||c.push(s));return c}},"./node_modules/core-js/modules/_object-keys.js":
/*!******************************************************!*\
  !*** ./node_modules/core-js/modules/_object-keys.js ***!
  \******************************************************/
/*! no static exports found */function(e,o,s){var n=s(/*! ./_object-keys-internal */"./node_modules/core-js/modules/_object-keys-internal.js"),t=s(/*! ./_enum-bug-keys */"./node_modules/core-js/modules/_enum-bug-keys.js");e.exports=Object.keys||function(e){return n(e,t)}},"./node_modules/core-js/modules/_object-pie.js":
/*!*****************************************************!*\
  !*** ./node_modules/core-js/modules/_object-pie.js ***!
  \*****************************************************/
/*! no static exports found */function(e,o){o.f={}.propertyIsEnumerable},"./node_modules/core-js/modules/_object-sap.js":
/*!*****************************************************!*\
  !*** ./node_modules/core-js/modules/_object-sap.js ***!
  \*****************************************************/
/*! no static exports found */function(e,o,s){var n=s(/*! ./_export */"./node_modules/core-js/modules/_export.js"),t=s(/*! ./_core */"./node_modules/core-js/modules/_core.js"),u=s(/*! ./_fails */"./node_modules/core-js/modules/_fails.js");e.exports=function(e,o){var s=(t.Object||{})[e]||Object[e],r={};r[e]=o(s),n(n.S+n.F*u(function(){s(1)}),"Object",r)}},"./node_modules/core-js/modules/_object-to-array.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/modules/_object-to-array.js ***!
  \**********************************************************/
/*! no static exports found */function(e,o,s){var n=s(/*! ./_object-keys */"./node_modules/core-js/modules/_object-keys.js"),t=s(/*! ./_to-iobject */"./node_modules/core-js/modules/_to-iobject.js"),u=s(/*! ./_object-pie */"./node_modules/core-js/modules/_object-pie.js").f;e.exports=function(e){return function(o){for(var s,r=t(o),d=n(r),l=d.length,c=0,i=[];l>c;)u.call(r,s=d[c++])&&i.push(e?[s,r[s]]:r[s]);return i}}},"./node_modules/core-js/modules/_own-keys.js":
/*!***************************************************!*\
  !*** ./node_modules/core-js/modules/_own-keys.js ***!
  \***************************************************/
/*! no static exports found */function(e,o,s){var n=s(/*! ./_object-gopn */"./node_modules/core-js/modules/_object-gopn.js"),t=s(/*! ./_object-gops */"./node_modules/core-js/modules/_object-gops.js"),u=s(/*! ./_an-object */"./node_modules/core-js/modules/_an-object.js"),r=s(/*! ./_global */"./node_modules/core-js/modules/_global.js").Reflect;e.exports=r&&r.ownKeys||function(e){var o=n.f(u(e)),s=t.f;return s?o.concat(s(e)):o}},"./node_modules/core-js/modules/_parse-float.js":
/*!******************************************************!*\
  !*** ./node_modules/core-js/modules/_parse-float.js ***!
  \******************************************************/
/*! no static exports found */function(e,o,s){var n=s(/*! ./_global */"./node_modules/core-js/modules/_global.js").parseFloat,t=s(/*! ./_string-trim */"./node_modules/core-js/modules/_string-trim.js").trim;e.exports=1/n(s(/*! ./_string-ws */"./node_modules/core-js/modules/_string-ws.js")+"-0")!=-1/0?function(e){var o=t(String(e),3),s=n(o);return 0===s&&"-"==o.charAt(0)?-0:s}:n},"./node_modules/core-js/modules/_parse-int.js":
/*!****************************************************!*\
  !*** ./node_modules/core-js/modules/_parse-int.js ***!
  \****************************************************/
/*! no static exports found */function(e,o,s){var n=s(/*! ./_global */"./node_modules/core-js/modules/_global.js").parseInt,t=s(/*! ./_string-trim */"./node_modules/core-js/modules/_string-trim.js").trim,u=s(/*! ./_string-ws */"./node_modules/core-js/modules/_string-ws.js"),r=/^[-+]?0[xX]/;e.exports=8!==n(u+"08")||22!==n(u+"0x16")?function(e,o){var s=t(String(e),3);return n(s,o>>>0||(r.test(s)?16:10))}:n},"./node_modules/core-js/modules/_perform.js":
/*!**************************************************!*\
  !*** ./node_modules/core-js/modules/_perform.js ***!
  \**************************************************/
/*! no static exports found */function(e,o){e.exports=function(e){try{return{e:!1,v:e()}}catch(e){return{e:!0,v:e}}}},"./node_modules/core-js/modules/_promise-resolve.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/modules/_promise-resolve.js ***!
  \**********************************************************/
/*! no static exports found */function(e,o,s){var n=s(/*! ./_an-object */"./node_modules/core-js/modules/_an-object.js"),t=s(/*! ./_is-object */"./node_modules/core-js/modules/_is-object.js"),u=s(/*! ./_new-promise-capability */"./node_modules/core-js/modules/_new-promise-capability.js");e.exports=function(e,o){if(n(e),t(o)&&o.constructor===e)return o;var s=u.f(e);return(0,s.resolve)(o),s.promise}},"./node_modules/core-js/modules/_property-desc.js":
/*!********************************************************!*\
  !*** ./node_modules/core-js/modules/_property-desc.js ***!
  \********************************************************/
/*! no static exports found */function(e,o){e.exports=function(e,o){return{enumerable:!(1&e),configurable:!(2&e),writable:!(4&e),value:o}}},"./node_modules/core-js/modules/_redefine-all.js":
/*!*******************************************************!*\
  !*** ./node_modules/core-js/modules/_redefine-all.js ***!
  \*******************************************************/
/*! no static exports found */function(e,o,s){var n=s(/*! ./_redefine */"./node_modules/core-js/modules/_redefine.js");e.exports=function(e,o,s){for(var t in o)n(e,t,o[t],s);return e}},"./node_modules/core-js/modules/_redefine.js":
/*!***************************************************!*\
  !*** ./node_modules/core-js/modules/_redefine.js ***!
  \***************************************************/
/*! no static exports found */function(e,o,s){var n=s(/*! ./_global */"./node_modules/core-js/modules/_global.js"),t=s(/*! ./_hide */"./node_modules/core-js/modules/_hide.js"),u=s(/*! ./_has */"./node_modules/core-js/modules/_has.js"),r=s(/*! ./_uid */"./node_modules/core-js/modules/_uid.js")("src"),d=Function.toString,l=(""+d).split("toString");s(/*! ./_core */"./node_modules/core-js/modules/_core.js").inspectSource=function(e){return d.call(e)},(e.exports=function(e,o,s,d){var c="function"==typeof s;c&&(u(s,"name")||t(s,"name",o)),e[o]!==s&&(c&&(u(s,r)||t(s,r,e[o]?""+e[o]:l.join(String(o)))),e===n?e[o]=s:d?e[o]?e[o]=s:t(e,o,s):(delete e[o],t(e,o,s)))})(Function.prototype,"toString",function(){return"function"==typeof this&&this[r]||d.call(this)})},"./node_modules/core-js/modules/_regexp-exec-abstract.js":
/*!***************************************************************!*\
  !*** ./node_modules/core-js/modules/_regexp-exec-abstract.js ***!
  \***************************************************************/
/*! no static exports found */function(e,o,s){"use strict";var n=s(/*! ./_classof */"./node_modules/core-js/modules/_classof.js"),t=RegExp.prototype.exec;e.exports=function(e,o){var s=e.exec;if("function"==typeof s){var u=s.call(e,o);if("object"!=typeof u)throw new TypeError("RegExp exec method returned something other than an Object or null");return u}if("RegExp"!==n(e))throw new TypeError("RegExp#exec called on incompatible receiver");return t.call(e,o)}},"./node_modules/core-js/modules/_regexp-exec.js":
/*!******************************************************!*\
  !*** ./node_modules/core-js/modules/_regexp-exec.js ***!
  \******************************************************/
/*! no static exports found */function(e,o,s){"use strict";var n,t,u=s(/*! ./_flags */"./node_modules/core-js/modules/_flags.js"),r=RegExp.prototype.exec,d=String.prototype.replace,l=r,c=(n=/a/,t=/b*/g,r.call(n,"a"),r.call(t,"a"),0!==n.lastIndex||0!==t.lastIndex),i=void 0!==/()??/.exec("")[1];(c||i)&&(l=function(e){var o,s,n,t,l=this;return i&&(s=new RegExp("^"+l.source+"$(?!\\s)",u.call(l))),c&&(o=l.lastIndex),n=r.call(l,e),c&&n&&(l.lastIndex=l.global?n.index+n[0].length:o),i&&n&&n.length>1&&d.call(n[0],s,function(){for(t=1;t<arguments.length-2;t++)void 0===arguments[t]&&(n[t]=void 0)}),n}),e.exports=l},"./node_modules/core-js/modules/_same-value.js":
/*!*****************************************************!*\
  !*** ./node_modules/core-js/modules/_same-value.js ***!
  \*****************************************************/
/*! no static exports found */function(e,o){e.exports=Object.is||function(e,o){return e===o?0!==e||1/e==1/o:e!=e&&o!=o}},"./node_modules/core-js/modules/_set-proto.js":
/*!****************************************************!*\
  !*** ./node_modules/core-js/modules/_set-proto.js ***!
  \****************************************************/
/*! no static exports found */function(e,o,s){var n=s(/*! ./_is-object */"./node_modules/core-js/modules/_is-object.js"),t=s(/*! ./_an-object */"./node_modules/core-js/modules/_an-object.js"),u=function(e,o){if(t(e),!n(o)&&null!==o)throw TypeError(o+": can't set as prototype!")};e.exports={set:Object.setPrototypeOf||("__proto__"in{}?function(e,o,n){try{(n=s(/*! ./_ctx */"./node_modules/core-js/modules/_ctx.js")(Function.call,s(/*! ./_object-gopd */"./node_modules/core-js/modules/_object-gopd.js").f(Object.prototype,"__proto__").set,2))(e,[]),o=!(e instanceof Array)}catch(e){o=!0}return function(e,s){return u(e,s),o?e.__proto__=s:n(e,s),e}}({},!1):void 0),check:u}},"./node_modules/core-js/modules/_set-species.js":
/*!******************************************************!*\
  !*** ./node_modules/core-js/modules/_set-species.js ***!
  \******************************************************/
/*! no static exports found */function(e,o,s){"use strict";var n=s(/*! ./_global */"./node_modules/core-js/modules/_global.js"),t=s(/*! ./_object-dp */"./node_modules/core-js/modules/_object-dp.js"),u=s(/*! ./_descriptors */"./node_modules/core-js/modules/_descriptors.js"),r=s(/*! ./_wks */"./node_modules/core-js/modules/_wks.js")("species");e.exports=function(e){var o=n[e];u&&o&&!o[r]&&t.f(o,r,{configurable:!0,get:function(){return this}})}},"./node_modules/core-js/modules/_set-to-string-tag.js":
/*!************************************************************!*\
  !*** ./node_modules/core-js/modules/_set-to-string-tag.js ***!
  \************************************************************/
/*! no static exports found */function(e,o,s){var n=s(/*! ./_object-dp */"./node_modules/core-js/modules/_object-dp.js").f,t=s(/*! ./_has */"./node_modules/core-js/modules/_has.js"),u=s(/*! ./_wks */"./node_modules/core-js/modules/_wks.js")("toStringTag");e.exports=function(e,o,s){e&&!t(e=s?e:e.prototype,u)&&n(e,u,{configurable:!0,value:o})}},"./node_modules/core-js/modules/_shared-key.js":
/*!*****************************************************!*\
  !*** ./node_modules/core-js/modules/_shared-key.js ***!
  \*****************************************************/
/*! no static exports found */function(e,o,s){var n=s(/*! ./_shared */"./node_modules/core-js/modules/_shared.js")("keys"),t=s(/*! ./_uid */"./node_modules/core-js/modules/_uid.js");e.exports=function(e){return n[e]||(n[e]=t(e))}},"./node_modules/core-js/modules/_shared.js":
/*!*************************************************!*\
  !*** ./node_modules/core-js/modules/_shared.js ***!
  \*************************************************/
/*! no static exports found */function(e,o,s){var n=s(/*! ./_core */"./node_modules/core-js/modules/_core.js"),t=s(/*! ./_global */"./node_modules/core-js/modules/_global.js"),u=t["__core-js_shared__"]||(t["__core-js_shared__"]={});(e.exports=function(e,o){return u[e]||(u[e]=void 0!==o?o:{})})("versions",[]).push({version:n.version,mode:s(/*! ./_library */"./node_modules/core-js/modules/_library.js")?"pure":"global",copyright:"© 2018 Denis Pushkarev (zloirock.ru)"})},"./node_modules/core-js/modules/_species-constructor.js":
/*!**************************************************************!*\
  !*** ./node_modules/core-js/modules/_species-constructor.js ***!
  \**************************************************************/
/*! no static exports found */function(e,o,s){var n=s(/*! ./_an-object */"./node_modules/core-js/modules/_an-object.js"),t=s(/*! ./_a-function */"./node_modules/core-js/modules/_a-function.js"),u=s(/*! ./_wks */"./node_modules/core-js/modules/_wks.js")("species");e.exports=function(e,o){var s,r=n(e).constructor;return void 0===r||null==(s=n(r)[u])?o:t(s)}},"./node_modules/core-js/modules/_strict-method.js":
/*!********************************************************!*\
  !*** ./node_modules/core-js/modules/_strict-method.js ***!
  \********************************************************/
/*! no static exports found */function(e,o,s){"use strict";var n=s(/*! ./_fails */"./node_modules/core-js/modules/_fails.js");e.exports=function(e,o){return!!e&&n(function(){o?e.call(null,function(){},1):e.call(null)})}},"./node_modules/core-js/modules/_string-at.js":
/*!****************************************************!*\
  !*** ./node_modules/core-js/modules/_string-at.js ***!
  \****************************************************/
/*! no static exports found */function(e,o,s){var n=s(/*! ./_to-integer */"./node_modules/core-js/modules/_to-integer.js"),t=s(/*! ./_defined */"./node_modules/core-js/modules/_defined.js");e.exports=function(e){return function(o,s){var u,r,d=String(t(o)),l=n(s),c=d.length;return l<0||l>=c?e?"":void 0:(u=d.charCodeAt(l))<55296||u>56319||l+1===c||(r=d.charCodeAt(l+1))<56320||r>57343?e?d.charAt(l):u:e?d.slice(l,l+2):r-56320+(u-55296<<10)+65536}}},"./node_modules/core-js/modules/_string-context.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/modules/_string-context.js ***!
  \*********************************************************/
/*! no static exports found */function(e,o,s){var n=s(/*! ./_is-regexp */"./node_modules/core-js/modules/_is-regexp.js"),t=s(/*! ./_defined */"./node_modules/core-js/modules/_defined.js");e.exports=function(e,o,s){if(n(o))throw TypeError("String#"+s+" doesn't accept regex!");return String(t(e))}},"./node_modules/core-js/modules/_string-html.js":
/*!******************************************************!*\
  !*** ./node_modules/core-js/modules/_string-html.js ***!
  \******************************************************/
/*! no static exports found */function(e,o,s){var n=s(/*! ./_export */"./node_modules/core-js/modules/_export.js"),t=s(/*! ./_fails */"./node_modules/core-js/modules/_fails.js"),u=s(/*! ./_defined */"./node_modules/core-js/modules/_defined.js"),r=/"/g,d=function(e,o,s,n){var t=String(u(e)),d="<"+o;return""!==s&&(d+=" "+s+'="'+String(n).replace(r,"&quot;")+'"'),d+">"+t+"</"+o+">"};e.exports=function(e,o){var s={};s[e]=o(d),n(n.P+n.F*t(function(){var o=""[e]('"');return o!==o.toLowerCase()||o.split('"').length>3}),"String",s)}},"./node_modules/core-js/modules/_string-pad.js":
/*!*****************************************************!*\
  !*** ./node_modules/core-js/modules/_string-pad.js ***!
  \*****************************************************/
/*! no static exports found */function(e,o,s){var n=s(/*! ./_to-length */"./node_modules/core-js/modules/_to-length.js"),t=s(/*! ./_string-repeat */"./node_modules/core-js/modules/_string-repeat.js"),u=s(/*! ./_defined */"./node_modules/core-js/modules/_defined.js");e.exports=function(e,o,s,r){var d=String(u(e)),l=d.length,c=void 0===s?" ":String(s),i=n(o);if(i<=l||""==c)return d;var m=i-l,j=t.call(c,Math.ceil(m/c.length));return j.length>m&&(j=j.slice(0,m)),r?j+d:d+j}},"./node_modules/core-js/modules/_string-repeat.js":
/*!********************************************************!*\
  !*** ./node_modules/core-js/modules/_string-repeat.js ***!
  \********************************************************/
/*! no static exports found */function(e,o,s){"use strict";var n=s(/*! ./_to-integer */"./node_modules/core-js/modules/_to-integer.js"),t=s(/*! ./_defined */"./node_modules/core-js/modules/_defined.js");e.exports=function(e){var o=String(t(this)),s="",u=n(e);if(u<0||u==1/0)throw RangeError("Count can't be negative");for(;u>0;(u>>>=1)&&(o+=o))1&u&&(s+=o);return s}},"./node_modules/core-js/modules/_string-trim.js":
/*!******************************************************!*\
  !*** ./node_modules/core-js/modules/_string-trim.js ***!
  \******************************************************/
/*! no static exports found */function(e,o,s){var n=s(/*! ./_export */"./node_modules/core-js/modules/_export.js"),t=s(/*! ./_defined */"./node_modules/core-js/modules/_defined.js"),u=s(/*! ./_fails */"./node_modules/core-js/modules/_fails.js"),r=s(/*! ./_string-ws */"./node_modules/core-js/modules/_string-ws.js"),d="["+r+"]",l=RegExp("^"+d+d+"*"),c=RegExp(d+d+"*$"),i=function(e,o,s){var t={},d=u(function(){return!!r[e]()||"​"!="​"[e]()}),l=t[e]=d?o(m):r[e];s&&(t[s]=l),n(n.P+n.F*d,"String",t)},m=i.trim=function(e,o){return e=String(t(e)),1&o&&(e=e.replace(l,"")),2&o&&(e=e.replace(c,"")),e};e.exports=i},"./node_modules/core-js/modules/_string-ws.js":
/*!****************************************************!*\
  !*** ./node_modules/core-js/modules/_string-ws.js ***!
  \****************************************************/
/*! no static exports found */function(e,o){e.exports="\t\n\v\f\r   ᠎             　\u2028\u2029\ufeff"},"./node_modules/core-js/modules/_task.js":
/*!***********************************************!*\
  !*** ./node_modules/core-js/modules/_task.js ***!
  \***********************************************/
/*! no static exports found */function(e,o,s){var n,t,u,r=s(/*! ./_ctx */"./node_modules/core-js/modules/_ctx.js"),d=s(/*! ./_invoke */"./node_modules/core-js/modules/_invoke.js"),l=s(/*! ./_html */"./node_modules/core-js/modules/_html.js"),c=s(/*! ./_dom-create */"./node_modules/core-js/modules/_dom-create.js"),i=s(/*! ./_global */"./node_modules/core-js/modules/_global.js"),m=i.process,j=i.setImmediate,_=i.clearImmediate,f=i.MessageChannel,a=i.Dispatch,h=0,p={},v=function(){var e=+this;if(p.hasOwnProperty(e)){var o=p[e];delete p[e],o()}},g=function(e){v.call(e.data)};j&&_||(j=function(e){for(var o=[],s=1;arguments.length>s;)o.push(arguments[s++]);return p[++h]=function(){d("function"==typeof e?e:Function(e),o)},n(h),h},_=function(e){delete p[e]},"process"==s(/*! ./_cof */"./node_modules/core-js/modules/_cof.js")(m)?n=function(e){m.nextTick(r(v,e,1))}:a&&a.now?n=function(e){a.now(r(v,e,1))}:f?(u=(t=new f).port2,t.port1.onmessage=g,n=r(u.postMessage,u,1)):i.addEventListener&&"function"==typeof postMessage&&!i.importScripts?(n=function(e){i.postMessage(e+"","*")},i.addEventListener("message",g,!1)):n="onreadystatechange"in c("script")?function(e){l.appendChild(c("script")).onreadystatechange=function(){l.removeChild(this),v.call(e)}}:function(e){setTimeout(r(v,e,1),0)}),e.exports={set:j,clear:_}},"./node_modules/core-js/modules/_to-absolute-index.js":
/*!************************************************************!*\
  !*** ./node_modules/core-js/modules/_to-absolute-index.js ***!
  \************************************************************/
/*! no static exports found */function(e,o,s){var n=s(/*! ./_to-integer */"./node_modules/core-js/modules/_to-integer.js"),t=Math.max,u=Math.min;e.exports=function(e,o){return(e=n(e))<0?t(e+o,0):u(e,o)}},"./node_modules/core-js/modules/_to-index.js":
/*!***************************************************!*\
  !*** ./node_modules/core-js/modules/_to-index.js ***!
  \***************************************************/
/*! no static exports found */function(e,o,s){var n=s(/*! ./_to-integer */"./node_modules/core-js/modules/_to-integer.js"),t=s(/*! ./_to-length */"./node_modules/core-js/modules/_to-length.js");e.exports=function(e){if(void 0===e)return 0;var o=n(e),s=t(o);if(o!==s)throw RangeError("Wrong length!");return s}},"./node_modules/core-js/modules/_to-integer.js":
/*!*****************************************************!*\
  !*** ./node_modules/core-js/modules/_to-integer.js ***!
  \*****************************************************/
/*! no static exports found */function(e,o){var s=Math.ceil,n=Math.floor;e.exports=function(e){return isNaN(e=+e)?0:(e>0?n:s)(e)}},"./node_modules/core-js/modules/_to-iobject.js":
/*!*****************************************************!*\
  !*** ./node_modules/core-js/modules/_to-iobject.js ***!
  \*****************************************************/
/*! no static exports found */function(e,o,s){var n=s(/*! ./_iobject */"./node_modules/core-js/modules/_iobject.js"),t=s(/*! ./_defined */"./node_modules/core-js/modules/_defined.js");e.exports=function(e){return n(t(e))}},"./node_modules/core-js/modules/_to-length.js":
/*!****************************************************!*\
  !*** ./node_modules/core-js/modules/_to-length.js ***!
  \****************************************************/
/*! no static exports found */function(e,o,s){var n=s(/*! ./_to-integer */"./node_modules/core-js/modules/_to-integer.js"),t=Math.min;e.exports=function(e){return e>0?t(n(e),9007199254740991):0}},"./node_modules/core-js/modules/_to-object.js":
/*!****************************************************!*\
  !*** ./node_modules/core-js/modules/_to-object.js ***!
  \****************************************************/
/*! no static exports found */function(e,o,s){var n=s(/*! ./_defined */"./node_modules/core-js/modules/_defined.js");e.exports=function(e){return Object(n(e))}},"./node_modules/core-js/modules/_to-primitive.js":
/*!*******************************************************!*\
  !*** ./node_modules/core-js/modules/_to-primitive.js ***!
  \*******************************************************/
/*! no static exports found */function(e,o,s){var n=s(/*! ./_is-object */"./node_modules/core-js/modules/_is-object.js");e.exports=function(e,o){if(!n(e))return e;var s,t;if(o&&"function"==typeof(s=e.toString)&&!n(t=s.call(e)))return t;if("function"==typeof(s=e.valueOf)&&!n(t=s.call(e)))return t;if(!o&&"function"==typeof(s=e.toString)&&!n(t=s.call(e)))return t;throw TypeError("Can't convert object to primitive value")}},"./node_modules/core-js/modules/_typed-array.js":
/*!******************************************************!*\
  !*** ./node_modules/core-js/modules/_typed-array.js ***!
  \******************************************************/
/*! no static exports found */function(e,o,s){"use strict";if(s(/*! ./_descriptors */"./node_modules/core-js/modules/_descriptors.js")){var n=s(/*! ./_library */"./node_modules/core-js/modules/_library.js"),t=s(/*! ./_global */"./node_modules/core-js/modules/_global.js"),u=s(/*! ./_fails */"./node_modules/core-js/modules/_fails.js"),r=s(/*! ./_export */"./node_modules/core-js/modules/_export.js"),d=s(/*! ./_typed */"./node_modules/core-js/modules/_typed.js"),l=s(/*! ./_typed-buffer */"./node_modules/core-js/modules/_typed-buffer.js"),c=s(/*! ./_ctx */"./node_modules/core-js/modules/_ctx.js"),i=s(/*! ./_an-instance */"./node_modules/core-js/modules/_an-instance.js"),m=s(/*! ./_property-desc */"./node_modules/core-js/modules/_property-desc.js"),j=s(/*! ./_hide */"./node_modules/core-js/modules/_hide.js"),_=s(/*! ./_redefine-all */"./node_modules/core-js/modules/_redefine-all.js"),f=s(/*! ./_to-integer */"./node_modules/core-js/modules/_to-integer.js"),a=s(/*! ./_to-length */"./node_modules/core-js/modules/_to-length.js"),h=s(/*! ./_to-index */"./node_modules/core-js/modules/_to-index.js"),p=s(/*! ./_to-absolute-index */"./node_modules/core-js/modules/_to-absolute-index.js"),v=s(/*! ./_to-primitive */"./node_modules/core-js/modules/_to-primitive.js"),g=s(/*! ./_has */"./node_modules/core-js/modules/_has.js"),b=s(/*! ./_classof */"./node_modules/core-js/modules/_classof.js"),w=s(/*! ./_is-object */"./node_modules/core-js/modules/_is-object.js"),x=s(/*! ./_to-object */"./node_modules/core-js/modules/_to-object.js"),y=s(/*! ./_is-array-iter */"./node_modules/core-js/modules/_is-array-iter.js"),S=s(/*! ./_object-create */"./node_modules/core-js/modules/_object-create.js"),M=s(/*! ./_object-gpo */"./node_modules/core-js/modules/_object-gpo.js"),F=s(/*! ./_object-gopn */"./node_modules/core-js/modules/_object-gopn.js").f,k=s(/*! ./core.get-iterator-method */"./node_modules/core-js/modules/core.get-iterator-method.js"),N=s(/*! ./_uid */"./node_modules/core-js/modules/_uid.js"),W=s(/*! ./_wks */"./node_modules/core-js/modules/_wks.js"),z=s(/*! ./_array-methods */"./node_modules/core-js/modules/_array-methods.js"),X=s(/*! ./_array-includes */"./node_modules/core-js/modules/_array-includes.js"),U=s(/*! ./_species-constructor */"./node_modules/core-js/modules/_species-constructor.js"),V=s(/*! ./es6.array.iterator */"./node_modules/core-js/modules/es6.array.iterator.js"),H=s(/*! ./_iterators */"./node_modules/core-js/modules/_iterators.js"),J=s(/*! ./_iter-detect */"./node_modules/core-js/modules/_iter-detect.js"),Q=s(/*! ./_set-species */"./node_modules/core-js/modules/_set-species.js"),Z=s(/*! ./_array-fill */"./node_modules/core-js/modules/_array-fill.js"),K=s(/*! ./_array-copy-within */"./node_modules/core-js/modules/_array-copy-within.js"),G=s(/*! ./_object-dp */"./node_modules/core-js/modules/_object-dp.js"),L=s(/*! ./_object-gopd */"./node_modules/core-js/modules/_object-gopd.js"),I=G.f,O=L.f,P=t.RangeError,C=t.TypeError,D=t.Uint8Array,B=Array.prototype,q=l.ArrayBuffer,E=l.DataView,Y=z(0),R=z(2),T=z(3),A=z(4),$=z(5),ee=z(6),oe=X(!0),se=X(!1),ne=V.values,te=V.keys,ue=V.entries,re=B.lastIndexOf,de=B.reduce,le=B.reduceRight,ce=B.join,ie=B.sort,me=B.slice,je=B.toString,_e=B.toLocaleString,fe=W("iterator"),ae=W("toStringTag"),he=N("typed_constructor"),pe=N("def_constructor"),ve=d.CONSTR,ge=d.TYPED,be=d.VIEW,we=z(1,function(e,o){return Fe(U(e,e[pe]),o)}),xe=u(function(){return 1===new D(new Uint16Array([1]).buffer)[0]}),ye=!!D&&!!D.prototype.set&&u(function(){new D(1).set({})}),Se=function(e,o){var s=f(e);if(s<0||s%o)throw P("Wrong offset!");return s},Me=function(e){if(w(e)&&ge in e)return e;throw C(e+" is not a typed array!")},Fe=function(e,o){if(!(w(e)&&he in e))throw C("It is not a typed array constructor!");return new e(o)},ke=function(e,o){return Ne(U(e,e[pe]),o)},Ne=function(e,o){for(var s=0,n=o.length,t=Fe(e,n);n>s;)t[s]=o[s++];return t},We=function(e,o,s){I(e,o,{get:function(){return this._d[s]}})},ze=function(e){var o,s,n,t,u,r,d=x(e),l=arguments.length,i=l>1?arguments[1]:void 0,m=void 0!==i,j=k(d);if(null!=j&&!y(j)){for(r=j.call(d),n=[],o=0;!(u=r.next()).done;o++)n.push(u.value);d=n}for(m&&l>2&&(i=c(i,arguments[2],2)),o=0,s=a(d.length),t=Fe(this,s);s>o;o++)t[o]=m?i(d[o],o):d[o];return t},Xe=function(){for(var e=0,o=arguments.length,s=Fe(this,o);o>e;)s[e]=arguments[e++];return s},Ue=!!D&&u(function(){_e.call(new D(1))}),Ve=function(){return _e.apply(Ue?me.call(Me(this)):Me(this),arguments)},He={copyWithin:function(e,o){return K.call(Me(this),e,o,arguments.length>2?arguments[2]:void 0)},every:function(e){return A(Me(this),e,arguments.length>1?arguments[1]:void 0)},fill:function(e){return Z.apply(Me(this),arguments)},filter:function(e){return ke(this,R(Me(this),e,arguments.length>1?arguments[1]:void 0))},find:function(e){return $(Me(this),e,arguments.length>1?arguments[1]:void 0)},findIndex:function(e){return ee(Me(this),e,arguments.length>1?arguments[1]:void 0)},forEach:function(e){Y(Me(this),e,arguments.length>1?arguments[1]:void 0)},indexOf:function(e){return se(Me(this),e,arguments.length>1?arguments[1]:void 0)},includes:function(e){return oe(Me(this),e,arguments.length>1?arguments[1]:void 0)},join:function(e){return ce.apply(Me(this),arguments)},lastIndexOf:function(e){return re.apply(Me(this),arguments)},map:function(e){return we(Me(this),e,arguments.length>1?arguments[1]:void 0)},reduce:function(e){return de.apply(Me(this),arguments)},reduceRight:function(e){return le.apply(Me(this),arguments)},reverse:function(){for(var e,o=Me(this).length,s=Math.floor(o/2),n=0;n<s;)e=this[n],this[n++]=this[--o],this[o]=e;return this},some:function(e){return T(Me(this),e,arguments.length>1?arguments[1]:void 0)},sort:function(e){return ie.call(Me(this),e)},subarray:function(e,o){var s=Me(this),n=s.length,t=p(e,n);return new(U(s,s[pe]))(s.buffer,s.byteOffset+t*s.BYTES_PER_ELEMENT,a((void 0===o?n:p(o,n))-t))}},Je=function(e,o){return ke(this,me.call(Me(this),e,o))},Qe=function(e){Me(this);var o=Se(arguments[1],1),s=this.length,n=x(e),t=a(n.length),u=0;if(t+o>s)throw P("Wrong length!");for(;u<t;)this[o+u]=n[u++]},Ze={entries:function(){return ue.call(Me(this))},keys:function(){return te.call(Me(this))},values:function(){return ne.call(Me(this))}},Ke=function(e,o){return w(e)&&e[ge]&&"symbol"!=typeof o&&o in e&&String(+o)==String(o)},Ge=function(e,o){return Ke(e,o=v(o,!0))?m(2,e[o]):O(e,o)},Le=function(e,o,s){return!(Ke(e,o=v(o,!0))&&w(s)&&g(s,"value"))||g(s,"get")||g(s,"set")||s.configurable||g(s,"writable")&&!s.writable||g(s,"enumerable")&&!s.enumerable?I(e,o,s):(e[o]=s.value,e)};ve||(L.f=Ge,G.f=Le),r(r.S+r.F*!ve,"Object",{getOwnPropertyDescriptor:Ge,defineProperty:Le}),u(function(){je.call({})})&&(je=_e=function(){return ce.call(this)});var Ie=_({},He);_(Ie,Ze),j(Ie,fe,Ze.values),_(Ie,{slice:Je,set:Qe,constructor:function(){},toString:je,toLocaleString:Ve}),We(Ie,"buffer","b"),We(Ie,"byteOffset","o"),We(Ie,"byteLength","l"),We(Ie,"length","e"),I(Ie,ae,{get:function(){return this[ge]}}),e.exports=function(e,o,s,l){var c=e+((l=!!l)?"Clamped":"")+"Array",m="get"+e,_="set"+e,f=t[c],p=f||{},v=f&&M(f),g=!f||!d.ABV,x={},y=f&&f.prototype,k=function(e,s){I(e,s,{get:function(){return function(e,s){var n=e._d;return n.v[m](s*o+n.o,xe)}(this,s)},set:function(e){return function(e,s,n){var t=e._d;l&&(n=(n=Math.round(n))<0?0:n>255?255:255&n),t.v[_](s*o+t.o,n,xe)}(this,s,e)},enumerable:!0})};g?(f=s(function(e,s,n,t){i(e,f,c,"_d");var u,r,d,l,m=0,_=0;if(w(s)){if(!(s instanceof q||"ArrayBuffer"==(l=b(s))||"SharedArrayBuffer"==l))return ge in s?Ne(f,s):ze.call(f,s);u=s,_=Se(n,o);var p=s.byteLength;if(void 0===t){if(p%o)throw P("Wrong length!");if((r=p-_)<0)throw P("Wrong length!")}else if((r=a(t)*o)+_>p)throw P("Wrong length!");d=r/o}else d=h(s),u=new q(r=d*o);for(j(e,"_d",{b:u,o:_,l:r,e:d,v:new E(u)});m<d;)k(e,m++)}),y=f.prototype=S(Ie),j(y,"constructor",f)):u(function(){f(1)})&&u(function(){new f(-1)})&&J(function(e){new f,new f(null),new f(1.5),new f(e)},!0)||(f=s(function(e,s,n,t){var u;return i(e,f,c),w(s)?s instanceof q||"ArrayBuffer"==(u=b(s))||"SharedArrayBuffer"==u?void 0!==t?new p(s,Se(n,o),t):void 0!==n?new p(s,Se(n,o)):new p(s):ge in s?Ne(f,s):ze.call(f,s):new p(h(s))}),Y(v!==Function.prototype?F(p).concat(F(v)):F(p),function(e){e in f||j(f,e,p[e])}),f.prototype=y,n||(y.constructor=f));var N=y[fe],W=!!N&&("values"==N.name||null==N.name),z=Ze.values;j(f,he,!0),j(y,ge,c),j(y,be,!0),j(y,pe,f),(l?new f(1)[ae]==c:ae in y)||I(y,ae,{get:function(){return c}}),x[c]=f,r(r.G+r.W+r.F*(f!=p),x),r(r.S,c,{BYTES_PER_ELEMENT:o}),r(r.S+r.F*u(function(){p.of.call(f,1)}),c,{from:ze,of:Xe}),"BYTES_PER_ELEMENT"in y||j(y,"BYTES_PER_ELEMENT",o),r(r.P,c,He),Q(c),r(r.P+r.F*ye,c,{set:Qe}),r(r.P+r.F*!W,c,Ze),n||y.toString==je||(y.toString=je),r(r.P+r.F*u(function(){new f(1).slice()}),c,{slice:Je}),r(r.P+r.F*(u(function(){return[1,2].toLocaleString()!=new f([1,2]).toLocaleString()})||!u(function(){y.toLocaleString.call([1,2])})),c,{toLocaleString:Ve}),H[c]=W?N:z,n||W||j(y,fe,z)}}else e.exports=function(){}},"./node_modules/core-js/modules/_typed-buffer.js":
/*!*******************************************************!*\
  !*** ./node_modules/core-js/modules/_typed-buffer.js ***!
  \*******************************************************/
/*! no static exports found */function(e,o,s){"use strict";var n=s(/*! ./_global */"./node_modules/core-js/modules/_global.js"),t=s(/*! ./_descriptors */"./node_modules/core-js/modules/_descriptors.js"),u=s(/*! ./_library */"./node_modules/core-js/modules/_library.js"),r=s(/*! ./_typed */"./node_modules/core-js/modules/_typed.js"),d=s(/*! ./_hide */"./node_modules/core-js/modules/_hide.js"),l=s(/*! ./_redefine-all */"./node_modules/core-js/modules/_redefine-all.js"),c=s(/*! ./_fails */"./node_modules/core-js/modules/_fails.js"),i=s(/*! ./_an-instance */"./node_modules/core-js/modules/_an-instance.js"),m=s(/*! ./_to-integer */"./node_modules/core-js/modules/_to-integer.js"),j=s(/*! ./_to-length */"./node_modules/core-js/modules/_to-length.js"),_=s(/*! ./_to-index */"./node_modules/core-js/modules/_to-index.js"),f=s(/*! ./_object-gopn */"./node_modules/core-js/modules/_object-gopn.js").f,a=s(/*! ./_object-dp */"./node_modules/core-js/modules/_object-dp.js").f,h=s(/*! ./_array-fill */"./node_modules/core-js/modules/_array-fill.js"),p=s(/*! ./_set-to-string-tag */"./node_modules/core-js/modules/_set-to-string-tag.js"),v="prototype",g="Wrong index!",b=n.ArrayBuffer,w=n.DataView,x=n.Math,y=n.RangeError,S=n.Infinity,M=b,F=x.abs,k=x.pow,N=x.floor,W=x.log,z=x.LN2,X=t?"_b":"buffer",U=t?"_l":"byteLength",V=t?"_o":"byteOffset";function H(e,o,s){var n,t,u,r=new Array(s),d=8*s-o-1,l=(1<<d)-1,c=l>>1,i=23===o?k(2,-24)-k(2,-77):0,m=0,j=e<0||0===e&&1/e<0?1:0;for((e=F(e))!=e||e===S?(t=e!=e?1:0,n=l):(n=N(W(e)/z),e*(u=k(2,-n))<1&&(n--,u*=2),(e+=n+c>=1?i/u:i*k(2,1-c))*u>=2&&(n++,u/=2),n+c>=l?(t=0,n=l):n+c>=1?(t=(e*u-1)*k(2,o),n+=c):(t=e*k(2,c-1)*k(2,o),n=0));o>=8;r[m++]=255&t,t/=256,o-=8);for(n=n<<o|t,d+=o;d>0;r[m++]=255&n,n/=256,d-=8);return r[--m]|=128*j,r}function J(e,o,s){var n,t=8*s-o-1,u=(1<<t)-1,r=u>>1,d=t-7,l=s-1,c=e[l--],i=127&c;for(c>>=7;d>0;i=256*i+e[l],l--,d-=8);for(n=i&(1<<-d)-1,i>>=-d,d+=o;d>0;n=256*n+e[l],l--,d-=8);if(0===i)i=1-r;else{if(i===u)return n?NaN:c?-S:S;n+=k(2,o),i-=r}return(c?-1:1)*n*k(2,i-o)}function Q(e){return e[3]<<24|e[2]<<16|e[1]<<8|e[0]}function Z(e){return[255&e]}function K(e){return[255&e,e>>8&255]}function G(e){return[255&e,e>>8&255,e>>16&255,e>>24&255]}function L(e){return H(e,52,8)}function I(e){return H(e,23,4)}function O(e,o,s){a(e[v],o,{get:function(){return this[s]}})}function P(e,o,s,n){var t=_(+s);if(t+o>e[U])throw y(g);var u=e[X]._b,r=t+e[V],d=u.slice(r,r+o);return n?d:d.reverse()}function C(e,o,s,n,t,u){var r=_(+s);if(r+o>e[U])throw y(g);for(var d=e[X]._b,l=r+e[V],c=n(+t),i=0;i<o;i++)d[l+i]=c[u?i:o-i-1]}if(r.ABV){if(!c(function(){b(1)})||!c(function(){new b(-1)})||c(function(){return new b,new b(1.5),new b(NaN),"ArrayBuffer"!=b.name})){for(var D,B=(b=function(e){return i(this,b),new M(_(e))})[v]=M[v],q=f(M),E=0;q.length>E;)(D=q[E++])in b||d(b,D,M[D]);u||(B.constructor=b)}var Y=new w(new b(2)),R=w[v].setInt8;Y.setInt8(0,2147483648),Y.setInt8(1,2147483649),!Y.getInt8(0)&&Y.getInt8(1)||l(w[v],{setInt8:function(e,o){R.call(this,e,o<<24>>24)},setUint8:function(e,o){R.call(this,e,o<<24>>24)}},!0)}else b=function(e){i(this,b,"ArrayBuffer");var o=_(e);this._b=h.call(new Array(o),0),this[U]=o},w=function(e,o,s){i(this,w,"DataView"),i(e,b,"DataView");var n=e[U],t=m(o);if(t<0||t>n)throw y("Wrong offset!");if(t+(s=void 0===s?n-t:j(s))>n)throw y("Wrong length!");this[X]=e,this[V]=t,this[U]=s},t&&(O(b,"byteLength","_l"),O(w,"buffer","_b"),O(w,"byteLength","_l"),O(w,"byteOffset","_o")),l(w[v],{getInt8:function(e){return P(this,1,e)[0]<<24>>24},getUint8:function(e){return P(this,1,e)[0]},getInt16:function(e){var o=P(this,2,e,arguments[1]);return(o[1]<<8|o[0])<<16>>16},getUint16:function(e){var o=P(this,2,e,arguments[1]);return o[1]<<8|o[0]},getInt32:function(e){return Q(P(this,4,e,arguments[1]))},getUint32:function(e){return Q(P(this,4,e,arguments[1]))>>>0},getFloat32:function(e){return J(P(this,4,e,arguments[1]),23,4)},getFloat64:function(e){return J(P(this,8,e,arguments[1]),52,8)},setInt8:function(e,o){C(this,1,e,Z,o)},setUint8:function(e,o){C(this,1,e,Z,o)},setInt16:function(e,o){C(this,2,e,K,o,arguments[2])},setUint16:function(e,o){C(this,2,e,K,o,arguments[2])},setInt32:function(e,o){C(this,4,e,G,o,arguments[2])},setUint32:function(e,o){C(this,4,e,G,o,arguments[2])},setFloat32:function(e,o){C(this,4,e,I,o,arguments[2])},setFloat64:function(e,o){C(this,8,e,L,o,arguments[2])}});p(b,"ArrayBuffer"),p(w,"DataView"),d(w[v],r.VIEW,!0),o.ArrayBuffer=b,o.DataView=w},"./node_modules/core-js/modules/_typed.js":
/*!************************************************!*\
  !*** ./node_modules/core-js/modules/_typed.js ***!
  \************************************************/
/*! no static exports found */function(e,o,s){for(var n,t=s(/*! ./_global */"./node_modules/core-js/modules/_global.js"),u=s(/*! ./_hide */"./node_modules/core-js/modules/_hide.js"),r=s(/*! ./_uid */"./node_modules/core-js/modules/_uid.js"),d=r("typed_array"),l=r("view"),c=!(!t.ArrayBuffer||!t.DataView),i=c,m=0,j="Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array".split(",");m<9;)(n=t[j[m++]])?(u(n.prototype,d,!0),u(n.prototype,l,!0)):i=!1;e.exports={ABV:c,CONSTR:i,TYPED:d,VIEW:l}},"./node_modules/core-js/modules/_uid.js":
/*!**********************************************!*\
  !*** ./node_modules/core-js/modules/_uid.js ***!
  \**********************************************/
/*! no static exports found */function(e,o){var s=0,n=Math.random();e.exports=function(e){return"Symbol(".concat(void 0===e?"":e,")_",(++s+n).toString(36))}},"./node_modules/core-js/modules/_user-agent.js":
/*!*****************************************************!*\
  !*** ./node_modules/core-js/modules/_user-agent.js ***!
  \*****************************************************/
/*! no static exports found */function(e,o,s){var n=s(/*! ./_global */"./node_modules/core-js/modules/_global.js").navigator;e.exports=n&&n.userAgent||""},"./node_modules/core-js/modules/_validate-collection.js":
/*!**************************************************************!*\
  !*** ./node_modules/core-js/modules/_validate-collection.js ***!
  \**************************************************************/
/*! no static exports found */function(e,o,s){var n=s(/*! ./_is-object */"./node_modules/core-js/modules/_is-object.js");e.exports=function(e,o){if(!n(e)||e._t!==o)throw TypeError("Incompatible receiver, "+o+" required!");return e}},"./node_modules/core-js/modules/_wks-define.js":
/*!*****************************************************!*\
  !*** ./node_modules/core-js/modules/_wks-define.js ***!
  \*****************************************************/
/*! no static exports found */function(e,o,s){var n=s(/*! ./_global */"./node_modules/core-js/modules/_global.js"),t=s(/*! ./_core */"./node_modules/core-js/modules/_core.js"),u=s(/*! ./_library */"./node_modules/core-js/modules/_library.js"),r=s(/*! ./_wks-ext */"./node_modules/core-js/modules/_wks-ext.js"),d=s(/*! ./_object-dp */"./node_modules/core-js/modules/_object-dp.js").f;e.exports=function(e){var o=t.Symbol||(t.Symbol=u?{}:n.Symbol||{});"_"==e.charAt(0)||e in o||d(o,e,{value:r.f(e)})}},"./node_modules/core-js/modules/_wks-ext.js":
/*!**************************************************!*\
  !*** ./node_modules/core-js/modules/_wks-ext.js ***!
  \**************************************************/
/*! no static exports found */function(e,o,s){o.f=s(/*! ./_wks */"./node_modules/core-js/modules/_wks.js")},"./node_modules/core-js/modules/_wks.js":
/*!**********************************************!*\
  !*** ./node_modules/core-js/modules/_wks.js ***!
  \**********************************************/
/*! no static exports found */function(e,o,s){var n=s(/*! ./_shared */"./node_modules/core-js/modules/_shared.js")("wks"),t=s(/*! ./_uid */"./node_modules/core-js/modules/_uid.js"),u=s(/*! ./_global */"./node_modules/core-js/modules/_global.js").Symbol,r="function"==typeof u;(e.exports=function(e){return n[e]||(n[e]=r&&u[e]||(r?u:t)("Symbol."+e))}).store=n},"./node_modules/core-js/modules/core.get-iterator-method.js":
/*!******************************************************************!*\
  !*** ./node_modules/core-js/modules/core.get-iterator-method.js ***!
  \******************************************************************/
/*! no static exports found */function(e,o,s){var n=s(/*! ./_classof */"./node_modules/core-js/modules/_classof.js"),t=s(/*! ./_wks */"./node_modules/core-js/modules/_wks.js")("iterator"),u=s(/*! ./_iterators */"./node_modules/core-js/modules/_iterators.js");e.exports=s(/*! ./_core */"./node_modules/core-js/modules/_core.js").getIteratorMethod=function(e){if(null!=e)return e[t]||e["@@iterator"]||u[n(e)]}},"./node_modules/core-js/modules/es6.array.copy-within.js":
/*!***************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.array.copy-within.js ***!
  \***************************************************************/
/*! no static exports found */function(e,o,s){var n=s(/*! ./_export */"./node_modules/core-js/modules/_export.js");n(n.P,"Array",{copyWithin:s(/*! ./_array-copy-within */"./node_modules/core-js/modules/_array-copy-within.js")}),s(/*! ./_add-to-unscopables */"./node_modules/core-js/modules/_add-to-unscopables.js")("copyWithin")},"./node_modules/core-js/modules/es6.array.every.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.array.every.js ***!
  \*********************************************************/
/*! no static exports found */function(e,o,s){"use strict";var n=s(/*! ./_export */"./node_modules/core-js/modules/_export.js"),t=s(/*! ./_array-methods */"./node_modules/core-js/modules/_array-methods.js")(4);n(n.P+n.F*!s(/*! ./_strict-method */"./node_modules/core-js/modules/_strict-method.js")([].every,!0),"Array",{every:function(e){return t(this,e,arguments[1])}})},"./node_modules/core-js/modules/es6.array.fill.js":
/*!********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.array.fill.js ***!
  \********************************************************/
/*! no static exports found */function(e,o,s){var n=s(/*! ./_export */"./node_modules/core-js/modules/_export.js");n(n.P,"Array",{fill:s(/*! ./_array-fill */"./node_modules/core-js/modules/_array-fill.js")}),s(/*! ./_add-to-unscopables */"./node_modules/core-js/modules/_add-to-unscopables.js")("fill")},"./node_modules/core-js/modules/es6.array.filter.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.array.filter.js ***!
  \**********************************************************/
/*! no static exports found */function(e,o,s){"use strict";var n=s(/*! ./_export */"./node_modules/core-js/modules/_export.js"),t=s(/*! ./_array-methods */"./node_modules/core-js/modules/_array-methods.js")(2);n(n.P+n.F*!s(/*! ./_strict-method */"./node_modules/core-js/modules/_strict-method.js")([].filter,!0),"Array",{filter:function(e){return t(this,e,arguments[1])}})},"./node_modules/core-js/modules/es6.array.find-index.js":
/*!**************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.array.find-index.js ***!
  \**************************************************************/
/*! no static exports found */function(e,o,s){"use strict";var n=s(/*! ./_export */"./node_modules/core-js/modules/_export.js"),t=s(/*! ./_array-methods */"./node_modules/core-js/modules/_array-methods.js")(6),u="findIndex",r=!0;u in[]&&Array(1)[u](function(){r=!1}),n(n.P+n.F*r,"Array",{findIndex:function(e){return t(this,e,arguments.length>1?arguments[1]:void 0)}}),s(/*! ./_add-to-unscopables */"./node_modules/core-js/modules/_add-to-unscopables.js")(u)},"./node_modules/core-js/modules/es6.array.find.js":
/*!********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.array.find.js ***!
  \********************************************************/
/*! no static exports found */function(e,o,s){"use strict";var n=s(/*! ./_export */"./node_modules/core-js/modules/_export.js"),t=s(/*! ./_array-methods */"./node_modules/core-js/modules/_array-methods.js")(5),u=!0;"find"in[]&&Array(1).find(function(){u=!1}),n(n.P+n.F*u,"Array",{find:function(e){return t(this,e,arguments.length>1?arguments[1]:void 0)}}),s(/*! ./_add-to-unscopables */"./node_modules/core-js/modules/_add-to-unscopables.js")("find")},"./node_modules/core-js/modules/es6.array.for-each.js":
/*!************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.array.for-each.js ***!
  \************************************************************/
/*! no static exports found */function(e,o,s){"use strict";var n=s(/*! ./_export */"./node_modules/core-js/modules/_export.js"),t=s(/*! ./_array-methods */"./node_modules/core-js/modules/_array-methods.js")(0),u=s(/*! ./_strict-method */"./node_modules/core-js/modules/_strict-method.js")([].forEach,!0);n(n.P+n.F*!u,"Array",{forEach:function(e){return t(this,e,arguments[1])}})},"./node_modules/core-js/modules/es6.array.from.js":
/*!********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.array.from.js ***!
  \********************************************************/
/*! no static exports found */function(e,o,s){"use strict";var n=s(/*! ./_ctx */"./node_modules/core-js/modules/_ctx.js"),t=s(/*! ./_export */"./node_modules/core-js/modules/_export.js"),u=s(/*! ./_to-object */"./node_modules/core-js/modules/_to-object.js"),r=s(/*! ./_iter-call */"./node_modules/core-js/modules/_iter-call.js"),d=s(/*! ./_is-array-iter */"./node_modules/core-js/modules/_is-array-iter.js"),l=s(/*! ./_to-length */"./node_modules/core-js/modules/_to-length.js"),c=s(/*! ./_create-property */"./node_modules/core-js/modules/_create-property.js"),i=s(/*! ./core.get-iterator-method */"./node_modules/core-js/modules/core.get-iterator-method.js");t(t.S+t.F*!s(/*! ./_iter-detect */"./node_modules/core-js/modules/_iter-detect.js")(function(e){Array.from(e)}),"Array",{from:function(e){var o,s,t,m,j=u(e),_="function"==typeof this?this:Array,f=arguments.length,a=f>1?arguments[1]:void 0,h=void 0!==a,p=0,v=i(j);if(h&&(a=n(a,f>2?arguments[2]:void 0,2)),null==v||_==Array&&d(v))for(s=new _(o=l(j.length));o>p;p++)c(s,p,h?a(j[p],p):j[p]);else for(m=v.call(j),s=new _;!(t=m.next()).done;p++)c(s,p,h?r(m,a,[t.value,p],!0):t.value);return s.length=p,s}})},"./node_modules/core-js/modules/es6.array.index-of.js":
/*!************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.array.index-of.js ***!
  \************************************************************/
/*! no static exports found */function(e,o,s){"use strict";var n=s(/*! ./_export */"./node_modules/core-js/modules/_export.js"),t=s(/*! ./_array-includes */"./node_modules/core-js/modules/_array-includes.js")(!1),u=[].indexOf,r=!!u&&1/[1].indexOf(1,-0)<0;n(n.P+n.F*(r||!s(/*! ./_strict-method */"./node_modules/core-js/modules/_strict-method.js")(u)),"Array",{indexOf:function(e){return r?u.apply(this,arguments)||0:t(this,e,arguments[1])}})},"./node_modules/core-js/modules/es6.array.is-array.js":
/*!************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.array.is-array.js ***!
  \************************************************************/
/*! no static exports found */function(e,o,s){var n=s(/*! ./_export */"./node_modules/core-js/modules/_export.js");n(n.S,"Array",{isArray:s(/*! ./_is-array */"./node_modules/core-js/modules/_is-array.js")})},"./node_modules/core-js/modules/es6.array.iterator.js":
/*!************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.array.iterator.js ***!
  \************************************************************/
/*! no static exports found */function(e,o,s){"use strict";var n=s(/*! ./_add-to-unscopables */"./node_modules/core-js/modules/_add-to-unscopables.js"),t=s(/*! ./_iter-step */"./node_modules/core-js/modules/_iter-step.js"),u=s(/*! ./_iterators */"./node_modules/core-js/modules/_iterators.js"),r=s(/*! ./_to-iobject */"./node_modules/core-js/modules/_to-iobject.js");e.exports=s(/*! ./_iter-define */"./node_modules/core-js/modules/_iter-define.js")(Array,"Array",function(e,o){this._t=r(e),this._i=0,this._k=o},function(){var e=this._t,o=this._k,s=this._i++;return!e||s>=e.length?(this._t=void 0,t(1)):t(0,"keys"==o?s:"values"==o?e[s]:[s,e[s]])},"values"),u.Arguments=u.Array,n("keys"),n("values"),n("entries")},"./node_modules/core-js/modules/es6.array.join.js":
/*!********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.array.join.js ***!
  \********************************************************/
/*! no static exports found */function(e,o,s){"use strict";var n=s(/*! ./_export */"./node_modules/core-js/modules/_export.js"),t=s(/*! ./_to-iobject */"./node_modules/core-js/modules/_to-iobject.js"),u=[].join;n(n.P+n.F*(s(/*! ./_iobject */"./node_modules/core-js/modules/_iobject.js")!=Object||!s(/*! ./_strict-method */"./node_modules/core-js/modules/_strict-method.js")(u)),"Array",{join:function(e){return u.call(t(this),void 0===e?",":e)}})},"./node_modules/core-js/modules/es6.array.last-index-of.js":
/*!*****************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.array.last-index-of.js ***!
  \*****************************************************************/
/*! no static exports found */function(e,o,s){"use strict";var n=s(/*! ./_export */"./node_modules/core-js/modules/_export.js"),t=s(/*! ./_to-iobject */"./node_modules/core-js/modules/_to-iobject.js"),u=s(/*! ./_to-integer */"./node_modules/core-js/modules/_to-integer.js"),r=s(/*! ./_to-length */"./node_modules/core-js/modules/_to-length.js"),d=[].lastIndexOf,l=!!d&&1/[1].lastIndexOf(1,-0)<0;n(n.P+n.F*(l||!s(/*! ./_strict-method */"./node_modules/core-js/modules/_strict-method.js")(d)),"Array",{lastIndexOf:function(e){if(l)return d.apply(this,arguments)||0;var o=t(this),s=r(o.length),n=s-1;for(arguments.length>1&&(n=Math.min(n,u(arguments[1]))),n<0&&(n=s+n);n>=0;n--)if(n in o&&o[n]===e)return n||0;return-1}})},"./node_modules/core-js/modules/es6.array.map.js":
/*!*******************************************************!*\
  !*** ./node_modules/core-js/modules/es6.array.map.js ***!
  \*******************************************************/
/*! no static exports found */function(e,o,s){"use strict";var n=s(/*! ./_export */"./node_modules/core-js/modules/_export.js"),t=s(/*! ./_array-methods */"./node_modules/core-js/modules/_array-methods.js")(1);n(n.P+n.F*!s(/*! ./_strict-method */"./node_modules/core-js/modules/_strict-method.js")([].map,!0),"Array",{map:function(e){return t(this,e,arguments[1])}})},"./node_modules/core-js/modules/es6.array.of.js":
/*!******************************************************!*\
  !*** ./node_modules/core-js/modules/es6.array.of.js ***!
  \******************************************************/
/*! no static exports found */function(e,o,s){"use strict";var n=s(/*! ./_export */"./node_modules/core-js/modules/_export.js"),t=s(/*! ./_create-property */"./node_modules/core-js/modules/_create-property.js");n(n.S+n.F*s(/*! ./_fails */"./node_modules/core-js/modules/_fails.js")(function(){function e(){}return!(Array.of.call(e)instanceof e)}),"Array",{of:function(){for(var e=0,o=arguments.length,s=new("function"==typeof this?this:Array)(o);o>e;)t(s,e,arguments[e++]);return s.length=o,s}})},"./node_modules/core-js/modules/es6.array.reduce-right.js":
/*!****************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.array.reduce-right.js ***!
  \****************************************************************/
/*! no static exports found */function(e,o,s){"use strict";var n=s(/*! ./_export */"./node_modules/core-js/modules/_export.js"),t=s(/*! ./_array-reduce */"./node_modules/core-js/modules/_array-reduce.js");n(n.P+n.F*!s(/*! ./_strict-method */"./node_modules/core-js/modules/_strict-method.js")([].reduceRight,!0),"Array",{reduceRight:function(e){return t(this,e,arguments.length,arguments[1],!0)}})},"./node_modules/core-js/modules/es6.array.reduce.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.array.reduce.js ***!
  \**********************************************************/
/*! no static exports found */function(e,o,s){"use strict";var n=s(/*! ./_export */"./node_modules/core-js/modules/_export.js"),t=s(/*! ./_array-reduce */"./node_modules/core-js/modules/_array-reduce.js");n(n.P+n.F*!s(/*! ./_strict-method */"./node_modules/core-js/modules/_strict-method.js")([].reduce,!0),"Array",{reduce:function(e){return t(this,e,arguments.length,arguments[1],!1)}})},"./node_modules/core-js/modules/es6.array.slice.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.array.slice.js ***!
  \*********************************************************/
/*! no static exports found */function(e,o,s){"use strict";var n=s(/*! ./_export */"./node_modules/core-js/modules/_export.js"),t=s(/*! ./_html */"./node_modules/core-js/modules/_html.js"),u=s(/*! ./_cof */"./node_modules/core-js/modules/_cof.js"),r=s(/*! ./_to-absolute-index */"./node_modules/core-js/modules/_to-absolute-index.js"),d=s(/*! ./_to-length */"./node_modules/core-js/modules/_to-length.js"),l=[].slice;n(n.P+n.F*s(/*! ./_fails */"./node_modules/core-js/modules/_fails.js")(function(){t&&l.call(t)}),"Array",{slice:function(e,o){var s=d(this.length),n=u(this);if(o=void 0===o?s:o,"Array"==n)return l.call(this,e,o);for(var t=r(e,s),c=r(o,s),i=d(c-t),m=new Array(i),j=0;j<i;j++)m[j]="String"==n?this.charAt(t+j):this[t+j];return m}})},"./node_modules/core-js/modules/es6.array.some.js":
/*!********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.array.some.js ***!
  \********************************************************/
/*! no static exports found */function(e,o,s){"use strict";var n=s(/*! ./_export */"./node_modules/core-js/modules/_export.js"),t=s(/*! ./_array-methods */"./node_modules/core-js/modules/_array-methods.js")(3);n(n.P+n.F*!s(/*! ./_strict-method */"./node_modules/core-js/modules/_strict-method.js")([].some,!0),"Array",{some:function(e){return t(this,e,arguments[1])}})},"./node_modules/core-js/modules/es6.array.sort.js":
/*!********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.array.sort.js ***!
  \********************************************************/
/*! no static exports found */function(e,o,s){"use strict";var n=s(/*! ./_export */"./node_modules/core-js/modules/_export.js"),t=s(/*! ./_a-function */"./node_modules/core-js/modules/_a-function.js"),u=s(/*! ./_to-object */"./node_modules/core-js/modules/_to-object.js"),r=s(/*! ./_fails */"./node_modules/core-js/modules/_fails.js"),d=[].sort,l=[1,2,3];n(n.P+n.F*(r(function(){l.sort(void 0)})||!r(function(){l.sort(null)})||!s(/*! ./_strict-method */"./node_modules/core-js/modules/_strict-method.js")(d)),"Array",{sort:function(e){return void 0===e?d.call(u(this)):d.call(u(this),t(e))}})},"./node_modules/core-js/modules/es6.array.species.js":
/*!***********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.array.species.js ***!
  \***********************************************************/
/*! no static exports found */function(e,o,s){s(/*! ./_set-species */"./node_modules/core-js/modules/_set-species.js")("Array")},"./node_modules/core-js/modules/es6.date.now.js":
/*!******************************************************!*\
  !*** ./node_modules/core-js/modules/es6.date.now.js ***!
  \******************************************************/
/*! no static exports found */function(e,o,s){var n=s(/*! ./_export */"./node_modules/core-js/modules/_export.js");n(n.S,"Date",{now:function(){return(new Date).getTime()}})},"./node_modules/core-js/modules/es6.date.to-iso-string.js":
/*!****************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.date.to-iso-string.js ***!
  \****************************************************************/
/*! no static exports found */function(e,o,s){var n=s(/*! ./_export */"./node_modules/core-js/modules/_export.js"),t=s(/*! ./_date-to-iso-string */"./node_modules/core-js/modules/_date-to-iso-string.js");n(n.P+n.F*(Date.prototype.toISOString!==t),"Date",{toISOString:t})},"./node_modules/core-js/modules/es6.date.to-json.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.date.to-json.js ***!
  \**********************************************************/
/*! no static exports found */function(e,o,s){"use strict";var n=s(/*! ./_export */"./node_modules/core-js/modules/_export.js"),t=s(/*! ./_to-object */"./node_modules/core-js/modules/_to-object.js"),u=s(/*! ./_to-primitive */"./node_modules/core-js/modules/_to-primitive.js");n(n.P+n.F*s(/*! ./_fails */"./node_modules/core-js/modules/_fails.js")(function(){return null!==new Date(NaN).toJSON()||1!==Date.prototype.toJSON.call({toISOString:function(){return 1}})}),"Date",{toJSON:function(e){var o=t(this),s=u(o);return"number"!=typeof s||isFinite(s)?o.toISOString():null}})},"./node_modules/core-js/modules/es6.date.to-primitive.js":
/*!***************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.date.to-primitive.js ***!
  \***************************************************************/
/*! no static exports found */function(e,o,s){var n=s(/*! ./_wks */"./node_modules/core-js/modules/_wks.js")("toPrimitive"),t=Date.prototype;n in t||s(/*! ./_hide */"./node_modules/core-js/modules/_hide.js")(t,n,s(/*! ./_date-to-primitive */"./node_modules/core-js/modules/_date-to-primitive.js"))},"./node_modules/core-js/modules/es6.date.to-string.js":
/*!************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.date.to-string.js ***!
  \************************************************************/
/*! no static exports found */function(e,o,s){var n=Date.prototype,t=n.toString,u=n.getTime;new Date(NaN)+""!="Invalid Date"&&s(/*! ./_redefine */"./node_modules/core-js/modules/_redefine.js")(n,"toString",function(){var e=u.call(this);return e==e?t.call(this):"Invalid Date"})},"./node_modules/core-js/modules/es6.function.bind.js":
/*!***********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.function.bind.js ***!
  \***********************************************************/
/*! no static exports found */function(e,o,s){var n=s(/*! ./_export */"./node_modules/core-js/modules/_export.js");n(n.P,"Function",{bind:s(/*! ./_bind */"./node_modules/core-js/modules/_bind.js")})},"./node_modules/core-js/modules/es6.function.has-instance.js":
/*!*******************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.function.has-instance.js ***!
  \*******************************************************************/
/*! no static exports found */function(e,o,s){"use strict";var n=s(/*! ./_is-object */"./node_modules/core-js/modules/_is-object.js"),t=s(/*! ./_object-gpo */"./node_modules/core-js/modules/_object-gpo.js"),u=s(/*! ./_wks */"./node_modules/core-js/modules/_wks.js")("hasInstance"),r=Function.prototype;u in r||s(/*! ./_object-dp */"./node_modules/core-js/modules/_object-dp.js").f(r,u,{value:function(e){if("function"!=typeof this||!n(e))return!1;if(!n(this.prototype))return e instanceof this;for(;e=t(e);)if(this.prototype===e)return!0;return!1}})},"./node_modules/core-js/modules/es6.function.name.js":
/*!***********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.function.name.js ***!
  \***********************************************************/
/*! no static exports found */function(e,o,s){var n=s(/*! ./_object-dp */"./node_modules/core-js/modules/_object-dp.js").f,t=Function.prototype,u=/^\s*function ([^ (]*)/;"name"in t||s(/*! ./_descriptors */"./node_modules/core-js/modules/_descriptors.js")&&n(t,"name",{configurable:!0,get:function(){try{return(""+this).match(u)[1]}catch(e){return""}}})},"./node_modules/core-js/modules/es6.map.js":
/*!*************************************************!*\
  !*** ./node_modules/core-js/modules/es6.map.js ***!
  \*************************************************/
/*! no static exports found */function(e,o,s){"use strict";var n=s(/*! ./_collection-strong */"./node_modules/core-js/modules/_collection-strong.js"),t=s(/*! ./_validate-collection */"./node_modules/core-js/modules/_validate-collection.js");e.exports=s(/*! ./_collection */"./node_modules/core-js/modules/_collection.js")("Map",function(e){return function(){return e(this,arguments.length>0?arguments[0]:void 0)}},{get:function(e){var o=n.getEntry(t(this,"Map"),e);return o&&o.v},set:function(e,o){return n.def(t(this,"Map"),0===e?0:e,o)}},n,!0)},"./node_modules/core-js/modules/es6.math.acosh.js":
/*!********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.math.acosh.js ***!
  \********************************************************/
/*! no static exports found */function(e,o,s){var n=s(/*! ./_export */"./node_modules/core-js/modules/_export.js"),t=s(/*! ./_math-log1p */"./node_modules/core-js/modules/_math-log1p.js"),u=Math.sqrt,r=Math.acosh;n(n.S+n.F*!(r&&710==Math.floor(r(Number.MAX_VALUE))&&r(1/0)==1/0),"Math",{acosh:function(e){return(e=+e)<1?NaN:e>94906265.62425156?Math.log(e)+Math.LN2:t(e-1+u(e-1)*u(e+1))}})},"./node_modules/core-js/modules/es6.math.asinh.js":
/*!********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.math.asinh.js ***!
  \********************************************************/
/*! no static exports found */function(e,o,s){var n=s(/*! ./_export */"./node_modules/core-js/modules/_export.js"),t=Math.asinh;n(n.S+n.F*!(t&&1/t(0)>0),"Math",{asinh:function e(o){return isFinite(o=+o)&&0!=o?o<0?-e(-o):Math.log(o+Math.sqrt(o*o+1)):o}})},"./node_modules/core-js/modules/es6.math.atanh.js":
/*!********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.math.atanh.js ***!
  \********************************************************/
/*! no static exports found */function(e,o,s){var n=s(/*! ./_export */"./node_modules/core-js/modules/_export.js"),t=Math.atanh;n(n.S+n.F*!(t&&1/t(-0)<0),"Math",{atanh:function(e){return 0==(e=+e)?e:Math.log((1+e)/(1-e))/2}})},"./node_modules/core-js/modules/es6.math.cbrt.js":
/*!*******************************************************!*\
  !*** ./node_modules/core-js/modules/es6.math.cbrt.js ***!
  \*******************************************************/
/*! no static exports found */function(e,o,s){var n=s(/*! ./_export */"./node_modules/core-js/modules/_export.js"),t=s(/*! ./_math-sign */"./node_modules/core-js/modules/_math-sign.js");n(n.S,"Math",{cbrt:function(e){return t(e=+e)*Math.pow(Math.abs(e),1/3)}})},"./node_modules/core-js/modules/es6.math.clz32.js":
/*!********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.math.clz32.js ***!
  \********************************************************/
/*! no static exports found */function(e,o,s){var n=s(/*! ./_export */"./node_modules/core-js/modules/_export.js");n(n.S,"Math",{clz32:function(e){return(e>>>=0)?31-Math.floor(Math.log(e+.5)*Math.LOG2E):32}})},"./node_modules/core-js/modules/es6.math.cosh.js":
/*!*******************************************************!*\
  !*** ./node_modules/core-js/modules/es6.math.cosh.js ***!
  \*******************************************************/
/*! no static exports found */function(e,o,s){var n=s(/*! ./_export */"./node_modules/core-js/modules/_export.js"),t=Math.exp;n(n.S,"Math",{cosh:function(e){return(t(e=+e)+t(-e))/2}})},"./node_modules/core-js/modules/es6.math.expm1.js":
/*!********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.math.expm1.js ***!
  \********************************************************/
/*! no static exports found */function(e,o,s){var n=s(/*! ./_export */"./node_modules/core-js/modules/_export.js"),t=s(/*! ./_math-expm1 */"./node_modules/core-js/modules/_math-expm1.js");n(n.S+n.F*(t!=Math.expm1),"Math",{expm1:t})},"./node_modules/core-js/modules/es6.math.fround.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.math.fround.js ***!
  \*********************************************************/
/*! no static exports found */function(e,o,s){var n=s(/*! ./_export */"./node_modules/core-js/modules/_export.js");n(n.S,"Math",{fround:s(/*! ./_math-fround */"./node_modules/core-js/modules/_math-fround.js")})},"./node_modules/core-js/modules/es6.math.hypot.js":
/*!********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.math.hypot.js ***!
  \********************************************************/
/*! no static exports found */function(e,o,s){var n=s(/*! ./_export */"./node_modules/core-js/modules/_export.js"),t=Math.abs;n(n.S,"Math",{hypot:function(e,o){for(var s,n,u=0,r=0,d=arguments.length,l=0;r<d;)l<(s=t(arguments[r++]))?(u=u*(n=l/s)*n+1,l=s):u+=s>0?(n=s/l)*n:s;return l===1/0?1/0:l*Math.sqrt(u)}})},"./node_modules/core-js/modules/es6.math.imul.js":
/*!*******************************************************!*\
  !*** ./node_modules/core-js/modules/es6.math.imul.js ***!
  \*******************************************************/
/*! no static exports found */function(e,o,s){var n=s(/*! ./_export */"./node_modules/core-js/modules/_export.js"),t=Math.imul;n(n.S+n.F*s(/*! ./_fails */"./node_modules/core-js/modules/_fails.js")(function(){return-5!=t(4294967295,5)||2!=t.length}),"Math",{imul:function(e,o){var s=+e,n=+o,t=65535&s,u=65535&n;return 0|t*u+((65535&s>>>16)*u+t*(65535&n>>>16)<<16>>>0)}})},"./node_modules/core-js/modules/es6.math.log10.js":
/*!********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.math.log10.js ***!
  \********************************************************/
/*! no static exports found */function(e,o,s){var n=s(/*! ./_export */"./node_modules/core-js/modules/_export.js");n(n.S,"Math",{log10:function(e){return Math.log(e)*Math.LOG10E}})},"./node_modules/core-js/modules/es6.math.log1p.js":
/*!********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.math.log1p.js ***!
  \********************************************************/
/*! no static exports found */function(e,o,s){var n=s(/*! ./_export */"./node_modules/core-js/modules/_export.js");n(n.S,"Math",{log1p:s(/*! ./_math-log1p */"./node_modules/core-js/modules/_math-log1p.js")})},"./node_modules/core-js/modules/es6.math.log2.js":
/*!*******************************************************!*\
  !*** ./node_modules/core-js/modules/es6.math.log2.js ***!
  \*******************************************************/
/*! no static exports found */function(e,o,s){var n=s(/*! ./_export */"./node_modules/core-js/modules/_export.js");n(n.S,"Math",{log2:function(e){return Math.log(e)/Math.LN2}})},"./node_modules/core-js/modules/es6.math.sign.js":
/*!*******************************************************!*\
  !*** ./node_modules/core-js/modules/es6.math.sign.js ***!
  \*******************************************************/
/*! no static exports found */function(e,o,s){var n=s(/*! ./_export */"./node_modules/core-js/modules/_export.js");n(n.S,"Math",{sign:s(/*! ./_math-sign */"./node_modules/core-js/modules/_math-sign.js")})},"./node_modules/core-js/modules/es6.math.sinh.js":
/*!*******************************************************!*\
  !*** ./node_modules/core-js/modules/es6.math.sinh.js ***!
  \*******************************************************/
/*! no static exports found */function(e,o,s){var n=s(/*! ./_export */"./node_modules/core-js/modules/_export.js"),t=s(/*! ./_math-expm1 */"./node_modules/core-js/modules/_math-expm1.js"),u=Math.exp;n(n.S+n.F*s(/*! ./_fails */"./node_modules/core-js/modules/_fails.js")(function(){return-2e-17!=!Math.sinh(-2e-17)}),"Math",{sinh:function(e){return Math.abs(e=+e)<1?(t(e)-t(-e))/2:(u(e-1)-u(-e-1))*(Math.E/2)}})},"./node_modules/core-js/modules/es6.math.tanh.js":
/*!*******************************************************!*\
  !*** ./node_modules/core-js/modules/es6.math.tanh.js ***!
  \*******************************************************/
/*! no static exports found */function(e,o,s){var n=s(/*! ./_export */"./node_modules/core-js/modules/_export.js"),t=s(/*! ./_math-expm1 */"./node_modules/core-js/modules/_math-expm1.js"),u=Math.exp;n(n.S,"Math",{tanh:function(e){var o=t(e=+e),s=t(-e);return o==1/0?1:s==1/0?-1:(o-s)/(u(e)+u(-e))}})},"./node_modules/core-js/modules/es6.math.trunc.js":
/*!********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.math.trunc.js ***!
  \********************************************************/
/*! no static exports found */function(e,o,s){var n=s(/*! ./_export */"./node_modules/core-js/modules/_export.js");n(n.S,"Math",{trunc:function(e){return(e>0?Math.floor:Math.ceil)(e)}})},"./node_modules/core-js/modules/es6.number.constructor.js":
/*!****************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.number.constructor.js ***!
  \****************************************************************/
/*! no static exports found */function(e,o,s){"use strict";var n=s(/*! ./_global */"./node_modules/core-js/modules/_global.js"),t=s(/*! ./_has */"./node_modules/core-js/modules/_has.js"),u=s(/*! ./_cof */"./node_modules/core-js/modules/_cof.js"),r=s(/*! ./_inherit-if-required */"./node_modules/core-js/modules/_inherit-if-required.js"),d=s(/*! ./_to-primitive */"./node_modules/core-js/modules/_to-primitive.js"),l=s(/*! ./_fails */"./node_modules/core-js/modules/_fails.js"),c=s(/*! ./_object-gopn */"./node_modules/core-js/modules/_object-gopn.js").f,i=s(/*! ./_object-gopd */"./node_modules/core-js/modules/_object-gopd.js").f,m=s(/*! ./_object-dp */"./node_modules/core-js/modules/_object-dp.js").f,j=s(/*! ./_string-trim */"./node_modules/core-js/modules/_string-trim.js").trim,_=n.Number,f=_,a=_.prototype,h="Number"==u(s(/*! ./_object-create */"./node_modules/core-js/modules/_object-create.js")(a)),p="trim"in String.prototype,v=function(e){var o=d(e,!1);if("string"==typeof o&&o.length>2){var s,n,t,u=(o=p?o.trim():j(o,3)).charCodeAt(0);if(43===u||45===u){if(88===(s=o.charCodeAt(2))||120===s)return NaN}else if(48===u){switch(o.charCodeAt(1)){case 66:case 98:n=2,t=49;break;case 79:case 111:n=8,t=55;break;default:return+o}for(var r,l=o.slice(2),c=0,i=l.length;c<i;c++)if((r=l.charCodeAt(c))<48||r>t)return NaN;return parseInt(l,n)}}return+o};if(!_(" 0o1")||!_("0b1")||_("+0x1")){_=function(e){var o=arguments.length<1?0:e,s=this;return s instanceof _&&(h?l(function(){a.valueOf.call(s)}):"Number"!=u(s))?r(new f(v(o)),s,_):v(o)};for(var g,b=s(/*! ./_descriptors */"./node_modules/core-js/modules/_descriptors.js")?c(f):"MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger".split(","),w=0;b.length>w;w++)t(f,g=b[w])&&!t(_,g)&&m(_,g,i(f,g));_.prototype=a,a.constructor=_,s(/*! ./_redefine */"./node_modules/core-js/modules/_redefine.js")(n,"Number",_)}},"./node_modules/core-js/modules/es6.number.epsilon.js":
/*!************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.number.epsilon.js ***!
  \************************************************************/
/*! no static exports found */function(e,o,s){var n=s(/*! ./_export */"./node_modules/core-js/modules/_export.js");n(n.S,"Number",{EPSILON:Math.pow(2,-52)})},"./node_modules/core-js/modules/es6.number.is-finite.js":
/*!**************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.number.is-finite.js ***!
  \**************************************************************/
/*! no static exports found */function(e,o,s){var n=s(/*! ./_export */"./node_modules/core-js/modules/_export.js"),t=s(/*! ./_global */"./node_modules/core-js/modules/_global.js").isFinite;n(n.S,"Number",{isFinite:function(e){return"number"==typeof e&&t(e)}})},"./node_modules/core-js/modules/es6.number.is-integer.js":
/*!***************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.number.is-integer.js ***!
  \***************************************************************/
/*! no static exports found */function(e,o,s){var n=s(/*! ./_export */"./node_modules/core-js/modules/_export.js");n(n.S,"Number",{isInteger:s(/*! ./_is-integer */"./node_modules/core-js/modules/_is-integer.js")})},"./node_modules/core-js/modules/es6.number.is-nan.js":
/*!***********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.number.is-nan.js ***!
  \***********************************************************/
/*! no static exports found */function(e,o,s){var n=s(/*! ./_export */"./node_modules/core-js/modules/_export.js");n(n.S,"Number",{isNaN:function(e){return e!=e}})},"./node_modules/core-js/modules/es6.number.is-safe-integer.js":
/*!********************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.number.is-safe-integer.js ***!
  \********************************************************************/
/*! no static exports found */function(e,o,s){var n=s(/*! ./_export */"./node_modules/core-js/modules/_export.js"),t=s(/*! ./_is-integer */"./node_modules/core-js/modules/_is-integer.js"),u=Math.abs;n(n.S,"Number",{isSafeInteger:function(e){return t(e)&&u(e)<=9007199254740991}})},"./node_modules/core-js/modules/es6.number.max-safe-integer.js":
/*!*********************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.number.max-safe-integer.js ***!
  \*********************************************************************/
/*! no static exports found */function(e,o,s){var n=s(/*! ./_export */"./node_modules/core-js/modules/_export.js");n(n.S,"Number",{MAX_SAFE_INTEGER:9007199254740991})},"./node_modules/core-js/modules/es6.number.min-safe-integer.js":
/*!*********************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.number.min-safe-integer.js ***!
  \*********************************************************************/
/*! no static exports found */function(e,o,s){var n=s(/*! ./_export */"./node_modules/core-js/modules/_export.js");n(n.S,"Number",{MIN_SAFE_INTEGER:-9007199254740991})},"./node_modules/core-js/modules/es6.number.parse-float.js":
/*!****************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.number.parse-float.js ***!
  \****************************************************************/
/*! no static exports found */function(e,o,s){var n=s(/*! ./_export */"./node_modules/core-js/modules/_export.js"),t=s(/*! ./_parse-float */"./node_modules/core-js/modules/_parse-float.js");n(n.S+n.F*(Number.parseFloat!=t),"Number",{parseFloat:t})},"./node_modules/core-js/modules/es6.number.parse-int.js":
/*!**************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.number.parse-int.js ***!
  \**************************************************************/
/*! no static exports found */function(e,o,s){var n=s(/*! ./_export */"./node_modules/core-js/modules/_export.js"),t=s(/*! ./_parse-int */"./node_modules/core-js/modules/_parse-int.js");n(n.S+n.F*(Number.parseInt!=t),"Number",{parseInt:t})},"./node_modules/core-js/modules/es6.number.to-fixed.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.number.to-fixed.js ***!
  \*************************************************************/
/*! no static exports found */function(e,o,s){"use strict";var n=s(/*! ./_export */"./node_modules/core-js/modules/_export.js"),t=s(/*! ./_to-integer */"./node_modules/core-js/modules/_to-integer.js"),u=s(/*! ./_a-number-value */"./node_modules/core-js/modules/_a-number-value.js"),r=s(/*! ./_string-repeat */"./node_modules/core-js/modules/_string-repeat.js"),d=1..toFixed,l=Math.floor,c=[0,0,0,0,0,0],i="Number.toFixed: incorrect invocation!",m=function(e,o){for(var s=-1,n=o;++s<6;)n+=e*c[s],c[s]=n%1e7,n=l(n/1e7)},j=function(e){for(var o=6,s=0;--o>=0;)s+=c[o],c[o]=l(s/e),s=s%e*1e7},_=function(){for(var e=6,o="";--e>=0;)if(""!==o||0===e||0!==c[e]){var s=String(c[e]);o=""===o?s:o+r.call("0",7-s.length)+s}return o},f=function(e,o,s){return 0===o?s:o%2==1?f(e,o-1,s*e):f(e*e,o/2,s)};n(n.P+n.F*(!!d&&("0.000"!==8e-5.toFixed(3)||"1"!==.9.toFixed(0)||"1.25"!==1.255.toFixed(2)||"1000000000000000128"!==(0xde0b6b3a7640080).toFixed(0))||!s(/*! ./_fails */"./node_modules/core-js/modules/_fails.js")(function(){d.call({})})),"Number",{toFixed:function(e){var o,s,n,d,l=u(this,i),c=t(e),a="",h="0";if(c<0||c>20)throw RangeError(i);if(l!=l)return"NaN";if(l<=-1e21||l>=1e21)return String(l);if(l<0&&(a="-",l=-l),l>1e-21)if(s=(o=function(e){for(var o=0,s=e;s>=4096;)o+=12,s/=4096;for(;s>=2;)o+=1,s/=2;return o}(l*f(2,69,1))-69)<0?l*f(2,-o,1):l/f(2,o,1),s*=4503599627370496,(o=52-o)>0){for(m(0,s),n=c;n>=7;)m(1e7,0),n-=7;for(m(f(10,n,1),0),n=o-1;n>=23;)j(1<<23),n-=23;j(1<<n),m(1,1),j(2),h=_()}else m(0,s),m(1<<-o,0),h=_()+r.call("0",c);return h=c>0?a+((d=h.length)<=c?"0."+r.call("0",c-d)+h:h.slice(0,d-c)+"."+h.slice(d-c)):a+h}})},"./node_modules/core-js/modules/es6.number.to-precision.js":
/*!*****************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.number.to-precision.js ***!
  \*****************************************************************/
/*! no static exports found */function(e,o,s){"use strict";var n=s(/*! ./_export */"./node_modules/core-js/modules/_export.js"),t=s(/*! ./_fails */"./node_modules/core-js/modules/_fails.js"),u=s(/*! ./_a-number-value */"./node_modules/core-js/modules/_a-number-value.js"),r=1..toPrecision;n(n.P+n.F*(t(function(){return"1"!==r.call(1,void 0)})||!t(function(){r.call({})})),"Number",{toPrecision:function(e){var o=u(this,"Number#toPrecision: incorrect invocation!");return void 0===e?r.call(o):r.call(o,e)}})},"./node_modules/core-js/modules/es6.object.assign.js":
/*!***********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.object.assign.js ***!
  \***********************************************************/
/*! no static exports found */function(e,o,s){var n=s(/*! ./_export */"./node_modules/core-js/modules/_export.js");n(n.S+n.F,"Object",{assign:s(/*! ./_object-assign */"./node_modules/core-js/modules/_object-assign.js")})},"./node_modules/core-js/modules/es6.object.create.js":
/*!***********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.object.create.js ***!
  \***********************************************************/
/*! no static exports found */function(e,o,s){var n=s(/*! ./_export */"./node_modules/core-js/modules/_export.js");n(n.S,"Object",{create:s(/*! ./_object-create */"./node_modules/core-js/modules/_object-create.js")})},"./node_modules/core-js/modules/es6.object.define-properties.js":
/*!**********************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.object.define-properties.js ***!
  \**********************************************************************/
/*! no static exports found */function(e,o,s){var n=s(/*! ./_export */"./node_modules/core-js/modules/_export.js");n(n.S+n.F*!s(/*! ./_descriptors */"./node_modules/core-js/modules/_descriptors.js"),"Object",{defineProperties:s(/*! ./_object-dps */"./node_modules/core-js/modules/_object-dps.js")})},"./node_modules/core-js/modules/es6.object.define-property.js":
/*!********************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.object.define-property.js ***!
  \********************************************************************/
/*! no static exports found */function(e,o,s){var n=s(/*! ./_export */"./node_modules/core-js/modules/_export.js");n(n.S+n.F*!s(/*! ./_descriptors */"./node_modules/core-js/modules/_descriptors.js"),"Object",{defineProperty:s(/*! ./_object-dp */"./node_modules/core-js/modules/_object-dp.js").f})},"./node_modules/core-js/modules/es6.object.freeze.js":
/*!***********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.object.freeze.js ***!
  \***********************************************************/
/*! no static exports found */function(e,o,s){var n=s(/*! ./_is-object */"./node_modules/core-js/modules/_is-object.js"),t=s(/*! ./_meta */"./node_modules/core-js/modules/_meta.js").onFreeze;s(/*! ./_object-sap */"./node_modules/core-js/modules/_object-sap.js")("freeze",function(e){return function(o){return e&&n(o)?e(t(o)):o}})},"./node_modules/core-js/modules/es6.object.get-own-property-descriptor.js":
/*!********************************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.object.get-own-property-descriptor.js ***!
  \********************************************************************************/
/*! no static exports found */function(e,o,s){var n=s(/*! ./_to-iobject */"./node_modules/core-js/modules/_to-iobject.js"),t=s(/*! ./_object-gopd */"./node_modules/core-js/modules/_object-gopd.js").f;s(/*! ./_object-sap */"./node_modules/core-js/modules/_object-sap.js")("getOwnPropertyDescriptor",function(){return function(e,o){return t(n(e),o)}})},"./node_modules/core-js/modules/es6.object.get-own-property-names.js":
/*!***************************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.object.get-own-property-names.js ***!
  \***************************************************************************/
/*! no static exports found */function(e,o,s){s(/*! ./_object-sap */"./node_modules/core-js/modules/_object-sap.js")("getOwnPropertyNames",function(){return s(/*! ./_object-gopn-ext */"./node_modules/core-js/modules/_object-gopn-ext.js").f})},"./node_modules/core-js/modules/es6.object.get-prototype-of.js":
/*!*********************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.object.get-prototype-of.js ***!
  \*********************************************************************/
/*! no static exports found */function(e,o,s){var n=s(/*! ./_to-object */"./node_modules/core-js/modules/_to-object.js"),t=s(/*! ./_object-gpo */"./node_modules/core-js/modules/_object-gpo.js");s(/*! ./_object-sap */"./node_modules/core-js/modules/_object-sap.js")("getPrototypeOf",function(){return function(e){return t(n(e))}})},"./node_modules/core-js/modules/es6.object.is-extensible.js":
/*!******************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.object.is-extensible.js ***!
  \******************************************************************/
/*! no static exports found */function(e,o,s){var n=s(/*! ./_is-object */"./node_modules/core-js/modules/_is-object.js");s(/*! ./_object-sap */"./node_modules/core-js/modules/_object-sap.js")("isExtensible",function(e){return function(o){return!!n(o)&&(!e||e(o))}})},"./node_modules/core-js/modules/es6.object.is-frozen.js":
/*!**************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.object.is-frozen.js ***!
  \**************************************************************/
/*! no static exports found */function(e,o,s){var n=s(/*! ./_is-object */"./node_modules/core-js/modules/_is-object.js");s(/*! ./_object-sap */"./node_modules/core-js/modules/_object-sap.js")("isFrozen",function(e){return function(o){return!n(o)||!!e&&e(o)}})},"./node_modules/core-js/modules/es6.object.is-sealed.js":
/*!**************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.object.is-sealed.js ***!
  \**************************************************************/
/*! no static exports found */function(e,o,s){var n=s(/*! ./_is-object */"./node_modules/core-js/modules/_is-object.js");s(/*! ./_object-sap */"./node_modules/core-js/modules/_object-sap.js")("isSealed",function(e){return function(o){return!n(o)||!!e&&e(o)}})},"./node_modules/core-js/modules/es6.object.is.js":
/*!*******************************************************!*\
  !*** ./node_modules/core-js/modules/es6.object.is.js ***!
  \*******************************************************/
/*! no static exports found */function(e,o,s){var n=s(/*! ./_export */"./node_modules/core-js/modules/_export.js");n(n.S,"Object",{is:s(/*! ./_same-value */"./node_modules/core-js/modules/_same-value.js")})},"./node_modules/core-js/modules/es6.object.keys.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.object.keys.js ***!
  \*********************************************************/
/*! no static exports found */function(e,o,s){var n=s(/*! ./_to-object */"./node_modules/core-js/modules/_to-object.js"),t=s(/*! ./_object-keys */"./node_modules/core-js/modules/_object-keys.js");s(/*! ./_object-sap */"./node_modules/core-js/modules/_object-sap.js")("keys",function(){return function(e){return t(n(e))}})},"./node_modules/core-js/modules/es6.object.prevent-extensions.js":
/*!***********************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.object.prevent-extensions.js ***!
  \***********************************************************************/
/*! no static exports found */function(e,o,s){var n=s(/*! ./_is-object */"./node_modules/core-js/modules/_is-object.js"),t=s(/*! ./_meta */"./node_modules/core-js/modules/_meta.js").onFreeze;s(/*! ./_object-sap */"./node_modules/core-js/modules/_object-sap.js")("preventExtensions",function(e){return function(o){return e&&n(o)?e(t(o)):o}})},"./node_modules/core-js/modules/es6.object.seal.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.object.seal.js ***!
  \*********************************************************/
/*! no static exports found */function(e,o,s){var n=s(/*! ./_is-object */"./node_modules/core-js/modules/_is-object.js"),t=s(/*! ./_meta */"./node_modules/core-js/modules/_meta.js").onFreeze;s(/*! ./_object-sap */"./node_modules/core-js/modules/_object-sap.js")("seal",function(e){return function(o){return e&&n(o)?e(t(o)):o}})},"./node_modules/core-js/modules/es6.object.set-prototype-of.js":
/*!*********************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.object.set-prototype-of.js ***!
  \*********************************************************************/
/*! no static exports found */function(e,o,s){var n=s(/*! ./_export */"./node_modules/core-js/modules/_export.js");n(n.S,"Object",{setPrototypeOf:s(/*! ./_set-proto */"./node_modules/core-js/modules/_set-proto.js").set})},"./node_modules/core-js/modules/es6.object.to-string.js":
/*!**************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.object.to-string.js ***!
  \**************************************************************/
/*! no static exports found */function(e,o,s){"use strict";var n=s(/*! ./_classof */"./node_modules/core-js/modules/_classof.js"),t={};t[s(/*! ./_wks */"./node_modules/core-js/modules/_wks.js")("toStringTag")]="z",t+""!="[object z]"&&s(/*! ./_redefine */"./node_modules/core-js/modules/_redefine.js")(Object.prototype,"toString",function(){return"[object "+n(this)+"]"},!0)},"./node_modules/core-js/modules/es6.parse-float.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.parse-float.js ***!
  \*********************************************************/
/*! no static exports found */function(e,o,s){var n=s(/*! ./_export */"./node_modules/core-js/modules/_export.js"),t=s(/*! ./_parse-float */"./node_modules/core-js/modules/_parse-float.js");n(n.G+n.F*(parseFloat!=t),{parseFloat:t})},"./node_modules/core-js/modules/es6.parse-int.js":
/*!*******************************************************!*\
  !*** ./node_modules/core-js/modules/es6.parse-int.js ***!
  \*******************************************************/
/*! no static exports found */function(e,o,s){var n=s(/*! ./_export */"./node_modules/core-js/modules/_export.js"),t=s(/*! ./_parse-int */"./node_modules/core-js/modules/_parse-int.js");n(n.G+n.F*(parseInt!=t),{parseInt:t})},"./node_modules/core-js/modules/es6.promise.js":
/*!*****************************************************!*\
  !*** ./node_modules/core-js/modules/es6.promise.js ***!
  \*****************************************************/
/*! no static exports found */function(e,o,s){"use strict";var n,t,u,r,d=s(/*! ./_library */"./node_modules/core-js/modules/_library.js"),l=s(/*! ./_global */"./node_modules/core-js/modules/_global.js"),c=s(/*! ./_ctx */"./node_modules/core-js/modules/_ctx.js"),i=s(/*! ./_classof */"./node_modules/core-js/modules/_classof.js"),m=s(/*! ./_export */"./node_modules/core-js/modules/_export.js"),j=s(/*! ./_is-object */"./node_modules/core-js/modules/_is-object.js"),_=s(/*! ./_a-function */"./node_modules/core-js/modules/_a-function.js"),f=s(/*! ./_an-instance */"./node_modules/core-js/modules/_an-instance.js"),a=s(/*! ./_for-of */"./node_modules/core-js/modules/_for-of.js"),h=s(/*! ./_species-constructor */"./node_modules/core-js/modules/_species-constructor.js"),p=s(/*! ./_task */"./node_modules/core-js/modules/_task.js").set,v=s(/*! ./_microtask */"./node_modules/core-js/modules/_microtask.js")(),g=s(/*! ./_new-promise-capability */"./node_modules/core-js/modules/_new-promise-capability.js"),b=s(/*! ./_perform */"./node_modules/core-js/modules/_perform.js"),w=s(/*! ./_user-agent */"./node_modules/core-js/modules/_user-agent.js"),x=s(/*! ./_promise-resolve */"./node_modules/core-js/modules/_promise-resolve.js"),y=l.TypeError,S=l.process,M=S&&S.versions,F=M&&M.v8||"",k=l.Promise,N="process"==i(S),W=function(){},z=t=g.f,X=!!function(){try{var e=k.resolve(1),o=(e.constructor={})[s(/*! ./_wks */"./node_modules/core-js/modules/_wks.js")("species")]=function(e){e(W,W)};return(N||"function"==typeof PromiseRejectionEvent)&&e.then(W)instanceof o&&0!==F.indexOf("6.6")&&-1===w.indexOf("Chrome/66")}catch(e){}}(),U=function(e){var o;return!(!j(e)||"function"!=typeof(o=e.then))&&o},V=function(e,o){if(!e._n){e._n=!0;var s=e._c;v(function(){for(var n=e._v,t=1==e._s,u=0,r=function(o){var s,u,r,d=t?o.ok:o.fail,l=o.resolve,c=o.reject,i=o.domain;try{d?(t||(2==e._h&&Q(e),e._h=1),!0===d?s=n:(i&&i.enter(),s=d(n),i&&(i.exit(),r=!0)),s===o.promise?c(y("Promise-chain cycle")):(u=U(s))?u.call(s,l,c):l(s)):c(n)}catch(e){i&&!r&&i.exit(),c(e)}};s.length>u;)r(s[u++]);e._c=[],e._n=!1,o&&!e._h&&H(e)})}},H=function(e){p.call(l,function(){var o,s,n,t=e._v,u=J(e);if(u&&(o=b(function(){N?S.emit("unhandledRejection",t,e):(s=l.onunhandledrejection)?s({promise:e,reason:t}):(n=l.console)&&n.error&&n.error("Unhandled promise rejection",t)}),e._h=N||J(e)?2:1),e._a=void 0,u&&o.e)throw o.v})},J=function(e){return 1!==e._h&&0===(e._a||e._c).length},Q=function(e){p.call(l,function(){var o;N?S.emit("rejectionHandled",e):(o=l.onrejectionhandled)&&o({promise:e,reason:e._v})})},Z=function(e){var o=this;o._d||(o._d=!0,(o=o._w||o)._v=e,o._s=2,o._a||(o._a=o._c.slice()),V(o,!0))},K=function(e){var o,s=this;if(!s._d){s._d=!0,s=s._w||s;try{if(s===e)throw y("Promise can't be resolved itself");(o=U(e))?v(function(){var n={_w:s,_d:!1};try{o.call(e,c(K,n,1),c(Z,n,1))}catch(e){Z.call(n,e)}}):(s._v=e,s._s=1,V(s,!1))}catch(e){Z.call({_w:s,_d:!1},e)}}};X||(k=function(e){f(this,k,"Promise","_h"),_(e),n.call(this);try{e(c(K,this,1),c(Z,this,1))}catch(e){Z.call(this,e)}},(n=function(e){this._c=[],this._a=void 0,this._s=0,this._d=!1,this._v=void 0,this._h=0,this._n=!1}).prototype=s(/*! ./_redefine-all */"./node_modules/core-js/modules/_redefine-all.js")(k.prototype,{then:function(e,o){var s=z(h(this,k));return s.ok="function"!=typeof e||e,s.fail="function"==typeof o&&o,s.domain=N?S.domain:void 0,this._c.push(s),this._a&&this._a.push(s),this._s&&V(this,!1),s.promise},catch:function(e){return this.then(void 0,e)}}),u=function(){var e=new n;this.promise=e,this.resolve=c(K,e,1),this.reject=c(Z,e,1)},g.f=z=function(e){return e===k||e===r?new u(e):t(e)}),m(m.G+m.W+m.F*!X,{Promise:k}),s(/*! ./_set-to-string-tag */"./node_modules/core-js/modules/_set-to-string-tag.js")(k,"Promise"),s(/*! ./_set-species */"./node_modules/core-js/modules/_set-species.js")("Promise"),r=s(/*! ./_core */"./node_modules/core-js/modules/_core.js").Promise,m(m.S+m.F*!X,"Promise",{reject:function(e){var o=z(this);return(0,o.reject)(e),o.promise}}),m(m.S+m.F*(d||!X),"Promise",{resolve:function(e){return x(d&&this===r?k:this,e)}}),m(m.S+m.F*!(X&&s(/*! ./_iter-detect */"./node_modules/core-js/modules/_iter-detect.js")(function(e){k.all(e).catch(W)})),"Promise",{all:function(e){var o=this,s=z(o),n=s.resolve,t=s.reject,u=b(function(){var s=[],u=0,r=1;a(e,!1,function(e){var d=u++,l=!1;s.push(void 0),r++,o.resolve(e).then(function(e){l||(l=!0,s[d]=e,--r||n(s))},t)}),--r||n(s)});return u.e&&t(u.v),s.promise},race:function(e){var o=this,s=z(o),n=s.reject,t=b(function(){a(e,!1,function(e){o.resolve(e).then(s.resolve,n)})});return t.e&&n(t.v),s.promise}})},"./node_modules/core-js/modules/es6.reflect.apply.js":
/*!***********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.reflect.apply.js ***!
  \***********************************************************/
/*! no static exports found */function(e,o,s){var n=s(/*! ./_export */"./node_modules/core-js/modules/_export.js"),t=s(/*! ./_a-function */"./node_modules/core-js/modules/_a-function.js"),u=s(/*! ./_an-object */"./node_modules/core-js/modules/_an-object.js"),r=(s(/*! ./_global */"./node_modules/core-js/modules/_global.js").Reflect||{}).apply,d=Function.apply;n(n.S+n.F*!s(/*! ./_fails */"./node_modules/core-js/modules/_fails.js")(function(){r(function(){})}),"Reflect",{apply:function(e,o,s){var n=t(e),l=u(s);return r?r(n,o,l):d.call(n,o,l)}})},"./node_modules/core-js/modules/es6.reflect.construct.js":
/*!***************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.reflect.construct.js ***!
  \***************************************************************/
/*! no static exports found */function(e,o,s){var n=s(/*! ./_export */"./node_modules/core-js/modules/_export.js"),t=s(/*! ./_object-create */"./node_modules/core-js/modules/_object-create.js"),u=s(/*! ./_a-function */"./node_modules/core-js/modules/_a-function.js"),r=s(/*! ./_an-object */"./node_modules/core-js/modules/_an-object.js"),d=s(/*! ./_is-object */"./node_modules/core-js/modules/_is-object.js"),l=s(/*! ./_fails */"./node_modules/core-js/modules/_fails.js"),c=s(/*! ./_bind */"./node_modules/core-js/modules/_bind.js"),i=(s(/*! ./_global */"./node_modules/core-js/modules/_global.js").Reflect||{}).construct,m=l(function(){function e(){}return!(i(function(){},[],e)instanceof e)}),j=!l(function(){i(function(){})});n(n.S+n.F*(m||j),"Reflect",{construct:function(e,o){u(e),r(o);var s=arguments.length<3?e:u(arguments[2]);if(j&&!m)return i(e,o,s);if(e==s){switch(o.length){case 0:return new e;case 1:return new e(o[0]);case 2:return new e(o[0],o[1]);case 3:return new e(o[0],o[1],o[2]);case 4:return new e(o[0],o[1],o[2],o[3])}var n=[null];return n.push.apply(n,o),new(c.apply(e,n))}var l=s.prototype,_=t(d(l)?l:Object.prototype),f=Function.apply.call(e,_,o);return d(f)?f:_}})},"./node_modules/core-js/modules/es6.reflect.define-property.js":
/*!*********************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.reflect.define-property.js ***!
  \*********************************************************************/
/*! no static exports found */function(e,o,s){var n=s(/*! ./_object-dp */"./node_modules/core-js/modules/_object-dp.js"),t=s(/*! ./_export */"./node_modules/core-js/modules/_export.js"),u=s(/*! ./_an-object */"./node_modules/core-js/modules/_an-object.js"),r=s(/*! ./_to-primitive */"./node_modules/core-js/modules/_to-primitive.js");t(t.S+t.F*s(/*! ./_fails */"./node_modules/core-js/modules/_fails.js")(function(){Reflect.defineProperty(n.f({},1,{value:1}),1,{value:2})}),"Reflect",{defineProperty:function(e,o,s){u(e),o=r(o,!0),u(s);try{return n.f(e,o,s),!0}catch(e){return!1}}})},"./node_modules/core-js/modules/es6.reflect.delete-property.js":
/*!*********************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.reflect.delete-property.js ***!
  \*********************************************************************/
/*! no static exports found */function(e,o,s){var n=s(/*! ./_export */"./node_modules/core-js/modules/_export.js"),t=s(/*! ./_object-gopd */"./node_modules/core-js/modules/_object-gopd.js").f,u=s(/*! ./_an-object */"./node_modules/core-js/modules/_an-object.js");n(n.S,"Reflect",{deleteProperty:function(e,o){var s=t(u(e),o);return!(s&&!s.configurable)&&delete e[o]}})},"./node_modules/core-js/modules/es6.reflect.enumerate.js":
/*!***************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.reflect.enumerate.js ***!
  \***************************************************************/
/*! no static exports found */function(e,o,s){"use strict";var n=s(/*! ./_export */"./node_modules/core-js/modules/_export.js"),t=s(/*! ./_an-object */"./node_modules/core-js/modules/_an-object.js"),u=function(e){this._t=t(e),this._i=0;var o,s=this._k=[];for(o in e)s.push(o)};s(/*! ./_iter-create */"./node_modules/core-js/modules/_iter-create.js")(u,"Object",function(){var e,o=this._k;do{if(this._i>=o.length)return{value:void 0,done:!0}}while(!((e=o[this._i++])in this._t));return{value:e,done:!1}}),n(n.S,"Reflect",{enumerate:function(e){return new u(e)}})},"./node_modules/core-js/modules/es6.reflect.get-own-property-descriptor.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.reflect.get-own-property-descriptor.js ***!
  \*********************************************************************************/
/*! no static exports found */function(e,o,s){var n=s(/*! ./_object-gopd */"./node_modules/core-js/modules/_object-gopd.js"),t=s(/*! ./_export */"./node_modules/core-js/modules/_export.js"),u=s(/*! ./_an-object */"./node_modules/core-js/modules/_an-object.js");t(t.S,"Reflect",{getOwnPropertyDescriptor:function(e,o){return n.f(u(e),o)}})},"./node_modules/core-js/modules/es6.reflect.get-prototype-of.js":
/*!**********************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.reflect.get-prototype-of.js ***!
  \**********************************************************************/
/*! no static exports found */function(e,o,s){var n=s(/*! ./_export */"./node_modules/core-js/modules/_export.js"),t=s(/*! ./_object-gpo */"./node_modules/core-js/modules/_object-gpo.js"),u=s(/*! ./_an-object */"./node_modules/core-js/modules/_an-object.js");n(n.S,"Reflect",{getPrototypeOf:function(e){return t(u(e))}})},"./node_modules/core-js/modules/es6.reflect.get.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.reflect.get.js ***!
  \*********************************************************/
/*! no static exports found */function(e,o,s){var n=s(/*! ./_object-gopd */"./node_modules/core-js/modules/_object-gopd.js"),t=s(/*! ./_object-gpo */"./node_modules/core-js/modules/_object-gpo.js"),u=s(/*! ./_has */"./node_modules/core-js/modules/_has.js"),r=s(/*! ./_export */"./node_modules/core-js/modules/_export.js"),d=s(/*! ./_is-object */"./node_modules/core-js/modules/_is-object.js"),l=s(/*! ./_an-object */"./node_modules/core-js/modules/_an-object.js");r(r.S,"Reflect",{get:function e(o,s){var r,c,i=arguments.length<3?o:arguments[2];return l(o)===i?o[s]:(r=n.f(o,s))?u(r,"value")?r.value:void 0!==r.get?r.get.call(i):void 0:d(c=t(o))?e(c,s,i):void 0}})},"./node_modules/core-js/modules/es6.reflect.has.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.reflect.has.js ***!
  \*********************************************************/
/*! no static exports found */function(e,o,s){var n=s(/*! ./_export */"./node_modules/core-js/modules/_export.js");n(n.S,"Reflect",{has:function(e,o){return o in e}})},"./node_modules/core-js/modules/es6.reflect.is-extensible.js":
/*!*******************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.reflect.is-extensible.js ***!
  \*******************************************************************/
/*! no static exports found */function(e,o,s){var n=s(/*! ./_export */"./node_modules/core-js/modules/_export.js"),t=s(/*! ./_an-object */"./node_modules/core-js/modules/_an-object.js"),u=Object.isExtensible;n(n.S,"Reflect",{isExtensible:function(e){return t(e),!u||u(e)}})},"./node_modules/core-js/modules/es6.reflect.own-keys.js":
/*!**************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.reflect.own-keys.js ***!
  \**************************************************************/
/*! no static exports found */function(e,o,s){var n=s(/*! ./_export */"./node_modules/core-js/modules/_export.js");n(n.S,"Reflect",{ownKeys:s(/*! ./_own-keys */"./node_modules/core-js/modules/_own-keys.js")})},"./node_modules/core-js/modules/es6.reflect.prevent-extensions.js":
/*!************************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.reflect.prevent-extensions.js ***!
  \************************************************************************/
/*! no static exports found */function(e,o,s){var n=s(/*! ./_export */"./node_modules/core-js/modules/_export.js"),t=s(/*! ./_an-object */"./node_modules/core-js/modules/_an-object.js"),u=Object.preventExtensions;n(n.S,"Reflect",{preventExtensions:function(e){t(e);try{return u&&u(e),!0}catch(e){return!1}}})},"./node_modules/core-js/modules/es6.reflect.set-prototype-of.js":
/*!**********************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.reflect.set-prototype-of.js ***!
  \**********************************************************************/
/*! no static exports found */function(e,o,s){var n=s(/*! ./_export */"./node_modules/core-js/modules/_export.js"),t=s(/*! ./_set-proto */"./node_modules/core-js/modules/_set-proto.js");t&&n(n.S,"Reflect",{setPrototypeOf:function(e,o){t.check(e,o);try{return t.set(e,o),!0}catch(e){return!1}}})},"./node_modules/core-js/modules/es6.reflect.set.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.reflect.set.js ***!
  \*********************************************************/
/*! no static exports found */function(e,o,s){var n=s(/*! ./_object-dp */"./node_modules/core-js/modules/_object-dp.js"),t=s(/*! ./_object-gopd */"./node_modules/core-js/modules/_object-gopd.js"),u=s(/*! ./_object-gpo */"./node_modules/core-js/modules/_object-gpo.js"),r=s(/*! ./_has */"./node_modules/core-js/modules/_has.js"),d=s(/*! ./_export */"./node_modules/core-js/modules/_export.js"),l=s(/*! ./_property-desc */"./node_modules/core-js/modules/_property-desc.js"),c=s(/*! ./_an-object */"./node_modules/core-js/modules/_an-object.js"),i=s(/*! ./_is-object */"./node_modules/core-js/modules/_is-object.js");d(d.S,"Reflect",{set:function e(o,s,d){var m,j,_=arguments.length<4?o:arguments[3],f=t.f(c(o),s);if(!f){if(i(j=u(o)))return e(j,s,d,_);f=l(0)}if(r(f,"value")){if(!1===f.writable||!i(_))return!1;if(m=t.f(_,s)){if(m.get||m.set||!1===m.writable)return!1;m.value=d,n.f(_,s,m)}else n.f(_,s,l(0,d));return!0}return void 0!==f.set&&(f.set.call(_,d),!0)}})},"./node_modules/core-js/modules/es6.regexp.constructor.js":
/*!****************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.regexp.constructor.js ***!
  \****************************************************************/
/*! no static exports found */function(e,o,s){var n=s(/*! ./_global */"./node_modules/core-js/modules/_global.js"),t=s(/*! ./_inherit-if-required */"./node_modules/core-js/modules/_inherit-if-required.js"),u=s(/*! ./_object-dp */"./node_modules/core-js/modules/_object-dp.js").f,r=s(/*! ./_object-gopn */"./node_modules/core-js/modules/_object-gopn.js").f,d=s(/*! ./_is-regexp */"./node_modules/core-js/modules/_is-regexp.js"),l=s(/*! ./_flags */"./node_modules/core-js/modules/_flags.js"),c=n.RegExp,i=c,m=c.prototype,j=/a/g,_=/a/g,f=new c(j)!==j;if(s(/*! ./_descriptors */"./node_modules/core-js/modules/_descriptors.js")&&(!f||s(/*! ./_fails */"./node_modules/core-js/modules/_fails.js")(function(){return _[s(/*! ./_wks */"./node_modules/core-js/modules/_wks.js")("match")]=!1,c(j)!=j||c(_)==_||"/a/i"!=c(j,"i")}))){c=function(e,o){var s=this instanceof c,n=d(e),u=void 0===o;return!s&&n&&e.constructor===c&&u?e:t(f?new i(n&&!u?e.source:e,o):i((n=e instanceof c)?e.source:e,n&&u?l.call(e):o),s?this:m,c)};for(var a=function(e){e in c||u(c,e,{configurable:!0,get:function(){return i[e]},set:function(o){i[e]=o}})},h=r(i),p=0;h.length>p;)a(h[p++]);m.constructor=c,c.prototype=m,s(/*! ./_redefine */"./node_modules/core-js/modules/_redefine.js")(n,"RegExp",c)}s(/*! ./_set-species */"./node_modules/core-js/modules/_set-species.js")("RegExp")},"./node_modules/core-js/modules/es6.regexp.exec.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.regexp.exec.js ***!
  \*********************************************************/
/*! no static exports found */function(e,o,s){"use strict";var n=s(/*! ./_regexp-exec */"./node_modules/core-js/modules/_regexp-exec.js");s(/*! ./_export */"./node_modules/core-js/modules/_export.js")({target:"RegExp",proto:!0,forced:n!==/./.exec},{exec:n})},"./node_modules/core-js/modules/es6.regexp.flags.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.regexp.flags.js ***!
  \**********************************************************/
/*! no static exports found */function(e,o,s){s(/*! ./_descriptors */"./node_modules/core-js/modules/_descriptors.js")&&"g"!=/./g.flags&&s(/*! ./_object-dp */"./node_modules/core-js/modules/_object-dp.js").f(RegExp.prototype,"flags",{configurable:!0,get:s(/*! ./_flags */"./node_modules/core-js/modules/_flags.js")})},"./node_modules/core-js/modules/es6.regexp.match.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.regexp.match.js ***!
  \**********************************************************/
/*! no static exports found */function(e,o,s){"use strict";var n=s(/*! ./_an-object */"./node_modules/core-js/modules/_an-object.js"),t=s(/*! ./_to-length */"./node_modules/core-js/modules/_to-length.js"),u=s(/*! ./_advance-string-index */"./node_modules/core-js/modules/_advance-string-index.js"),r=s(/*! ./_regexp-exec-abstract */"./node_modules/core-js/modules/_regexp-exec-abstract.js");s(/*! ./_fix-re-wks */"./node_modules/core-js/modules/_fix-re-wks.js")("match",1,function(e,o,s,d){return[function(s){var n=e(this),t=null==s?void 0:s[o];return void 0!==t?t.call(s,n):new RegExp(s)[o](String(n))},function(e){var o=d(s,e,this);if(o.done)return o.value;var l=n(e),c=String(this);if(!l.global)return r(l,c);var i=l.unicode;l.lastIndex=0;for(var m,j=[],_=0;null!==(m=r(l,c));){var f=String(m[0]);j[_]=f,""===f&&(l.lastIndex=u(c,t(l.lastIndex),i)),_++}return 0===_?null:j}]})},"./node_modules/core-js/modules/es6.regexp.replace.js":
/*!************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.regexp.replace.js ***!
  \************************************************************/
/*! no static exports found */function(e,o,s){"use strict";var n=s(/*! ./_an-object */"./node_modules/core-js/modules/_an-object.js"),t=s(/*! ./_to-object */"./node_modules/core-js/modules/_to-object.js"),u=s(/*! ./_to-length */"./node_modules/core-js/modules/_to-length.js"),r=s(/*! ./_to-integer */"./node_modules/core-js/modules/_to-integer.js"),d=s(/*! ./_advance-string-index */"./node_modules/core-js/modules/_advance-string-index.js"),l=s(/*! ./_regexp-exec-abstract */"./node_modules/core-js/modules/_regexp-exec-abstract.js"),c=Math.max,i=Math.min,m=Math.floor,j=/\$([$&`']|\d\d?|<[^>]*>)/g,_=/\$([$&`']|\d\d?)/g;s(/*! ./_fix-re-wks */"./node_modules/core-js/modules/_fix-re-wks.js")("replace",2,function(e,o,s,f){return[function(n,t){var u=e(this),r=null==n?void 0:n[o];return void 0!==r?r.call(n,u,t):s.call(String(u),n,t)},function(e,o){var t=f(s,e,this,o);if(t.done)return t.value;var m=n(e),j=String(this),_="function"==typeof o;_||(o=String(o));var h=m.global;if(h){var p=m.unicode;m.lastIndex=0}for(var v=[];;){var g=l(m,j);if(null===g)break;if(v.push(g),!h)break;""===String(g[0])&&(m.lastIndex=d(j,u(m.lastIndex),p))}for(var b,w="",x=0,y=0;y<v.length;y++){g=v[y];for(var S=String(g[0]),M=c(i(r(g.index),j.length),0),F=[],k=1;k<g.length;k++)F.push(void 0===(b=g[k])?b:String(b));var N=g.groups;if(_){var W=[S].concat(F,M,j);void 0!==N&&W.push(N);var z=String(o.apply(void 0,W))}else z=a(S,j,M,F,N,o);M>=x&&(w+=j.slice(x,M)+z,x=M+S.length)}return w+j.slice(x)}];function a(e,o,n,u,r,d){var l=n+e.length,c=u.length,i=_;return void 0!==r&&(r=t(r),i=j),s.call(d,i,function(s,t){var d;switch(t.charAt(0)){case"$":return"$";case"&":return e;case"`":return o.slice(0,n);case"'":return o.slice(l);case"<":d=r[t.slice(1,-1)];break;default:var i=+t;if(0===i)return t;if(i>c){var j=m(i/10);return 0===j?t:j<=c?void 0===u[j-1]?t.charAt(1):u[j-1]+t.charAt(1):t}d=u[i-1]}return void 0===d?"":d})}})},"./node_modules/core-js/modules/es6.regexp.search.js":
/*!***********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.regexp.search.js ***!
  \***********************************************************/
/*! no static exports found */function(e,o,s){"use strict";var n=s(/*! ./_an-object */"./node_modules/core-js/modules/_an-object.js"),t=s(/*! ./_same-value */"./node_modules/core-js/modules/_same-value.js"),u=s(/*! ./_regexp-exec-abstract */"./node_modules/core-js/modules/_regexp-exec-abstract.js");s(/*! ./_fix-re-wks */"./node_modules/core-js/modules/_fix-re-wks.js")("search",1,function(e,o,s,r){return[function(s){var n=e(this),t=null==s?void 0:s[o];return void 0!==t?t.call(s,n):new RegExp(s)[o](String(n))},function(e){var o=r(s,e,this);if(o.done)return o.value;var d=n(e),l=String(this),c=d.lastIndex;t(c,0)||(d.lastIndex=0);var i=u(d,l);return t(d.lastIndex,c)||(d.lastIndex=c),null===i?-1:i.index}]})},"./node_modules/core-js/modules/es6.regexp.split.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.regexp.split.js ***!
  \**********************************************************/
/*! no static exports found */function(e,o,s){"use strict";var n=s(/*! ./_is-regexp */"./node_modules/core-js/modules/_is-regexp.js"),t=s(/*! ./_an-object */"./node_modules/core-js/modules/_an-object.js"),u=s(/*! ./_species-constructor */"./node_modules/core-js/modules/_species-constructor.js"),r=s(/*! ./_advance-string-index */"./node_modules/core-js/modules/_advance-string-index.js"),d=s(/*! ./_to-length */"./node_modules/core-js/modules/_to-length.js"),l=s(/*! ./_regexp-exec-abstract */"./node_modules/core-js/modules/_regexp-exec-abstract.js"),c=s(/*! ./_regexp-exec */"./node_modules/core-js/modules/_regexp-exec.js"),i=Math.min,m=[].push,j=!!function(){try{return new RegExp("x","y")}catch(e){}}();s(/*! ./_fix-re-wks */"./node_modules/core-js/modules/_fix-re-wks.js")("split",2,function(e,o,s,_){var f;return f="c"=="abbc".split(/(b)*/)[1]||4!="test".split(/(?:)/,-1).length||2!="ab".split(/(?:ab)*/).length||4!=".".split(/(.?)(.?)/).length||".".split(/()()/).length>1||"".split(/.?/).length?function(e,o){var t=String(this);if(void 0===e&&0===o)return[];if(!n(e))return s.call(t,e,o);for(var u,r,d,l=[],i=(e.ignoreCase?"i":"")+(e.multiline?"m":"")+(e.unicode?"u":"")+(e.sticky?"y":""),j=0,_=void 0===o?4294967295:o>>>0,f=new RegExp(e.source,i+"g");(u=c.call(f,t))&&!((r=f.lastIndex)>j&&(l.push(t.slice(j,u.index)),u.length>1&&u.index<t.length&&m.apply(l,u.slice(1)),d=u[0].length,j=r,l.length>=_));)f.lastIndex===u.index&&f.lastIndex++;return j===t.length?!d&&f.test("")||l.push(""):l.push(t.slice(j)),l.length>_?l.slice(0,_):l}:"0".split(void 0,0).length?function(e,o){return void 0===e&&0===o?[]:s.call(this,e,o)}:s,[function(s,n){var t=e(this),u=null==s?void 0:s[o];return void 0!==u?u.call(s,t,n):f.call(String(t),s,n)},function(e,o){var n=_(f,e,this,o,f!==s);if(n.done)return n.value;var c=t(e),m=String(this),a=u(c,RegExp),h=c.unicode,p=(c.ignoreCase?"i":"")+(c.multiline?"m":"")+(c.unicode?"u":"")+(j?"y":"g"),v=new a(j?c:"^(?:"+c.source+")",p),g=void 0===o?4294967295:o>>>0;if(0===g)return[];if(0===m.length)return null===l(v,m)?[m]:[];for(var b=0,w=0,x=[];w<m.length;){v.lastIndex=j?w:0;var y,S=l(v,j?m:m.slice(w));if(null===S||(y=i(d(v.lastIndex+(j?0:w)),m.length))===b)w=r(m,w,h);else{if(x.push(m.slice(b,w)),x.length===g)return x;for(var M=1;M<=S.length-1;M++)if(x.push(S[M]),x.length===g)return x;w=b=y}}return x.push(m.slice(b)),x}]})},"./node_modules/core-js/modules/es6.regexp.to-string.js":
/*!**************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.regexp.to-string.js ***!
  \**************************************************************/
/*! no static exports found */function(e,o,s){"use strict";s(/*! ./es6.regexp.flags */"./node_modules/core-js/modules/es6.regexp.flags.js");var n=s(/*! ./_an-object */"./node_modules/core-js/modules/_an-object.js"),t=s(/*! ./_flags */"./node_modules/core-js/modules/_flags.js"),u=s(/*! ./_descriptors */"./node_modules/core-js/modules/_descriptors.js"),r=/./.toString,d=function(e){s(/*! ./_redefine */"./node_modules/core-js/modules/_redefine.js")(RegExp.prototype,"toString",e,!0)};s(/*! ./_fails */"./node_modules/core-js/modules/_fails.js")(function(){return"/a/b"!=r.call({source:"a",flags:"b"})})?d(function(){var e=n(this);return"/".concat(e.source,"/","flags"in e?e.flags:!u&&e instanceof RegExp?t.call(e):void 0)}):"toString"!=r.name&&d(function(){return r.call(this)})},"./node_modules/core-js/modules/es6.set.js":
/*!*************************************************!*\
  !*** ./node_modules/core-js/modules/es6.set.js ***!
  \*************************************************/
/*! no static exports found */function(e,o,s){"use strict";var n=s(/*! ./_collection-strong */"./node_modules/core-js/modules/_collection-strong.js"),t=s(/*! ./_validate-collection */"./node_modules/core-js/modules/_validate-collection.js");e.exports=s(/*! ./_collection */"./node_modules/core-js/modules/_collection.js")("Set",function(e){return function(){return e(this,arguments.length>0?arguments[0]:void 0)}},{add:function(e){return n.def(t(this,"Set"),e=0===e?0:e,e)}},n)},"./node_modules/core-js/modules/es6.string.anchor.js":
/*!***********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.string.anchor.js ***!
  \***********************************************************/
/*! no static exports found */function(e,o,s){"use strict";s(/*! ./_string-html */"./node_modules/core-js/modules/_string-html.js")("anchor",function(e){return function(o){return e(this,"a","name",o)}})},"./node_modules/core-js/modules/es6.string.big.js":
/*!********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.string.big.js ***!
  \********************************************************/
/*! no static exports found */function(e,o,s){"use strict";s(/*! ./_string-html */"./node_modules/core-js/modules/_string-html.js")("big",function(e){return function(){return e(this,"big","","")}})},"./node_modules/core-js/modules/es6.string.blink.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.string.blink.js ***!
  \**********************************************************/
/*! no static exports found */function(e,o,s){"use strict";s(/*! ./_string-html */"./node_modules/core-js/modules/_string-html.js")("blink",function(e){return function(){return e(this,"blink","","")}})},"./node_modules/core-js/modules/es6.string.bold.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.string.bold.js ***!
  \*********************************************************/
/*! no static exports found */function(e,o,s){"use strict";s(/*! ./_string-html */"./node_modules/core-js/modules/_string-html.js")("bold",function(e){return function(){return e(this,"b","","")}})},"./node_modules/core-js/modules/es6.string.code-point-at.js":
/*!******************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.string.code-point-at.js ***!
  \******************************************************************/
/*! no static exports found */function(e,o,s){"use strict";var n=s(/*! ./_export */"./node_modules/core-js/modules/_export.js"),t=s(/*! ./_string-at */"./node_modules/core-js/modules/_string-at.js")(!1);n(n.P,"String",{codePointAt:function(e){return t(this,e)}})},"./node_modules/core-js/modules/es6.string.ends-with.js":
/*!**************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.string.ends-with.js ***!
  \**************************************************************/
/*! no static exports found */function(e,o,s){"use strict";var n=s(/*! ./_export */"./node_modules/core-js/modules/_export.js"),t=s(/*! ./_to-length */"./node_modules/core-js/modules/_to-length.js"),u=s(/*! ./_string-context */"./node_modules/core-js/modules/_string-context.js"),r="".endsWith;n(n.P+n.F*s(/*! ./_fails-is-regexp */"./node_modules/core-js/modules/_fails-is-regexp.js")("endsWith"),"String",{endsWith:function(e){var o=u(this,e,"endsWith"),s=arguments.length>1?arguments[1]:void 0,n=t(o.length),d=void 0===s?n:Math.min(t(s),n),l=String(e);return r?r.call(o,l,d):o.slice(d-l.length,d)===l}})},"./node_modules/core-js/modules/es6.string.fixed.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.string.fixed.js ***!
  \**********************************************************/
/*! no static exports found */function(e,o,s){"use strict";s(/*! ./_string-html */"./node_modules/core-js/modules/_string-html.js")("fixed",function(e){return function(){return e(this,"tt","","")}})},"./node_modules/core-js/modules/es6.string.fontcolor.js":
/*!**************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.string.fontcolor.js ***!
  \**************************************************************/
/*! no static exports found */function(e,o,s){"use strict";s(/*! ./_string-html */"./node_modules/core-js/modules/_string-html.js")("fontcolor",function(e){return function(o){return e(this,"font","color",o)}})},"./node_modules/core-js/modules/es6.string.fontsize.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.string.fontsize.js ***!
  \*************************************************************/
/*! no static exports found */function(e,o,s){"use strict";s(/*! ./_string-html */"./node_modules/core-js/modules/_string-html.js")("fontsize",function(e){return function(o){return e(this,"font","size",o)}})},"./node_modules/core-js/modules/es6.string.from-code-point.js":
/*!********************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.string.from-code-point.js ***!
  \********************************************************************/
/*! no static exports found */function(e,o,s){var n=s(/*! ./_export */"./node_modules/core-js/modules/_export.js"),t=s(/*! ./_to-absolute-index */"./node_modules/core-js/modules/_to-absolute-index.js"),u=String.fromCharCode,r=String.fromCodePoint;n(n.S+n.F*(!!r&&1!=r.length),"String",{fromCodePoint:function(e){for(var o,s=[],n=arguments.length,r=0;n>r;){if(o=+arguments[r++],t(o,1114111)!==o)throw RangeError(o+" is not a valid code point");s.push(o<65536?u(o):u(55296+((o-=65536)>>10),o%1024+56320))}return s.join("")}})},"./node_modules/core-js/modules/es6.string.includes.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.string.includes.js ***!
  \*************************************************************/
/*! no static exports found */function(e,o,s){"use strict";var n=s(/*! ./_export */"./node_modules/core-js/modules/_export.js"),t=s(/*! ./_string-context */"./node_modules/core-js/modules/_string-context.js");n(n.P+n.F*s(/*! ./_fails-is-regexp */"./node_modules/core-js/modules/_fails-is-regexp.js")("includes"),"String",{includes:function(e){return!!~t(this,e,"includes").indexOf(e,arguments.length>1?arguments[1]:void 0)}})},"./node_modules/core-js/modules/es6.string.italics.js":
/*!************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.string.italics.js ***!
  \************************************************************/
/*! no static exports found */function(e,o,s){"use strict";s(/*! ./_string-html */"./node_modules/core-js/modules/_string-html.js")("italics",function(e){return function(){return e(this,"i","","")}})},"./node_modules/core-js/modules/es6.string.iterator.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.string.iterator.js ***!
  \*************************************************************/
/*! no static exports found */function(e,o,s){"use strict";var n=s(/*! ./_string-at */"./node_modules/core-js/modules/_string-at.js")(!0);s(/*! ./_iter-define */"./node_modules/core-js/modules/_iter-define.js")(String,"String",function(e){this._t=String(e),this._i=0},function(){var e,o=this._t,s=this._i;return s>=o.length?{value:void 0,done:!0}:(e=n(o,s),this._i+=e.length,{value:e,done:!1})})},"./node_modules/core-js/modules/es6.string.link.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.string.link.js ***!
  \*********************************************************/
/*! no static exports found */function(e,o,s){"use strict";s(/*! ./_string-html */"./node_modules/core-js/modules/_string-html.js")("link",function(e){return function(o){return e(this,"a","href",o)}})},"./node_modules/core-js/modules/es6.string.raw.js":
/*!********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.string.raw.js ***!
  \********************************************************/
/*! no static exports found */function(e,o,s){var n=s(/*! ./_export */"./node_modules/core-js/modules/_export.js"),t=s(/*! ./_to-iobject */"./node_modules/core-js/modules/_to-iobject.js"),u=s(/*! ./_to-length */"./node_modules/core-js/modules/_to-length.js");n(n.S,"String",{raw:function(e){for(var o=t(e.raw),s=u(o.length),n=arguments.length,r=[],d=0;s>d;)r.push(String(o[d++])),d<n&&r.push(String(arguments[d]));return r.join("")}})},"./node_modules/core-js/modules/es6.string.repeat.js":
/*!***********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.string.repeat.js ***!
  \***********************************************************/
/*! no static exports found */function(e,o,s){var n=s(/*! ./_export */"./node_modules/core-js/modules/_export.js");n(n.P,"String",{repeat:s(/*! ./_string-repeat */"./node_modules/core-js/modules/_string-repeat.js")})},"./node_modules/core-js/modules/es6.string.small.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.string.small.js ***!
  \**********************************************************/
/*! no static exports found */function(e,o,s){"use strict";s(/*! ./_string-html */"./node_modules/core-js/modules/_string-html.js")("small",function(e){return function(){return e(this,"small","","")}})},"./node_modules/core-js/modules/es6.string.starts-with.js":
/*!****************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.string.starts-with.js ***!
  \****************************************************************/
/*! no static exports found */function(e,o,s){"use strict";var n=s(/*! ./_export */"./node_modules/core-js/modules/_export.js"),t=s(/*! ./_to-length */"./node_modules/core-js/modules/_to-length.js"),u=s(/*! ./_string-context */"./node_modules/core-js/modules/_string-context.js"),r="".startsWith;n(n.P+n.F*s(/*! ./_fails-is-regexp */"./node_modules/core-js/modules/_fails-is-regexp.js")("startsWith"),"String",{startsWith:function(e){var o=u(this,e,"startsWith"),s=t(Math.min(arguments.length>1?arguments[1]:void 0,o.length)),n=String(e);return r?r.call(o,n,s):o.slice(s,s+n.length)===n}})},"./node_modules/core-js/modules/es6.string.strike.js":
/*!***********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.string.strike.js ***!
  \***********************************************************/
/*! no static exports found */function(e,o,s){"use strict";s(/*! ./_string-html */"./node_modules/core-js/modules/_string-html.js")("strike",function(e){return function(){return e(this,"strike","","")}})},"./node_modules/core-js/modules/es6.string.sub.js":
/*!********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.string.sub.js ***!
  \********************************************************/
/*! no static exports found */function(e,o,s){"use strict";s(/*! ./_string-html */"./node_modules/core-js/modules/_string-html.js")("sub",function(e){return function(){return e(this,"sub","","")}})},"./node_modules/core-js/modules/es6.string.sup.js":
/*!********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.string.sup.js ***!
  \********************************************************/
/*! no static exports found */function(e,o,s){"use strict";s(/*! ./_string-html */"./node_modules/core-js/modules/_string-html.js")("sup",function(e){return function(){return e(this,"sup","","")}})},"./node_modules/core-js/modules/es6.string.trim.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/modules/es6.string.trim.js ***!
  \*********************************************************/
/*! no static exports found */function(e,o,s){"use strict";s(/*! ./_string-trim */"./node_modules/core-js/modules/_string-trim.js")("trim",function(e){return function(){return e(this,3)}})},"./node_modules/core-js/modules/es6.symbol.js":
/*!****************************************************!*\
  !*** ./node_modules/core-js/modules/es6.symbol.js ***!
  \****************************************************/
/*! no static exports found */function(e,o,s){"use strict";var n=s(/*! ./_global */"./node_modules/core-js/modules/_global.js"),t=s(/*! ./_has */"./node_modules/core-js/modules/_has.js"),u=s(/*! ./_descriptors */"./node_modules/core-js/modules/_descriptors.js"),r=s(/*! ./_export */"./node_modules/core-js/modules/_export.js"),d=s(/*! ./_redefine */"./node_modules/core-js/modules/_redefine.js"),l=s(/*! ./_meta */"./node_modules/core-js/modules/_meta.js").KEY,c=s(/*! ./_fails */"./node_modules/core-js/modules/_fails.js"),i=s(/*! ./_shared */"./node_modules/core-js/modules/_shared.js"),m=s(/*! ./_set-to-string-tag */"./node_modules/core-js/modules/_set-to-string-tag.js"),j=s(/*! ./_uid */"./node_modules/core-js/modules/_uid.js"),_=s(/*! ./_wks */"./node_modules/core-js/modules/_wks.js"),f=s(/*! ./_wks-ext */"./node_modules/core-js/modules/_wks-ext.js"),a=s(/*! ./_wks-define */"./node_modules/core-js/modules/_wks-define.js"),h=s(/*! ./_enum-keys */"./node_modules/core-js/modules/_enum-keys.js"),p=s(/*! ./_is-array */"./node_modules/core-js/modules/_is-array.js"),v=s(/*! ./_an-object */"./node_modules/core-js/modules/_an-object.js"),g=s(/*! ./_is-object */"./node_modules/core-js/modules/_is-object.js"),b=s(/*! ./_to-iobject */"./node_modules/core-js/modules/_to-iobject.js"),w=s(/*! ./_to-primitive */"./node_modules/core-js/modules/_to-primitive.js"),x=s(/*! ./_property-desc */"./node_modules/core-js/modules/_property-desc.js"),y=s(/*! ./_object-create */"./node_modules/core-js/modules/_object-create.js"),S=s(/*! ./_object-gopn-ext */"./node_modules/core-js/modules/_object-gopn-ext.js"),M=s(/*! ./_object-gopd */"./node_modules/core-js/modules/_object-gopd.js"),F=s(/*! ./_object-dp */"./node_modules/core-js/modules/_object-dp.js"),k=s(/*! ./_object-keys */"./node_modules/core-js/modules/_object-keys.js"),N=M.f,W=F.f,z=S.f,X=n.Symbol,U=n.JSON,V=U&&U.stringify,H=_("_hidden"),J=_("toPrimitive"),Q={}.propertyIsEnumerable,Z=i("symbol-registry"),K=i("symbols"),G=i("op-symbols"),L=Object.prototype,I="function"==typeof X,O=n.QObject,P=!O||!O.prototype||!O.prototype.findChild,C=u&&c(function(){return 7!=y(W({},"a",{get:function(){return W(this,"a",{value:7}).a}})).a})?function(e,o,s){var n=N(L,o);n&&delete L[o],W(e,o,s),n&&e!==L&&W(L,o,n)}:W,D=function(e){var o=K[e]=y(X.prototype);return o._k=e,o},B=I&&"symbol"==typeof X.iterator?function(e){return"symbol"==typeof e}:function(e){return e instanceof X},q=function(e,o,s){return e===L&&q(G,o,s),v(e),o=w(o,!0),v(s),t(K,o)?(s.enumerable?(t(e,H)&&e[H][o]&&(e[H][o]=!1),s=y(s,{enumerable:x(0,!1)})):(t(e,H)||W(e,H,x(1,{})),e[H][o]=!0),C(e,o,s)):W(e,o,s)},E=function(e,o){v(e);for(var s,n=h(o=b(o)),t=0,u=n.length;u>t;)q(e,s=n[t++],o[s]);return e},Y=function(e){var o=Q.call(this,e=w(e,!0));return!(this===L&&t(K,e)&&!t(G,e))&&(!(o||!t(this,e)||!t(K,e)||t(this,H)&&this[H][e])||o)},R=function(e,o){if(e=b(e),o=w(o,!0),e!==L||!t(K,o)||t(G,o)){var s=N(e,o);return!s||!t(K,o)||t(e,H)&&e[H][o]||(s.enumerable=!0),s}},T=function(e){for(var o,s=z(b(e)),n=[],u=0;s.length>u;)t(K,o=s[u++])||o==H||o==l||n.push(o);return n},A=function(e){for(var o,s=e===L,n=z(s?G:b(e)),u=[],r=0;n.length>r;)!t(K,o=n[r++])||s&&!t(L,o)||u.push(K[o]);return u};I||(d((X=function(){if(this instanceof X)throw TypeError("Symbol is not a constructor!");var e=j(arguments.length>0?arguments[0]:void 0),o=function(s){this===L&&o.call(G,s),t(this,H)&&t(this[H],e)&&(this[H][e]=!1),C(this,e,x(1,s))};return u&&P&&C(L,e,{configurable:!0,set:o}),D(e)}).prototype,"toString",function(){return this._k}),M.f=R,F.f=q,s(/*! ./_object-gopn */"./node_modules/core-js/modules/_object-gopn.js").f=S.f=T,s(/*! ./_object-pie */"./node_modules/core-js/modules/_object-pie.js").f=Y,s(/*! ./_object-gops */"./node_modules/core-js/modules/_object-gops.js").f=A,u&&!s(/*! ./_library */"./node_modules/core-js/modules/_library.js")&&d(L,"propertyIsEnumerable",Y,!0),f.f=function(e){return D(_(e))}),r(r.G+r.W+r.F*!I,{Symbol:X});for(var $="hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables".split(","),ee=0;$.length>ee;)_($[ee++]);for(var oe=k(_.store),se=0;oe.length>se;)a(oe[se++]);r(r.S+r.F*!I,"Symbol",{for:function(e){return t(Z,e+="")?Z[e]:Z[e]=X(e)},keyFor:function(e){if(!B(e))throw TypeError(e+" is not a symbol!");for(var o in Z)if(Z[o]===e)return o},useSetter:function(){P=!0},useSimple:function(){P=!1}}),r(r.S+r.F*!I,"Object",{create:function(e,o){return void 0===o?y(e):E(y(e),o)},defineProperty:q,defineProperties:E,getOwnPropertyDescriptor:R,getOwnPropertyNames:T,getOwnPropertySymbols:A}),U&&r(r.S+r.F*(!I||c(function(){var e=X();return"[null]"!=V([e])||"{}"!=V({a:e})||"{}"!=V(Object(e))})),"JSON",{stringify:function(e){for(var o,s,n=[e],t=1;arguments.length>t;)n.push(arguments[t++]);if(s=o=n[1],(g(o)||void 0!==e)&&!B(e))return p(o)||(o=function(e,o){if("function"==typeof s&&(o=s.call(this,e,o)),!B(o))return o}),n[1]=o,V.apply(U,n)}}),X.prototype[J]||s(/*! ./_hide */"./node_modules/core-js/modules/_hide.js")(X.prototype,J,X.prototype.valueOf),m(X,"Symbol"),m(Math,"Math",!0),m(n.JSON,"JSON",!0)},"./node_modules/core-js/modules/es6.typed.array-buffer.js":
/*!****************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.typed.array-buffer.js ***!
  \****************************************************************/
/*! no static exports found */function(e,o,s){"use strict";var n=s(/*! ./_export */"./node_modules/core-js/modules/_export.js"),t=s(/*! ./_typed */"./node_modules/core-js/modules/_typed.js"),u=s(/*! ./_typed-buffer */"./node_modules/core-js/modules/_typed-buffer.js"),r=s(/*! ./_an-object */"./node_modules/core-js/modules/_an-object.js"),d=s(/*! ./_to-absolute-index */"./node_modules/core-js/modules/_to-absolute-index.js"),l=s(/*! ./_to-length */"./node_modules/core-js/modules/_to-length.js"),c=s(/*! ./_is-object */"./node_modules/core-js/modules/_is-object.js"),i=s(/*! ./_global */"./node_modules/core-js/modules/_global.js").ArrayBuffer,m=s(/*! ./_species-constructor */"./node_modules/core-js/modules/_species-constructor.js"),j=u.ArrayBuffer,_=u.DataView,f=t.ABV&&i.isView,a=j.prototype.slice,h=t.VIEW;n(n.G+n.W+n.F*(i!==j),{ArrayBuffer:j}),n(n.S+n.F*!t.CONSTR,"ArrayBuffer",{isView:function(e){return f&&f(e)||c(e)&&h in e}}),n(n.P+n.U+n.F*s(/*! ./_fails */"./node_modules/core-js/modules/_fails.js")(function(){return!new j(2).slice(1,void 0).byteLength}),"ArrayBuffer",{slice:function(e,o){if(void 0!==a&&void 0===o)return a.call(r(this),e);for(var s=r(this).byteLength,n=d(e,s),t=d(void 0===o?s:o,s),u=new(m(this,j))(l(t-n)),c=new _(this),i=new _(u),f=0;n<t;)i.setUint8(f++,c.getUint8(n++));return u}}),s(/*! ./_set-species */"./node_modules/core-js/modules/_set-species.js")("ArrayBuffer")},"./node_modules/core-js/modules/es6.typed.data-view.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.typed.data-view.js ***!
  \*************************************************************/
/*! no static exports found */function(e,o,s){var n=s(/*! ./_export */"./node_modules/core-js/modules/_export.js");n(n.G+n.W+n.F*!s(/*! ./_typed */"./node_modules/core-js/modules/_typed.js").ABV,{DataView:s(/*! ./_typed-buffer */"./node_modules/core-js/modules/_typed-buffer.js").DataView})},"./node_modules/core-js/modules/es6.typed.float32-array.js":
/*!*****************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.typed.float32-array.js ***!
  \*****************************************************************/
/*! no static exports found */function(e,o,s){s(/*! ./_typed-array */"./node_modules/core-js/modules/_typed-array.js")("Float32",4,function(e){return function(o,s,n){return e(this,o,s,n)}})},"./node_modules/core-js/modules/es6.typed.float64-array.js":
/*!*****************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.typed.float64-array.js ***!
  \*****************************************************************/
/*! no static exports found */function(e,o,s){s(/*! ./_typed-array */"./node_modules/core-js/modules/_typed-array.js")("Float64",8,function(e){return function(o,s,n){return e(this,o,s,n)}})},"./node_modules/core-js/modules/es6.typed.int16-array.js":
/*!***************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.typed.int16-array.js ***!
  \***************************************************************/
/*! no static exports found */function(e,o,s){s(/*! ./_typed-array */"./node_modules/core-js/modules/_typed-array.js")("Int16",2,function(e){return function(o,s,n){return e(this,o,s,n)}})},"./node_modules/core-js/modules/es6.typed.int32-array.js":
/*!***************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.typed.int32-array.js ***!
  \***************************************************************/
/*! no static exports found */function(e,o,s){s(/*! ./_typed-array */"./node_modules/core-js/modules/_typed-array.js")("Int32",4,function(e){return function(o,s,n){return e(this,o,s,n)}})},"./node_modules/core-js/modules/es6.typed.int8-array.js":
/*!**************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.typed.int8-array.js ***!
  \**************************************************************/
/*! no static exports found */function(e,o,s){s(/*! ./_typed-array */"./node_modules/core-js/modules/_typed-array.js")("Int8",1,function(e){return function(o,s,n){return e(this,o,s,n)}})},"./node_modules/core-js/modules/es6.typed.uint16-array.js":
/*!****************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.typed.uint16-array.js ***!
  \****************************************************************/
/*! no static exports found */function(e,o,s){s(/*! ./_typed-array */"./node_modules/core-js/modules/_typed-array.js")("Uint16",2,function(e){return function(o,s,n){return e(this,o,s,n)}})},"./node_modules/core-js/modules/es6.typed.uint32-array.js":
/*!****************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.typed.uint32-array.js ***!
  \****************************************************************/
/*! no static exports found */function(e,o,s){s(/*! ./_typed-array */"./node_modules/core-js/modules/_typed-array.js")("Uint32",4,function(e){return function(o,s,n){return e(this,o,s,n)}})},"./node_modules/core-js/modules/es6.typed.uint8-array.js":
/*!***************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.typed.uint8-array.js ***!
  \***************************************************************/
/*! no static exports found */function(e,o,s){s(/*! ./_typed-array */"./node_modules/core-js/modules/_typed-array.js")("Uint8",1,function(e){return function(o,s,n){return e(this,o,s,n)}})},"./node_modules/core-js/modules/es6.typed.uint8-clamped-array.js":
/*!***********************************************************************!*\
  !*** ./node_modules/core-js/modules/es6.typed.uint8-clamped-array.js ***!
  \***********************************************************************/
/*! no static exports found */function(e,o,s){s(/*! ./_typed-array */"./node_modules/core-js/modules/_typed-array.js")("Uint8",1,function(e){return function(o,s,n){return e(this,o,s,n)}},!0)},"./node_modules/core-js/modules/es6.weak-map.js":
/*!******************************************************!*\
  !*** ./node_modules/core-js/modules/es6.weak-map.js ***!
  \******************************************************/
/*! no static exports found */function(e,o,s){"use strict";var n,t=s(/*! ./_array-methods */"./node_modules/core-js/modules/_array-methods.js")(0),u=s(/*! ./_redefine */"./node_modules/core-js/modules/_redefine.js"),r=s(/*! ./_meta */"./node_modules/core-js/modules/_meta.js"),d=s(/*! ./_object-assign */"./node_modules/core-js/modules/_object-assign.js"),l=s(/*! ./_collection-weak */"./node_modules/core-js/modules/_collection-weak.js"),c=s(/*! ./_is-object */"./node_modules/core-js/modules/_is-object.js"),i=s(/*! ./_fails */"./node_modules/core-js/modules/_fails.js"),m=s(/*! ./_validate-collection */"./node_modules/core-js/modules/_validate-collection.js"),j=r.getWeak,_=Object.isExtensible,f=l.ufstore,a={},h=function(e){return function(){return e(this,arguments.length>0?arguments[0]:void 0)}},p={get:function(e){if(c(e)){var o=j(e);return!0===o?f(m(this,"WeakMap")).get(e):o?o[this._i]:void 0}},set:function(e,o){return l.def(m(this,"WeakMap"),e,o)}},v=e.exports=s(/*! ./_collection */"./node_modules/core-js/modules/_collection.js")("WeakMap",h,p,l,!0,!0);i(function(){return 7!=(new v).set((Object.freeze||Object)(a),7).get(a)})&&(d((n=l.getConstructor(h,"WeakMap")).prototype,p),r.NEED=!0,t(["delete","has","get","set"],function(e){var o=v.prototype,s=o[e];u(o,e,function(o,t){if(c(o)&&!_(o)){this._f||(this._f=new n);var u=this._f[e](o,t);return"set"==e?this:u}return s.call(this,o,t)})}))},"./node_modules/core-js/modules/es6.weak-set.js":
/*!******************************************************!*\
  !*** ./node_modules/core-js/modules/es6.weak-set.js ***!
  \******************************************************/
/*! no static exports found */function(e,o,s){"use strict";var n=s(/*! ./_collection-weak */"./node_modules/core-js/modules/_collection-weak.js"),t=s(/*! ./_validate-collection */"./node_modules/core-js/modules/_validate-collection.js");s(/*! ./_collection */"./node_modules/core-js/modules/_collection.js")("WeakSet",function(e){return function(){return e(this,arguments.length>0?arguments[0]:void 0)}},{add:function(e){return n.def(t(this,"WeakSet"),e,!0)}},n,!1,!0)},"./node_modules/core-js/modules/es7.array.includes.js":
/*!************************************************************!*\
  !*** ./node_modules/core-js/modules/es7.array.includes.js ***!
  \************************************************************/
/*! no static exports found */function(e,o,s){"use strict";var n=s(/*! ./_export */"./node_modules/core-js/modules/_export.js"),t=s(/*! ./_array-includes */"./node_modules/core-js/modules/_array-includes.js")(!0);n(n.P,"Array",{includes:function(e){return t(this,e,arguments.length>1?arguments[1]:void 0)}}),s(/*! ./_add-to-unscopables */"./node_modules/core-js/modules/_add-to-unscopables.js")("includes")},"./node_modules/core-js/modules/es7.object.entries.js":
/*!************************************************************!*\
  !*** ./node_modules/core-js/modules/es7.object.entries.js ***!
  \************************************************************/
/*! no static exports found */function(e,o,s){var n=s(/*! ./_export */"./node_modules/core-js/modules/_export.js"),t=s(/*! ./_object-to-array */"./node_modules/core-js/modules/_object-to-array.js")(!0);n(n.S,"Object",{entries:function(e){return t(e)}})},"./node_modules/core-js/modules/es7.object.get-own-property-descriptors.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/core-js/modules/es7.object.get-own-property-descriptors.js ***!
  \*********************************************************************************/
/*! no static exports found */function(e,o,s){var n=s(/*! ./_export */"./node_modules/core-js/modules/_export.js"),t=s(/*! ./_own-keys */"./node_modules/core-js/modules/_own-keys.js"),u=s(/*! ./_to-iobject */"./node_modules/core-js/modules/_to-iobject.js"),r=s(/*! ./_object-gopd */"./node_modules/core-js/modules/_object-gopd.js"),d=s(/*! ./_create-property */"./node_modules/core-js/modules/_create-property.js");n(n.S,"Object",{getOwnPropertyDescriptors:function(e){for(var o,s,n=u(e),l=r.f,c=t(n),i={},m=0;c.length>m;)void 0!==(s=l(n,o=c[m++]))&&d(i,o,s);return i}})},"./node_modules/core-js/modules/es7.object.values.js":
/*!***********************************************************!*\
  !*** ./node_modules/core-js/modules/es7.object.values.js ***!
  \***********************************************************/
/*! no static exports found */function(e,o,s){var n=s(/*! ./_export */"./node_modules/core-js/modules/_export.js"),t=s(/*! ./_object-to-array */"./node_modules/core-js/modules/_object-to-array.js")(!1);n(n.S,"Object",{values:function(e){return t(e)}})},"./node_modules/core-js/modules/es7.promise.finally.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/modules/es7.promise.finally.js ***!
  \*************************************************************/
/*! no static exports found */function(e,o,s){"use strict";var n=s(/*! ./_export */"./node_modules/core-js/modules/_export.js"),t=s(/*! ./_core */"./node_modules/core-js/modules/_core.js"),u=s(/*! ./_global */"./node_modules/core-js/modules/_global.js"),r=s(/*! ./_species-constructor */"./node_modules/core-js/modules/_species-constructor.js"),d=s(/*! ./_promise-resolve */"./node_modules/core-js/modules/_promise-resolve.js");n(n.P+n.R,"Promise",{finally:function(e){var o=r(this,t.Promise||u.Promise),s="function"==typeof e;return this.then(s?function(s){return d(o,e()).then(function(){return s})}:e,s?function(s){return d(o,e()).then(function(){throw s})}:e)}})},"./node_modules/core-js/modules/es7.string.pad-end.js":
/*!************************************************************!*\
  !*** ./node_modules/core-js/modules/es7.string.pad-end.js ***!
  \************************************************************/
/*! no static exports found */function(e,o,s){"use strict";var n=s(/*! ./_export */"./node_modules/core-js/modules/_export.js"),t=s(/*! ./_string-pad */"./node_modules/core-js/modules/_string-pad.js"),u=s(/*! ./_user-agent */"./node_modules/core-js/modules/_user-agent.js");n(n.P+n.F*/Version\/10\.\d+(\.\d+)? Safari\//.test(u),"String",{padEnd:function(e){return t(this,e,arguments.length>1?arguments[1]:void 0,!1)}})},"./node_modules/core-js/modules/es7.string.pad-start.js":
/*!**************************************************************!*\
  !*** ./node_modules/core-js/modules/es7.string.pad-start.js ***!
  \**************************************************************/
/*! no static exports found */function(e,o,s){"use strict";var n=s(/*! ./_export */"./node_modules/core-js/modules/_export.js"),t=s(/*! ./_string-pad */"./node_modules/core-js/modules/_string-pad.js"),u=s(/*! ./_user-agent */"./node_modules/core-js/modules/_user-agent.js");n(n.P+n.F*/Version\/10\.\d+(\.\d+)? Safari\//.test(u),"String",{padStart:function(e){return t(this,e,arguments.length>1?arguments[1]:void 0,!0)}})},"./node_modules/core-js/modules/es7.symbol.async-iterator.js":
/*!*******************************************************************!*\
  !*** ./node_modules/core-js/modules/es7.symbol.async-iterator.js ***!
  \*******************************************************************/
/*! no static exports found */function(e,o,s){s(/*! ./_wks-define */"./node_modules/core-js/modules/_wks-define.js")("asyncIterator")},"./node_modules/core-js/modules/web.dom.iterable.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/modules/web.dom.iterable.js ***!
  \**********************************************************/
/*! no static exports found */function(e,o,s){for(var n=s(/*! ./es6.array.iterator */"./node_modules/core-js/modules/es6.array.iterator.js"),t=s(/*! ./_object-keys */"./node_modules/core-js/modules/_object-keys.js"),u=s(/*! ./_redefine */"./node_modules/core-js/modules/_redefine.js"),r=s(/*! ./_global */"./node_modules/core-js/modules/_global.js"),d=s(/*! ./_hide */"./node_modules/core-js/modules/_hide.js"),l=s(/*! ./_iterators */"./node_modules/core-js/modules/_iterators.js"),c=s(/*! ./_wks */"./node_modules/core-js/modules/_wks.js"),i=c("iterator"),m=c("toStringTag"),j=l.Array,_={CSSRuleList:!0,CSSStyleDeclaration:!1,CSSValueList:!1,ClientRectList:!1,DOMRectList:!1,DOMStringList:!1,DOMTokenList:!0,DataTransferItemList:!1,FileList:!1,HTMLAllCollection:!1,HTMLCollection:!1,HTMLFormElement:!1,HTMLSelectElement:!1,MediaList:!0,MimeTypeArray:!1,NamedNodeMap:!1,NodeList:!0,PaintRequestList:!1,Plugin:!1,PluginArray:!1,SVGLengthList:!1,SVGNumberList:!1,SVGPathSegList:!1,SVGPointList:!1,SVGStringList:!1,SVGTransformList:!1,SourceBufferList:!1,StyleSheetList:!0,TextTrackCueList:!1,TextTrackList:!1,TouchList:!1},f=t(_),a=0;a<f.length;a++){var h,p=f[a],v=_[p],g=r[p],b=g&&g.prototype;if(b&&(b[i]||d(b,i,j),b[m]||d(b,m,p),l[p]=j,v))for(h in n)b[h]||u(b,h,n[h],!0)}},"./node_modules/core-js/modules/web.immediate.js":
/*!*******************************************************!*\
  !*** ./node_modules/core-js/modules/web.immediate.js ***!
  \*******************************************************/
/*! no static exports found */function(e,o,s){var n=s(/*! ./_export */"./node_modules/core-js/modules/_export.js"),t=s(/*! ./_task */"./node_modules/core-js/modules/_task.js");n(n.G+n.B,{setImmediate:t.set,clearImmediate:t.clear})},"./node_modules/core-js/modules/web.timers.js":
/*!****************************************************!*\
  !*** ./node_modules/core-js/modules/web.timers.js ***!
  \****************************************************/
/*! no static exports found */function(e,o,s){var n=s(/*! ./_global */"./node_modules/core-js/modules/_global.js"),t=s(/*! ./_export */"./node_modules/core-js/modules/_export.js"),u=s(/*! ./_user-agent */"./node_modules/core-js/modules/_user-agent.js"),r=[].slice,d=/MSIE .\./.test(u),l=function(e){return function(o,s){var n=arguments.length>2,t=!!n&&r.call(arguments,2);return e(n?function(){("function"==typeof o?o:Function(o)).apply(this,t)}:o,s)}};t(t.G+t.B+t.F*d,{setTimeout:l(n.setTimeout),setInterval:l(n.setInterval)})},"./node_modules/core-js/web/index.js":
/*!*******************************************!*\
  !*** ./node_modules/core-js/web/index.js ***!
  \*******************************************/
/*! no static exports found */function(e,o,s){s(/*! ../modules/web.timers */"./node_modules/core-js/modules/web.timers.js"),s(/*! ../modules/web.immediate */"./node_modules/core-js/modules/web.immediate.js"),s(/*! ../modules/web.dom.iterable */"./node_modules/core-js/modules/web.dom.iterable.js"),e.exports=s(/*! ../modules/_core */"./node_modules/core-js/modules/_core.js")},"./node_modules/regenerator-runtime/runtime.js":
/*!*****************************************************!*\
  !*** ./node_modules/regenerator-runtime/runtime.js ***!
  \*****************************************************/
/*! no static exports found */function(e,o){!function(o){"use strict";var s,n=Object.prototype,t=n.hasOwnProperty,u="function"==typeof Symbol?Symbol:{},r=u.iterator||"@@iterator",d=u.asyncIterator||"@@asyncIterator",l=u.toStringTag||"@@toStringTag",c="object"==typeof e,i=o.regeneratorRuntime;if(i)c&&(e.exports=i);else{(i=o.regeneratorRuntime=c?e.exports:{}).wrap=b;var m="suspendedStart",j="suspendedYield",_="executing",f="completed",a={},h={};h[r]=function(){return this};var p=Object.getPrototypeOf,v=p&&p(p(X([])));v&&v!==n&&t.call(v,r)&&(h=v);var g=S.prototype=x.prototype=Object.create(h);y.prototype=g.constructor=S,S.constructor=y,S[l]=y.displayName="GeneratorFunction",i.isGeneratorFunction=function(e){var o="function"==typeof e&&e.constructor;return!!o&&(o===y||"GeneratorFunction"===(o.displayName||o.name))},i.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,S):(e.__proto__=S,l in e||(e[l]="GeneratorFunction")),e.prototype=Object.create(g),e},i.awrap=function(e){return{__await:e}},M(F.prototype),F.prototype[d]=function(){return this},i.AsyncIterator=F,i.async=function(e,o,s,n){var t=new F(b(e,o,s,n));return i.isGeneratorFunction(o)?t:t.next().then(function(e){return e.done?e.value:t.next()})},M(g),g[l]="Generator",g[r]=function(){return this},g.toString=function(){return"[object Generator]"},i.keys=function(e){var o=[];for(var s in e)o.push(s);return o.reverse(),function s(){for(;o.length;){var n=o.pop();if(n in e)return s.value=n,s.done=!1,s}return s.done=!0,s}},i.values=X,z.prototype={constructor:z,reset:function(e){if(this.prev=0,this.next=0,this.sent=this._sent=s,this.done=!1,this.delegate=null,this.method="next",this.arg=s,this.tryEntries.forEach(W),!e)for(var o in this)"t"===o.charAt(0)&&t.call(this,o)&&!isNaN(+o.slice(1))&&(this[o]=s)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if("throw"===e.type)throw e.arg;return this.rval},dispatchException:function(e){if(this.done)throw e;var o=this;function n(n,t){return d.type="throw",d.arg=e,o.next=n,t&&(o.method="next",o.arg=s),!!t}for(var u=this.tryEntries.length-1;u>=0;--u){var r=this.tryEntries[u],d=r.completion;if("root"===r.tryLoc)return n("end");if(r.tryLoc<=this.prev){var l=t.call(r,"catchLoc"),c=t.call(r,"finallyLoc");if(l&&c){if(this.prev<r.catchLoc)return n(r.catchLoc,!0);if(this.prev<r.finallyLoc)return n(r.finallyLoc)}else if(l){if(this.prev<r.catchLoc)return n(r.catchLoc,!0)}else{if(!c)throw new Error("try statement without catch or finally");if(this.prev<r.finallyLoc)return n(r.finallyLoc)}}}},abrupt:function(e,o){for(var s=this.tryEntries.length-1;s>=0;--s){var n=this.tryEntries[s];if(n.tryLoc<=this.prev&&t.call(n,"finallyLoc")&&this.prev<n.finallyLoc){var u=n;break}}u&&("break"===e||"continue"===e)&&u.tryLoc<=o&&o<=u.finallyLoc&&(u=null);var r=u?u.completion:{};return r.type=e,r.arg=o,u?(this.method="next",this.next=u.finallyLoc,a):this.complete(r)},complete:function(e,o){if("throw"===e.type)throw e.arg;return"break"===e.type||"continue"===e.type?this.next=e.arg:"return"===e.type?(this.rval=this.arg=e.arg,this.method="return",this.next="end"):"normal"===e.type&&o&&(this.next=o),a},finish:function(e){for(var o=this.tryEntries.length-1;o>=0;--o){var s=this.tryEntries[o];if(s.finallyLoc===e)return this.complete(s.completion,s.afterLoc),W(s),a}},catch:function(e){for(var o=this.tryEntries.length-1;o>=0;--o){var s=this.tryEntries[o];if(s.tryLoc===e){var n=s.completion;if("throw"===n.type){var t=n.arg;W(s)}return t}}throw new Error("illegal catch attempt")},delegateYield:function(e,o,n){return this.delegate={iterator:X(e),resultName:o,nextLoc:n},"next"===this.method&&(this.arg=s),a}}}function b(e,o,s,n){var t=o&&o.prototype instanceof x?o:x,u=Object.create(t.prototype),r=new z(n||[]);return u._invoke=function(e,o,s){var n=m;return function(t,u){if(n===_)throw new Error("Generator is already running");if(n===f){if("throw"===t)throw u;return U()}for(s.method=t,s.arg=u;;){var r=s.delegate;if(r){var d=k(r,s);if(d){if(d===a)continue;return d}}if("next"===s.method)s.sent=s._sent=s.arg;else if("throw"===s.method){if(n===m)throw n=f,s.arg;s.dispatchException(s.arg)}else"return"===s.method&&s.abrupt("return",s.arg);n=_;var l=w(e,o,s);if("normal"===l.type){if(n=s.done?f:j,l.arg===a)continue;return{value:l.arg,done:s.done}}"throw"===l.type&&(n=f,s.method="throw",s.arg=l.arg)}}}(e,s,r),u}function w(e,o,s){try{return{type:"normal",arg:e.call(o,s)}}catch(e){return{type:"throw",arg:e}}}function x(){}function y(){}function S(){}function M(e){["next","throw","return"].forEach(function(o){e[o]=function(e){return this._invoke(o,e)}})}function F(e){var o;this._invoke=function(s,n){function u(){return new Promise(function(o,u){!function o(s,n,u,r){var d=w(e[s],e,n);if("throw"!==d.type){var l=d.arg,c=l.value;return c&&"object"==typeof c&&t.call(c,"__await")?Promise.resolve(c.__await).then(function(e){o("next",e,u,r)},function(e){o("throw",e,u,r)}):Promise.resolve(c).then(function(e){l.value=e,u(l)},function(e){return o("throw",e,u,r)})}r(d.arg)}(s,n,o,u)})}return o=o?o.then(u,u):u()}}function k(e,o){var n=e.iterator[o.method];if(n===s){if(o.delegate=null,"throw"===o.method){if(e.iterator.return&&(o.method="return",o.arg=s,k(e,o),"throw"===o.method))return a;o.method="throw",o.arg=new TypeError("The iterator does not provide a 'throw' method")}return a}var t=w(n,e.iterator,o.arg);if("throw"===t.type)return o.method="throw",o.arg=t.arg,o.delegate=null,a;var u=t.arg;return u?u.done?(o[e.resultName]=u.value,o.next=e.nextLoc,"return"!==o.method&&(o.method="next",o.arg=s),o.delegate=null,a):u:(o.method="throw",o.arg=new TypeError("iterator result is not an object"),o.delegate=null,a)}function N(e){var o={tryLoc:e[0]};1 in e&&(o.catchLoc=e[1]),2 in e&&(o.finallyLoc=e[2],o.afterLoc=e[3]),this.tryEntries.push(o)}function W(e){var o=e.completion||{};o.type="normal",delete o.arg,e.completion=o}function z(e){this.tryEntries=[{tryLoc:"root"}],e.forEach(N,this),this.reset(!0)}function X(e){if(e){var o=e[r];if(o)return o.call(e);if("function"==typeof e.next)return e;if(!isNaN(e.length)){var n=-1,u=function o(){for(;++n<e.length;)if(t.call(e,n))return o.value=e[n],o.done=!1,o;return o.value=s,o.done=!0,o};return u.next=u}}return{next:U}}function U(){return{value:s,done:!0}}}(function(){return this||"object"==typeof self&&self}()||Function("return this")())},"./node_modules/webpack/buildin/global.js":
/*!***********************************!*\
  !*** (webpack)/buildin/global.js ***!
  \***********************************/
/*! no static exports found */function(e,o){var s;s=function(){return this}();try{s=s||new Function("return this")()}catch(e){"object"==typeof window&&(s=window)}e.exports=s}})});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9DYW52YXNDb250cm9scy93ZWJwYWNrL3VuaXZlcnNhbE1vZHVsZURlZmluaXRpb24iLCJ3ZWJwYWNrOi8vQ2FudmFzQ29udHJvbHMvd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vQ2FudmFzQ29udHJvbHMvLi9kaXN0L2JhYmVsL0NhbnZhc0NvbnRyb2xzLmpzIiwid2VicGFjazovL0NhbnZhc0NvbnRyb2xzLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9wb2x5ZmlsbC9saWIvaW5kZXguanMiLCJ3ZWJwYWNrOi8vQ2FudmFzQ29udHJvbHMvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9lczYvaW5kZXguanMiLCJ3ZWJwYWNrOi8vQ2FudmFzQ29udHJvbHMvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9mbi9hcnJheS9pbmNsdWRlcy5qcyIsIndlYnBhY2s6Ly9DYW52YXNDb250cm9scy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ZuL29iamVjdC9lbnRyaWVzLmpzIiwid2VicGFjazovL0NhbnZhc0NvbnRyb2xzLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvZm4vb2JqZWN0L2dldC1vd24tcHJvcGVydHktZGVzY3JpcHRvcnMuanMiLCJ3ZWJwYWNrOi8vQ2FudmFzQ29udHJvbHMvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9mbi9vYmplY3QvdmFsdWVzLmpzIiwid2VicGFjazovL0NhbnZhc0NvbnRyb2xzLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvZm4vcHJvbWlzZS9maW5hbGx5LmpzIiwid2VicGFjazovL0NhbnZhc0NvbnRyb2xzLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvZm4vc3RyaW5nL3BhZC1lbmQuanMiLCJ3ZWJwYWNrOi8vQ2FudmFzQ29udHJvbHMvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9mbi9zdHJpbmcvcGFkLXN0YXJ0LmpzIiwid2VicGFjazovL0NhbnZhc0NvbnRyb2xzLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvZm4vc3ltYm9sL2FzeW5jLWl0ZXJhdG9yLmpzIiwid2VicGFjazovL0NhbnZhc0NvbnRyb2xzLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fYS1mdW5jdGlvbi5qcyIsIndlYnBhY2s6Ly9DYW52YXNDb250cm9scy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2EtbnVtYmVyLXZhbHVlLmpzIiwid2VicGFjazovL0NhbnZhc0NvbnRyb2xzLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fYWRkLXRvLXVuc2NvcGFibGVzLmpzIiwid2VicGFjazovL0NhbnZhc0NvbnRyb2xzLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fYWR2YW5jZS1zdHJpbmctaW5kZXguanMiLCJ3ZWJwYWNrOi8vQ2FudmFzQ29udHJvbHMvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19hbi1pbnN0YW5jZS5qcyIsIndlYnBhY2s6Ly9DYW52YXNDb250cm9scy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2FuLW9iamVjdC5qcyIsIndlYnBhY2s6Ly9DYW52YXNDb250cm9scy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2FycmF5LWNvcHktd2l0aGluLmpzIiwid2VicGFjazovL0NhbnZhc0NvbnRyb2xzLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fYXJyYXktZmlsbC5qcyIsIndlYnBhY2s6Ly9DYW52YXNDb250cm9scy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2FycmF5LWluY2x1ZGVzLmpzIiwid2VicGFjazovL0NhbnZhc0NvbnRyb2xzLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fYXJyYXktbWV0aG9kcy5qcyIsIndlYnBhY2s6Ly9DYW52YXNDb250cm9scy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2FycmF5LXJlZHVjZS5qcyIsIndlYnBhY2s6Ly9DYW52YXNDb250cm9scy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2FycmF5LXNwZWNpZXMtY29uc3RydWN0b3IuanMiLCJ3ZWJwYWNrOi8vQ2FudmFzQ29udHJvbHMvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19hcnJheS1zcGVjaWVzLWNyZWF0ZS5qcyIsIndlYnBhY2s6Ly9DYW52YXNDb250cm9scy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2JpbmQuanMiLCJ3ZWJwYWNrOi8vQ2FudmFzQ29udHJvbHMvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19jbGFzc29mLmpzIiwid2VicGFjazovL0NhbnZhc0NvbnRyb2xzLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fY29mLmpzIiwid2VicGFjazovL0NhbnZhc0NvbnRyb2xzLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fY29sbGVjdGlvbi1zdHJvbmcuanMiLCJ3ZWJwYWNrOi8vQ2FudmFzQ29udHJvbHMvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19jb2xsZWN0aW9uLXdlYWsuanMiLCJ3ZWJwYWNrOi8vQ2FudmFzQ29udHJvbHMvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19jb2xsZWN0aW9uLmpzIiwid2VicGFjazovL0NhbnZhc0NvbnRyb2xzLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fY29yZS5qcyIsIndlYnBhY2s6Ly9DYW52YXNDb250cm9scy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2NyZWF0ZS1wcm9wZXJ0eS5qcyIsIndlYnBhY2s6Ly9DYW52YXNDb250cm9scy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2N0eC5qcyIsIndlYnBhY2s6Ly9DYW52YXNDb250cm9scy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2RhdGUtdG8taXNvLXN0cmluZy5qcyIsIndlYnBhY2s6Ly9DYW52YXNDb250cm9scy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2RhdGUtdG8tcHJpbWl0aXZlLmpzIiwid2VicGFjazovL0NhbnZhc0NvbnRyb2xzLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fZGVmaW5lZC5qcyIsIndlYnBhY2s6Ly9DYW52YXNDb250cm9scy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2Rlc2NyaXB0b3JzLmpzIiwid2VicGFjazovL0NhbnZhc0NvbnRyb2xzLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fZG9tLWNyZWF0ZS5qcyIsIndlYnBhY2s6Ly9DYW52YXNDb250cm9scy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2VudW0tYnVnLWtleXMuanMiLCJ3ZWJwYWNrOi8vQ2FudmFzQ29udHJvbHMvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19lbnVtLWtleXMuanMiLCJ3ZWJwYWNrOi8vQ2FudmFzQ29udHJvbHMvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19leHBvcnQuanMiLCJ3ZWJwYWNrOi8vQ2FudmFzQ29udHJvbHMvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19mYWlscy1pcy1yZWdleHAuanMiLCJ3ZWJwYWNrOi8vQ2FudmFzQ29udHJvbHMvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19mYWlscy5qcyIsIndlYnBhY2s6Ly9DYW52YXNDb250cm9scy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2ZpeC1yZS13a3MuanMiLCJ3ZWJwYWNrOi8vQ2FudmFzQ29udHJvbHMvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19mbGFncy5qcyIsIndlYnBhY2s6Ly9DYW52YXNDb250cm9scy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2Zvci1vZi5qcyIsIndlYnBhY2s6Ly9DYW52YXNDb250cm9scy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2dsb2JhbC5qcyIsIndlYnBhY2s6Ly9DYW52YXNDb250cm9scy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2hhcy5qcyIsIndlYnBhY2s6Ly9DYW52YXNDb250cm9scy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2hpZGUuanMiLCJ3ZWJwYWNrOi8vQ2FudmFzQ29udHJvbHMvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19odG1sLmpzIiwid2VicGFjazovL0NhbnZhc0NvbnRyb2xzLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9faWU4LWRvbS1kZWZpbmUuanMiLCJ3ZWJwYWNrOi8vQ2FudmFzQ29udHJvbHMvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19pbmhlcml0LWlmLXJlcXVpcmVkLmpzIiwid2VicGFjazovL0NhbnZhc0NvbnRyb2xzLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9faW52b2tlLmpzIiwid2VicGFjazovL0NhbnZhc0NvbnRyb2xzLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9faW9iamVjdC5qcyIsIndlYnBhY2s6Ly9DYW52YXNDb250cm9scy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2lzLWFycmF5LWl0ZXIuanMiLCJ3ZWJwYWNrOi8vQ2FudmFzQ29udHJvbHMvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19pcy1hcnJheS5qcyIsIndlYnBhY2s6Ly9DYW52YXNDb250cm9scy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2lzLWludGVnZXIuanMiLCJ3ZWJwYWNrOi8vQ2FudmFzQ29udHJvbHMvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19pcy1vYmplY3QuanMiLCJ3ZWJwYWNrOi8vQ2FudmFzQ29udHJvbHMvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19pcy1yZWdleHAuanMiLCJ3ZWJwYWNrOi8vQ2FudmFzQ29udHJvbHMvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19pdGVyLWNhbGwuanMiLCJ3ZWJwYWNrOi8vQ2FudmFzQ29udHJvbHMvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19pdGVyLWNyZWF0ZS5qcyIsIndlYnBhY2s6Ly9DYW52YXNDb250cm9scy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2l0ZXItZGVmaW5lLmpzIiwid2VicGFjazovL0NhbnZhc0NvbnRyb2xzLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9faXRlci1kZXRlY3QuanMiLCJ3ZWJwYWNrOi8vQ2FudmFzQ29udHJvbHMvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19pdGVyLXN0ZXAuanMiLCJ3ZWJwYWNrOi8vQ2FudmFzQ29udHJvbHMvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19pdGVyYXRvcnMuanMiLCJ3ZWJwYWNrOi8vQ2FudmFzQ29udHJvbHMvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19saWJyYXJ5LmpzIiwid2VicGFjazovL0NhbnZhc0NvbnRyb2xzLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fbWF0aC1leHBtMS5qcyIsIndlYnBhY2s6Ly9DYW52YXNDb250cm9scy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX21hdGgtZnJvdW5kLmpzIiwid2VicGFjazovL0NhbnZhc0NvbnRyb2xzLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fbWF0aC1sb2cxcC5qcyIsIndlYnBhY2s6Ly9DYW52YXNDb250cm9scy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX21hdGgtc2lnbi5qcyIsIndlYnBhY2s6Ly9DYW52YXNDb250cm9scy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX21ldGEuanMiLCJ3ZWJwYWNrOi8vQ2FudmFzQ29udHJvbHMvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19taWNyb3Rhc2suanMiLCJ3ZWJwYWNrOi8vQ2FudmFzQ29udHJvbHMvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19uZXctcHJvbWlzZS1jYXBhYmlsaXR5LmpzIiwid2VicGFjazovL0NhbnZhc0NvbnRyb2xzLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fb2JqZWN0LWFzc2lnbi5qcyIsIndlYnBhY2s6Ly9DYW52YXNDb250cm9scy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX29iamVjdC1jcmVhdGUuanMiLCJ3ZWJwYWNrOi8vQ2FudmFzQ29udHJvbHMvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19vYmplY3QtZHAuanMiLCJ3ZWJwYWNrOi8vQ2FudmFzQ29udHJvbHMvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19vYmplY3QtZHBzLmpzIiwid2VicGFjazovL0NhbnZhc0NvbnRyb2xzLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fb2JqZWN0LWdvcGQuanMiLCJ3ZWJwYWNrOi8vQ2FudmFzQ29udHJvbHMvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19vYmplY3QtZ29wbi1leHQuanMiLCJ3ZWJwYWNrOi8vQ2FudmFzQ29udHJvbHMvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19vYmplY3QtZ29wbi5qcyIsIndlYnBhY2s6Ly9DYW52YXNDb250cm9scy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX29iamVjdC1nb3BzLmpzIiwid2VicGFjazovL0NhbnZhc0NvbnRyb2xzLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fb2JqZWN0LWdwby5qcyIsIndlYnBhY2s6Ly9DYW52YXNDb250cm9scy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX29iamVjdC1rZXlzLWludGVybmFsLmpzIiwid2VicGFjazovL0NhbnZhc0NvbnRyb2xzLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fb2JqZWN0LWtleXMuanMiLCJ3ZWJwYWNrOi8vQ2FudmFzQ29udHJvbHMvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19vYmplY3QtcGllLmpzIiwid2VicGFjazovL0NhbnZhc0NvbnRyb2xzLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fb2JqZWN0LXNhcC5qcyIsIndlYnBhY2s6Ly9DYW52YXNDb250cm9scy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX29iamVjdC10by1hcnJheS5qcyIsIndlYnBhY2s6Ly9DYW52YXNDb250cm9scy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX293bi1rZXlzLmpzIiwid2VicGFjazovL0NhbnZhc0NvbnRyb2xzLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fcGFyc2UtZmxvYXQuanMiLCJ3ZWJwYWNrOi8vQ2FudmFzQ29udHJvbHMvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19wYXJzZS1pbnQuanMiLCJ3ZWJwYWNrOi8vQ2FudmFzQ29udHJvbHMvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19wZXJmb3JtLmpzIiwid2VicGFjazovL0NhbnZhc0NvbnRyb2xzLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fcHJvbWlzZS1yZXNvbHZlLmpzIiwid2VicGFjazovL0NhbnZhc0NvbnRyb2xzLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fcHJvcGVydHktZGVzYy5qcyIsIndlYnBhY2s6Ly9DYW52YXNDb250cm9scy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX3JlZGVmaW5lLWFsbC5qcyIsIndlYnBhY2s6Ly9DYW52YXNDb250cm9scy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX3JlZGVmaW5lLmpzIiwid2VicGFjazovL0NhbnZhc0NvbnRyb2xzLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fcmVnZXhwLWV4ZWMtYWJzdHJhY3QuanMiLCJ3ZWJwYWNrOi8vQ2FudmFzQ29udHJvbHMvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19yZWdleHAtZXhlYy5qcyIsIndlYnBhY2s6Ly9DYW52YXNDb250cm9scy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX3NhbWUtdmFsdWUuanMiLCJ3ZWJwYWNrOi8vQ2FudmFzQ29udHJvbHMvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19zZXQtcHJvdG8uanMiLCJ3ZWJwYWNrOi8vQ2FudmFzQ29udHJvbHMvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19zZXQtc3BlY2llcy5qcyIsIndlYnBhY2s6Ly9DYW52YXNDb250cm9scy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX3NldC10by1zdHJpbmctdGFnLmpzIiwid2VicGFjazovL0NhbnZhc0NvbnRyb2xzLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fc2hhcmVkLWtleS5qcyIsIndlYnBhY2s6Ly9DYW52YXNDb250cm9scy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX3NoYXJlZC5qcyIsIndlYnBhY2s6Ly9DYW52YXNDb250cm9scy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX3NwZWNpZXMtY29uc3RydWN0b3IuanMiLCJ3ZWJwYWNrOi8vQ2FudmFzQ29udHJvbHMvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19zdHJpY3QtbWV0aG9kLmpzIiwid2VicGFjazovL0NhbnZhc0NvbnRyb2xzLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fc3RyaW5nLWF0LmpzIiwid2VicGFjazovL0NhbnZhc0NvbnRyb2xzLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fc3RyaW5nLWNvbnRleHQuanMiLCJ3ZWJwYWNrOi8vQ2FudmFzQ29udHJvbHMvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19zdHJpbmctaHRtbC5qcyIsIndlYnBhY2s6Ly9DYW52YXNDb250cm9scy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX3N0cmluZy1wYWQuanMiLCJ3ZWJwYWNrOi8vQ2FudmFzQ29udHJvbHMvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19zdHJpbmctcmVwZWF0LmpzIiwid2VicGFjazovL0NhbnZhc0NvbnRyb2xzLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fc3RyaW5nLXRyaW0uanMiLCJ3ZWJwYWNrOi8vQ2FudmFzQ29udHJvbHMvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19zdHJpbmctd3MuanMiLCJ3ZWJwYWNrOi8vQ2FudmFzQ29udHJvbHMvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL190YXNrLmpzIiwid2VicGFjazovL0NhbnZhc0NvbnRyb2xzLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fdG8tYWJzb2x1dGUtaW5kZXguanMiLCJ3ZWJwYWNrOi8vQ2FudmFzQ29udHJvbHMvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL190by1pbmRleC5qcyIsIndlYnBhY2s6Ly9DYW52YXNDb250cm9scy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX3RvLWludGVnZXIuanMiLCJ3ZWJwYWNrOi8vQ2FudmFzQ29udHJvbHMvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL190by1pb2JqZWN0LmpzIiwid2VicGFjazovL0NhbnZhc0NvbnRyb2xzLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fdG8tbGVuZ3RoLmpzIiwid2VicGFjazovL0NhbnZhc0NvbnRyb2xzLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fdG8tb2JqZWN0LmpzIiwid2VicGFjazovL0NhbnZhc0NvbnRyb2xzLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fdG8tcHJpbWl0aXZlLmpzIiwid2VicGFjazovL0NhbnZhc0NvbnRyb2xzLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fdHlwZWQtYXJyYXkuanMiLCJ3ZWJwYWNrOi8vQ2FudmFzQ29udHJvbHMvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL190eXBlZC1idWZmZXIuanMiLCJ3ZWJwYWNrOi8vQ2FudmFzQ29udHJvbHMvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL190eXBlZC5qcyIsIndlYnBhY2s6Ly9DYW52YXNDb250cm9scy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX3VpZC5qcyIsIndlYnBhY2s6Ly9DYW52YXNDb250cm9scy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX3VzZXItYWdlbnQuanMiLCJ3ZWJwYWNrOi8vQ2FudmFzQ29udHJvbHMvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL192YWxpZGF0ZS1jb2xsZWN0aW9uLmpzIiwid2VicGFjazovL0NhbnZhc0NvbnRyb2xzLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fd2tzLWRlZmluZS5qcyIsIndlYnBhY2s6Ly9DYW52YXNDb250cm9scy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX3drcy1leHQuanMiLCJ3ZWJwYWNrOi8vQ2FudmFzQ29udHJvbHMvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL193a3MuanMiLCJ3ZWJwYWNrOi8vQ2FudmFzQ29udHJvbHMvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2NvcmUuZ2V0LWl0ZXJhdG9yLW1ldGhvZC5qcyIsIndlYnBhY2s6Ly9DYW52YXNDb250cm9scy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LmFycmF5LmNvcHktd2l0aGluLmpzIiwid2VicGFjazovL0NhbnZhc0NvbnRyb2xzLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuYXJyYXkuZXZlcnkuanMiLCJ3ZWJwYWNrOi8vQ2FudmFzQ29udHJvbHMvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5hcnJheS5maWxsLmpzIiwid2VicGFjazovL0NhbnZhc0NvbnRyb2xzLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuYXJyYXkuZmlsdGVyLmpzIiwid2VicGFjazovL0NhbnZhc0NvbnRyb2xzLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuYXJyYXkuZmluZC1pbmRleC5qcyIsIndlYnBhY2s6Ly9DYW52YXNDb250cm9scy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LmFycmF5LmZpbmQuanMiLCJ3ZWJwYWNrOi8vQ2FudmFzQ29udHJvbHMvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5hcnJheS5mb3ItZWFjaC5qcyIsIndlYnBhY2s6Ly9DYW52YXNDb250cm9scy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LmFycmF5LmZyb20uanMiLCJ3ZWJwYWNrOi8vQ2FudmFzQ29udHJvbHMvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5hcnJheS5pbmRleC1vZi5qcyIsIndlYnBhY2s6Ly9DYW52YXNDb250cm9scy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LmFycmF5LmlzLWFycmF5LmpzIiwid2VicGFjazovL0NhbnZhc0NvbnRyb2xzLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuYXJyYXkuaXRlcmF0b3IuanMiLCJ3ZWJwYWNrOi8vQ2FudmFzQ29udHJvbHMvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5hcnJheS5qb2luLmpzIiwid2VicGFjazovL0NhbnZhc0NvbnRyb2xzLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuYXJyYXkubGFzdC1pbmRleC1vZi5qcyIsIndlYnBhY2s6Ly9DYW52YXNDb250cm9scy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LmFycmF5Lm1hcC5qcyIsIndlYnBhY2s6Ly9DYW52YXNDb250cm9scy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LmFycmF5Lm9mLmpzIiwid2VicGFjazovL0NhbnZhc0NvbnRyb2xzLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuYXJyYXkucmVkdWNlLXJpZ2h0LmpzIiwid2VicGFjazovL0NhbnZhc0NvbnRyb2xzLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuYXJyYXkucmVkdWNlLmpzIiwid2VicGFjazovL0NhbnZhc0NvbnRyb2xzLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuYXJyYXkuc2xpY2UuanMiLCJ3ZWJwYWNrOi8vQ2FudmFzQ29udHJvbHMvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5hcnJheS5zb21lLmpzIiwid2VicGFjazovL0NhbnZhc0NvbnRyb2xzLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuYXJyYXkuc29ydC5qcyIsIndlYnBhY2s6Ly9DYW52YXNDb250cm9scy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LmFycmF5LnNwZWNpZXMuanMiLCJ3ZWJwYWNrOi8vQ2FudmFzQ29udHJvbHMvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5kYXRlLm5vdy5qcyIsIndlYnBhY2s6Ly9DYW52YXNDb250cm9scy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LmRhdGUudG8taXNvLXN0cmluZy5qcyIsIndlYnBhY2s6Ly9DYW52YXNDb250cm9scy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LmRhdGUudG8tanNvbi5qcyIsIndlYnBhY2s6Ly9DYW52YXNDb250cm9scy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LmRhdGUudG8tcHJpbWl0aXZlLmpzIiwid2VicGFjazovL0NhbnZhc0NvbnRyb2xzLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuZGF0ZS50by1zdHJpbmcuanMiLCJ3ZWJwYWNrOi8vQ2FudmFzQ29udHJvbHMvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5mdW5jdGlvbi5iaW5kLmpzIiwid2VicGFjazovL0NhbnZhc0NvbnRyb2xzLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuZnVuY3Rpb24uaGFzLWluc3RhbmNlLmpzIiwid2VicGFjazovL0NhbnZhc0NvbnRyb2xzLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuZnVuY3Rpb24ubmFtZS5qcyIsIndlYnBhY2s6Ly9DYW52YXNDb250cm9scy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2Lm1hcC5qcyIsIndlYnBhY2s6Ly9DYW52YXNDb250cm9scy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2Lm1hdGguYWNvc2guanMiLCJ3ZWJwYWNrOi8vQ2FudmFzQ29udHJvbHMvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5tYXRoLmFzaW5oLmpzIiwid2VicGFjazovL0NhbnZhc0NvbnRyb2xzLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYubWF0aC5hdGFuaC5qcyIsIndlYnBhY2s6Ly9DYW52YXNDb250cm9scy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2Lm1hdGguY2JydC5qcyIsIndlYnBhY2s6Ly9DYW52YXNDb250cm9scy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2Lm1hdGguY2x6MzIuanMiLCJ3ZWJwYWNrOi8vQ2FudmFzQ29udHJvbHMvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5tYXRoLmNvc2guanMiLCJ3ZWJwYWNrOi8vQ2FudmFzQ29udHJvbHMvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5tYXRoLmV4cG0xLmpzIiwid2VicGFjazovL0NhbnZhc0NvbnRyb2xzLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYubWF0aC5mcm91bmQuanMiLCJ3ZWJwYWNrOi8vQ2FudmFzQ29udHJvbHMvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5tYXRoLmh5cG90LmpzIiwid2VicGFjazovL0NhbnZhc0NvbnRyb2xzLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYubWF0aC5pbXVsLmpzIiwid2VicGFjazovL0NhbnZhc0NvbnRyb2xzLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYubWF0aC5sb2cxMC5qcyIsIndlYnBhY2s6Ly9DYW52YXNDb250cm9scy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2Lm1hdGgubG9nMXAuanMiLCJ3ZWJwYWNrOi8vQ2FudmFzQ29udHJvbHMvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5tYXRoLmxvZzIuanMiLCJ3ZWJwYWNrOi8vQ2FudmFzQ29udHJvbHMvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5tYXRoLnNpZ24uanMiLCJ3ZWJwYWNrOi8vQ2FudmFzQ29udHJvbHMvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5tYXRoLnNpbmguanMiLCJ3ZWJwYWNrOi8vQ2FudmFzQ29udHJvbHMvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5tYXRoLnRhbmguanMiLCJ3ZWJwYWNrOi8vQ2FudmFzQ29udHJvbHMvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5tYXRoLnRydW5jLmpzIiwid2VicGFjazovL0NhbnZhc0NvbnRyb2xzLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYubnVtYmVyLmNvbnN0cnVjdG9yLmpzIiwid2VicGFjazovL0NhbnZhc0NvbnRyb2xzLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYubnVtYmVyLmVwc2lsb24uanMiLCJ3ZWJwYWNrOi8vQ2FudmFzQ29udHJvbHMvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5udW1iZXIuaXMtZmluaXRlLmpzIiwid2VicGFjazovL0NhbnZhc0NvbnRyb2xzLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYubnVtYmVyLmlzLWludGVnZXIuanMiLCJ3ZWJwYWNrOi8vQ2FudmFzQ29udHJvbHMvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5udW1iZXIuaXMtbmFuLmpzIiwid2VicGFjazovL0NhbnZhc0NvbnRyb2xzLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYubnVtYmVyLmlzLXNhZmUtaW50ZWdlci5qcyIsIndlYnBhY2s6Ly9DYW52YXNDb250cm9scy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2Lm51bWJlci5tYXgtc2FmZS1pbnRlZ2VyLmpzIiwid2VicGFjazovL0NhbnZhc0NvbnRyb2xzLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYubnVtYmVyLm1pbi1zYWZlLWludGVnZXIuanMiLCJ3ZWJwYWNrOi8vQ2FudmFzQ29udHJvbHMvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5udW1iZXIucGFyc2UtZmxvYXQuanMiLCJ3ZWJwYWNrOi8vQ2FudmFzQ29udHJvbHMvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5udW1iZXIucGFyc2UtaW50LmpzIiwid2VicGFjazovL0NhbnZhc0NvbnRyb2xzLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYubnVtYmVyLnRvLWZpeGVkLmpzIiwid2VicGFjazovL0NhbnZhc0NvbnRyb2xzLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYubnVtYmVyLnRvLXByZWNpc2lvbi5qcyIsIndlYnBhY2s6Ly9DYW52YXNDb250cm9scy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2Lm9iamVjdC5hc3NpZ24uanMiLCJ3ZWJwYWNrOi8vQ2FudmFzQ29udHJvbHMvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5vYmplY3QuY3JlYXRlLmpzIiwid2VicGFjazovL0NhbnZhc0NvbnRyb2xzLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYub2JqZWN0LmRlZmluZS1wcm9wZXJ0aWVzLmpzIiwid2VicGFjazovL0NhbnZhc0NvbnRyb2xzLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYub2JqZWN0LmRlZmluZS1wcm9wZXJ0eS5qcyIsIndlYnBhY2s6Ly9DYW52YXNDb250cm9scy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2Lm9iamVjdC5mcmVlemUuanMiLCJ3ZWJwYWNrOi8vQ2FudmFzQ29udHJvbHMvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5vYmplY3QuZ2V0LW93bi1wcm9wZXJ0eS1kZXNjcmlwdG9yLmpzIiwid2VicGFjazovL0NhbnZhc0NvbnRyb2xzLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYub2JqZWN0LmdldC1vd24tcHJvcGVydHktbmFtZXMuanMiLCJ3ZWJwYWNrOi8vQ2FudmFzQ29udHJvbHMvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5vYmplY3QuZ2V0LXByb3RvdHlwZS1vZi5qcyIsIndlYnBhY2s6Ly9DYW52YXNDb250cm9scy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2Lm9iamVjdC5pcy1leHRlbnNpYmxlLmpzIiwid2VicGFjazovL0NhbnZhc0NvbnRyb2xzLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYub2JqZWN0LmlzLWZyb3plbi5qcyIsIndlYnBhY2s6Ly9DYW52YXNDb250cm9scy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2Lm9iamVjdC5pcy1zZWFsZWQuanMiLCJ3ZWJwYWNrOi8vQ2FudmFzQ29udHJvbHMvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5vYmplY3QuaXMuanMiLCJ3ZWJwYWNrOi8vQ2FudmFzQ29udHJvbHMvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5vYmplY3Qua2V5cy5qcyIsIndlYnBhY2s6Ly9DYW52YXNDb250cm9scy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2Lm9iamVjdC5wcmV2ZW50LWV4dGVuc2lvbnMuanMiLCJ3ZWJwYWNrOi8vQ2FudmFzQ29udHJvbHMvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5vYmplY3Quc2VhbC5qcyIsIndlYnBhY2s6Ly9DYW52YXNDb250cm9scy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2Lm9iamVjdC5zZXQtcHJvdG90eXBlLW9mLmpzIiwid2VicGFjazovL0NhbnZhc0NvbnRyb2xzLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYub2JqZWN0LnRvLXN0cmluZy5qcyIsIndlYnBhY2s6Ly9DYW52YXNDb250cm9scy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LnBhcnNlLWZsb2F0LmpzIiwid2VicGFjazovL0NhbnZhc0NvbnRyb2xzLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYucGFyc2UtaW50LmpzIiwid2VicGFjazovL0NhbnZhc0NvbnRyb2xzLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYucHJvbWlzZS5qcyIsIndlYnBhY2s6Ly9DYW52YXNDb250cm9scy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LnJlZmxlY3QuYXBwbHkuanMiLCJ3ZWJwYWNrOi8vQ2FudmFzQ29udHJvbHMvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5yZWZsZWN0LmNvbnN0cnVjdC5qcyIsIndlYnBhY2s6Ly9DYW52YXNDb250cm9scy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LnJlZmxlY3QuZGVmaW5lLXByb3BlcnR5LmpzIiwid2VicGFjazovL0NhbnZhc0NvbnRyb2xzLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYucmVmbGVjdC5kZWxldGUtcHJvcGVydHkuanMiLCJ3ZWJwYWNrOi8vQ2FudmFzQ29udHJvbHMvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5yZWZsZWN0LmVudW1lcmF0ZS5qcyIsIndlYnBhY2s6Ly9DYW52YXNDb250cm9scy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LnJlZmxlY3QuZ2V0LW93bi1wcm9wZXJ0eS1kZXNjcmlwdG9yLmpzIiwid2VicGFjazovL0NhbnZhc0NvbnRyb2xzLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYucmVmbGVjdC5nZXQtcHJvdG90eXBlLW9mLmpzIiwid2VicGFjazovL0NhbnZhc0NvbnRyb2xzLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYucmVmbGVjdC5nZXQuanMiLCJ3ZWJwYWNrOi8vQ2FudmFzQ29udHJvbHMvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5yZWZsZWN0Lmhhcy5qcyIsIndlYnBhY2s6Ly9DYW52YXNDb250cm9scy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LnJlZmxlY3QuaXMtZXh0ZW5zaWJsZS5qcyIsIndlYnBhY2s6Ly9DYW52YXNDb250cm9scy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LnJlZmxlY3Qub3duLWtleXMuanMiLCJ3ZWJwYWNrOi8vQ2FudmFzQ29udHJvbHMvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5yZWZsZWN0LnByZXZlbnQtZXh0ZW5zaW9ucy5qcyIsIndlYnBhY2s6Ly9DYW52YXNDb250cm9scy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LnJlZmxlY3Quc2V0LXByb3RvdHlwZS1vZi5qcyIsIndlYnBhY2s6Ly9DYW52YXNDb250cm9scy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LnJlZmxlY3Quc2V0LmpzIiwid2VicGFjazovL0NhbnZhc0NvbnRyb2xzLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYucmVnZXhwLmNvbnN0cnVjdG9yLmpzIiwid2VicGFjazovL0NhbnZhc0NvbnRyb2xzLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYucmVnZXhwLmV4ZWMuanMiLCJ3ZWJwYWNrOi8vQ2FudmFzQ29udHJvbHMvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5yZWdleHAuZmxhZ3MuanMiLCJ3ZWJwYWNrOi8vQ2FudmFzQ29udHJvbHMvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5yZWdleHAubWF0Y2guanMiLCJ3ZWJwYWNrOi8vQ2FudmFzQ29udHJvbHMvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5yZWdleHAucmVwbGFjZS5qcyIsIndlYnBhY2s6Ly9DYW52YXNDb250cm9scy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LnJlZ2V4cC5zZWFyY2guanMiLCJ3ZWJwYWNrOi8vQ2FudmFzQ29udHJvbHMvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5yZWdleHAuc3BsaXQuanMiLCJ3ZWJwYWNrOi8vQ2FudmFzQ29udHJvbHMvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5yZWdleHAudG8tc3RyaW5nLmpzIiwid2VicGFjazovL0NhbnZhc0NvbnRyb2xzLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuc2V0LmpzIiwid2VicGFjazovL0NhbnZhc0NvbnRyb2xzLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuc3RyaW5nLmFuY2hvci5qcyIsIndlYnBhY2s6Ly9DYW52YXNDb250cm9scy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LnN0cmluZy5iaWcuanMiLCJ3ZWJwYWNrOi8vQ2FudmFzQ29udHJvbHMvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5zdHJpbmcuYmxpbmsuanMiLCJ3ZWJwYWNrOi8vQ2FudmFzQ29udHJvbHMvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5zdHJpbmcuYm9sZC5qcyIsIndlYnBhY2s6Ly9DYW52YXNDb250cm9scy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LnN0cmluZy5jb2RlLXBvaW50LWF0LmpzIiwid2VicGFjazovL0NhbnZhc0NvbnRyb2xzLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuc3RyaW5nLmVuZHMtd2l0aC5qcyIsIndlYnBhY2s6Ly9DYW52YXNDb250cm9scy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LnN0cmluZy5maXhlZC5qcyIsIndlYnBhY2s6Ly9DYW52YXNDb250cm9scy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LnN0cmluZy5mb250Y29sb3IuanMiLCJ3ZWJwYWNrOi8vQ2FudmFzQ29udHJvbHMvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5zdHJpbmcuZm9udHNpemUuanMiLCJ3ZWJwYWNrOi8vQ2FudmFzQ29udHJvbHMvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5zdHJpbmcuZnJvbS1jb2RlLXBvaW50LmpzIiwid2VicGFjazovL0NhbnZhc0NvbnRyb2xzLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuc3RyaW5nLmluY2x1ZGVzLmpzIiwid2VicGFjazovL0NhbnZhc0NvbnRyb2xzLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuc3RyaW5nLml0YWxpY3MuanMiLCJ3ZWJwYWNrOi8vQ2FudmFzQ29udHJvbHMvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5zdHJpbmcuaXRlcmF0b3IuanMiLCJ3ZWJwYWNrOi8vQ2FudmFzQ29udHJvbHMvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5zdHJpbmcubGluay5qcyIsIndlYnBhY2s6Ly9DYW52YXNDb250cm9scy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LnN0cmluZy5yYXcuanMiLCJ3ZWJwYWNrOi8vQ2FudmFzQ29udHJvbHMvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5zdHJpbmcucmVwZWF0LmpzIiwid2VicGFjazovL0NhbnZhc0NvbnRyb2xzLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuc3RyaW5nLnNtYWxsLmpzIiwid2VicGFjazovL0NhbnZhc0NvbnRyb2xzLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuc3RyaW5nLnN0YXJ0cy13aXRoLmpzIiwid2VicGFjazovL0NhbnZhc0NvbnRyb2xzLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuc3RyaW5nLnN0cmlrZS5qcyIsIndlYnBhY2s6Ly9DYW52YXNDb250cm9scy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LnN0cmluZy5zdWIuanMiLCJ3ZWJwYWNrOi8vQ2FudmFzQ29udHJvbHMvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5zdHJpbmcuc3VwLmpzIiwid2VicGFjazovL0NhbnZhc0NvbnRyb2xzLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuc3RyaW5nLnRyaW0uanMiLCJ3ZWJwYWNrOi8vQ2FudmFzQ29udHJvbHMvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5zeW1ib2wuanMiLCJ3ZWJwYWNrOi8vQ2FudmFzQ29udHJvbHMvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi50eXBlZC5hcnJheS1idWZmZXIuanMiLCJ3ZWJwYWNrOi8vQ2FudmFzQ29udHJvbHMvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi50eXBlZC5kYXRhLXZpZXcuanMiLCJ3ZWJwYWNrOi8vQ2FudmFzQ29udHJvbHMvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi50eXBlZC5mbG9hdDMyLWFycmF5LmpzIiwid2VicGFjazovL0NhbnZhc0NvbnRyb2xzLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYudHlwZWQuZmxvYXQ2NC1hcnJheS5qcyIsIndlYnBhY2s6Ly9DYW52YXNDb250cm9scy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LnR5cGVkLmludDE2LWFycmF5LmpzIiwid2VicGFjazovL0NhbnZhc0NvbnRyb2xzLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYudHlwZWQuaW50MzItYXJyYXkuanMiLCJ3ZWJwYWNrOi8vQ2FudmFzQ29udHJvbHMvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi50eXBlZC5pbnQ4LWFycmF5LmpzIiwid2VicGFjazovL0NhbnZhc0NvbnRyb2xzLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYudHlwZWQudWludDE2LWFycmF5LmpzIiwid2VicGFjazovL0NhbnZhc0NvbnRyb2xzLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYudHlwZWQudWludDMyLWFycmF5LmpzIiwid2VicGFjazovL0NhbnZhc0NvbnRyb2xzLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYudHlwZWQudWludDgtYXJyYXkuanMiLCJ3ZWJwYWNrOi8vQ2FudmFzQ29udHJvbHMvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi50eXBlZC51aW50OC1jbGFtcGVkLWFycmF5LmpzIiwid2VicGFjazovL0NhbnZhc0NvbnRyb2xzLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYud2Vhay1tYXAuanMiLCJ3ZWJwYWNrOi8vQ2FudmFzQ29udHJvbHMvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi53ZWFrLXNldC5qcyIsIndlYnBhY2s6Ly9DYW52YXNDb250cm9scy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM3LmFycmF5LmluY2x1ZGVzLmpzIiwid2VicGFjazovL0NhbnZhc0NvbnRyb2xzLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczcub2JqZWN0LmVudHJpZXMuanMiLCJ3ZWJwYWNrOi8vQ2FudmFzQ29udHJvbHMvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNy5vYmplY3QuZ2V0LW93bi1wcm9wZXJ0eS1kZXNjcmlwdG9ycy5qcyIsIndlYnBhY2s6Ly9DYW52YXNDb250cm9scy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM3Lm9iamVjdC52YWx1ZXMuanMiLCJ3ZWJwYWNrOi8vQ2FudmFzQ29udHJvbHMvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNy5wcm9taXNlLmZpbmFsbHkuanMiLCJ3ZWJwYWNrOi8vQ2FudmFzQ29udHJvbHMvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNy5zdHJpbmcucGFkLWVuZC5qcyIsIndlYnBhY2s6Ly9DYW52YXNDb250cm9scy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM3LnN0cmluZy5wYWQtc3RhcnQuanMiLCJ3ZWJwYWNrOi8vQ2FudmFzQ29udHJvbHMvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNy5zeW1ib2wuYXN5bmMtaXRlcmF0b3IuanMiLCJ3ZWJwYWNrOi8vQ2FudmFzQ29udHJvbHMvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL3dlYi5kb20uaXRlcmFibGUuanMiLCJ3ZWJwYWNrOi8vQ2FudmFzQ29udHJvbHMvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL3dlYi5pbW1lZGlhdGUuanMiLCJ3ZWJwYWNrOi8vQ2FudmFzQ29udHJvbHMvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL3dlYi50aW1lcnMuanMiLCJ3ZWJwYWNrOi8vQ2FudmFzQ29udHJvbHMvLi9ub2RlX21vZHVsZXMvY29yZS1qcy93ZWIvaW5kZXguanMiLCJ3ZWJwYWNrOi8vQ2FudmFzQ29udHJvbHMvLi9ub2RlX21vZHVsZXMvcmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIiwid2VicGFjazovL0NhbnZhc0NvbnRyb2xzLyh3ZWJwYWNrKS9idWlsZGluL2dsb2JhbC5qcyJdLCJuYW1lcyI6WyJyb290IiwiZmFjdG9yeSIsImV4cG9ydHMiLCJtb2R1bGUiLCJkZWZpbmUiLCJhbWQiLCJ3aW5kb3ciLCJpbnN0YWxsZWRNb2R1bGVzIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsIm1vZHVsZUlkIiwiaSIsImwiLCJtb2R1bGVzIiwiY2FsbCIsIm0iLCJjIiwiZCIsIm5hbWUiLCJnZXR0ZXIiLCJvIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJlbnVtZXJhYmxlIiwiZ2V0IiwiciIsIlN5bWJvbCIsInRvU3RyaW5nVGFnIiwidmFsdWUiLCJ0IiwibW9kZSIsIl9fZXNNb2R1bGUiLCJucyIsImNyZWF0ZSIsImtleSIsImJpbmQiLCJuIiwib2JqZWN0IiwicHJvcGVydHkiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsInAiLCJzIiwiX3RvQ29uc3VtYWJsZUFycmF5IiwiYXJyIiwiQXJyYXkiLCJpc0FycmF5IiwiYXJyMiIsImxlbmd0aCIsIl9hcnJheVdpdGhvdXRIb2xlcyIsIml0ZXIiLCJpdGVyYXRvciIsInRvU3RyaW5nIiwiZnJvbSIsIl9pdGVyYWJsZVRvQXJyYXkiLCJUeXBlRXJyb3IiLCJfbm9uSXRlcmFibGVTcHJlYWQiLCJfY2xhc3NDYWxsQ2hlY2siLCJpbnN0YW5jZSIsIkNvbnN0cnVjdG9yIiwiX2RlZmluZVByb3BlcnRpZXMiLCJ0YXJnZXQiLCJwcm9wcyIsImRlc2NyaXB0b3IiLCJjb25maWd1cmFibGUiLCJ3cml0YWJsZSIsIl9jcmVhdGVDbGFzcyIsInByb3RvUHJvcHMiLCJzdGF0aWNQcm9wcyIsIkNhbnZhc0NvbnRyb2xzIiwiaW5oZXJpdCIsImRlc3QiLCJ0YXJnIiwiY29uZGl0aW9uIiwiYXJndW1lbnRzIiwidW5kZWZpbmVkIiwicHJvcCIsImJvdW5kIiwiTSIsImJsb2NrIiwib3AiLCJkaXN0IiwiWHMiLCJZcyIsIk1hdGgiLCJzcXJ0IiwibWFwIiwidiIsInBvdyIsInJlZHVjZSIsImFjYyIsImlzV2l0aGluIiwiYm94IiwicG9pbnQiLCJzZW5zaXRpdml0eSIsIk9wdHMiLCJFcnJvcnMiLCJVc2VCdXR0b24iLCJTY2FsZU1vZGUiLCJQb3NpdGlvbiIsIkVOT1RDQU5WIiwiRU5PVENUWCIsIkVOT1ROVU1BUlIyIiwiRU5PVE5VTSIsIkVJU0FMUiIsIlJlZmVyZW5jZUVycm9yIiwiQ29udHJvbGxhYmxlQ2FudmFzIiwib3B0cyIsImRlZmF1bHRPcHRzIiwidGhpcyIsInRyYW5zIiwic2NsIiwidHJhbnNCb3VuZHMiLCJJbmZpbml0eSIsImR5bmFtaWNUcmFuc0JvdW5kcyIsInNjbEJvdW5kcyIsImRyYWdFbmFibGVkIiwicGluY2hFbmFibGVkIiwid2hlZWxFbmFibGVkIiwia2V5c0VuYWJsZWQiLCJwYW5FbmFibGVkIiwidGlsdEVuYWJsZWQiLCJldmVudHNSZXZlcnNlZCIsInVzZUJ1dHRvbiIsIlVTRUxFRlQiLCJzY2FsZU1vZGUiLCJOT1JNQUwiLCJ0cmFuc1NwZWVkIiwic2NsU3BlZWQiLCJ0b3VjaFNlbnNpdGl2aXR5IiwiY2xpY2tTZW5zaXRpdml0eSIsIl96b29tQ2hhbmdlZCIsIl9tb2JpbGUiLCJfcHJlc3NlZCIsIl9jbGt0aW1lIiwiX2Nvb3JkaW5hdGVzIiwiX3RvdWNoZXMiLCJIVE1MQ2FudmFzRWxlbWVudCIsInNvbWUiLCJGbG9hdDMyQXJyYXkiLCJGbG9hdDY0QXJyYXkiLCJudW0iLCJpc05hTiIsIl9hZGFwdHMiLCJwaW4iLCJ3aWR0aCIsImhlaWdodCIsImNvbnRleHQiLCJnZXRDb250ZXh0Iiwia2V5YmluZHMiLCJLZXlCaW5kIiwid2dldHMiLCJTZXQiLCJOdW1iZXIiLCJpc01vYmlsZSIsIl9saW5lcGl4IiwibGluZVRvUGl4IiwiX21vYmlsZUFkYXB0IiwiX3BjQWRhcHQiLCJkYXRhIiwiQ2FudmFzQnV0dG9uIiwiaGFzIiwicGFyZW50IiwiYWRkIiwic2V0VHJhbnNmb3JtIiwidHJhbnNsYXRlIiwic2NhbGUiLCJfdGhpcyIsIngiLCJ5IiwiYWJzIiwiYnkiLCJiIiwidHJuIiwiaWR4IiwiX3RoaXMyIiwibnNjbCIsIl90aGlzMyIsImRyYWciLCJwaW5jaCIsImFkZEV2ZW50TGlzdGVuZXIiLCJlIiwiZHJhZ01vYmlsZVN0YXJ0IiwicGFzc2l2ZSIsImRyYWdNb2JpbGVNb3ZlIiwiZHJhZ01vYmlsZUVuZCIsInRpbHQiLCJfdGhpczQiLCJjbGljayIsImRyYWdQQyIsIkRhdGUiLCJub3ciLCJjbGlja1BDIiwiVVNFUklHSFQiLCJwcmV2ZW50RGVmYXVsdCIsImNhcHR1cmUiLCJ3aGVlbCIsIl90aGlzNSIsIm1pbiIsIm1heCIsImV2ZW50IiwiY2MiLCJjb29yZHMiLCJjbGllbnRYIiwib2Zmc2V0TGVmdCIsImNsaWVudFkiLCJvZmZzZXRUb3AiLCJzb3J0ZWQiLCJlbnRyaWVzIiwic29ydCIsImEiLCJfaWQiLCJyZXQiLCJfaXRlcmF0b3JOb3JtYWxDb21wbGV0aW9uIiwiX2RpZEl0ZXJhdG9yRXJyb3IiLCJfaXRlcmF0b3JFcnJvciIsIl9zdGVwIiwiX2l0ZXJhdG9yIiwibmV4dCIsImRvbmUiLCJidXR0IiwiZW5hYmxlZCIsIl9pc09uIiwiZXJyIiwicmV0dXJuIiwicmVsIiwiYnV0dG9ucyIsIndoaWNoIiwiYnV0dG9uIiwiVVNFQk9USCIsIm1vdmVtZW50WCIsIm1vdmVtZW50WSIsIl9pdGVyYXRvck5vcm1hbENvbXBsZXRpb24yIiwiX2RpZEl0ZXJhdG9yRXJyb3IyIiwiX2l0ZXJhdG9yRXJyb3IyIiwiX3N0ZXAyIiwiX2l0ZXJhdG9yMiIsInBzdGF0ZSIsImZvY3VzIiwiY2hlY2siLCJjdXJyIiwiZXZlcnkiLCJhciIsImluaCIsIm9uZSIsInRhcmdldFRvdWNoZXMiLCJ0bGlzIiwiY3AiLCJhcHBseSIsIm50IiwiYWxsIiwib25jZSIsIm91dCIsIkZSRUVTQ0FMRSIsImluaWRpc3QiLCJpZGVudGlmaWVyIiwiX2RpcyIsIml0b3VjaGVzIiwibnRvdWNoZXMiLCJfaW5pZGlzdCIsIl9kaXMyIiwiX2l0b3VjaGVzIiwiX2QiLCJfbnRvdWNoZXMiLCJ6bSIsImN1c3QiLCJjaGFuZ2VkVG91Y2hlcyIsImZvckVhY2giLCJfaXRlcmF0b3JOb3JtYWxDb21wbGV0aW9uMyIsIl9kaWRJdGVyYXRvckVycm9yMyIsIl9pdGVyYXRvckVycm9yMyIsIl9zdGVwMyIsIl9pdGVyYXRvcjMiLCJ0b3VjaCIsIl9pdGVyYXRvck5vcm1hbENvbXBsZXRpb240IiwiX2RpZEl0ZXJhdG9yRXJyb3I0IiwiX2l0ZXJhdG9yRXJyb3I0IiwiX3N0ZXA0IiwiX2l0ZXJhdG9yNCIsIl9pdGVyYXRvck5vcm1hbENvbXBsZXRpb241IiwiX2RpZEl0ZXJhdG9yRXJyb3I1IiwiX2l0ZXJhdG9yRXJyb3I1IiwiX3N0ZXA1IiwiX2l0ZXJhdG9yNSIsIl9pdGVyYXRvck5vcm1hbENvbXBsZXRpb243IiwiX2RpZEl0ZXJhdG9yRXJyb3I3IiwiX2l0ZXJhdG9yRXJyb3I3IiwiX3N0ZXA3IiwiX2l0ZXJhdG9yNyIsIl9idXR0IiwiX2l0ZXJhdG9yTm9ybWFsQ29tcGxldGlvbjYiLCJfZGlkSXRlcmF0b3JFcnJvcjYiLCJfaXRlcmF0b3JFcnJvcjYiLCJfc3RlcDYiLCJfaXRlcmF0b3I2Iiwic3BsaWNlIiwia2V5cyIsImZpeERlbHRhIiwiZGVsdGFNb2RlIiwiZGVsdGFZIiwiaW5uZXJIZWlnaHQiLCJuYXZpZ2F0b3IiLCJ1c2VyQWdlbnQiLCJtYXRjaCIsImlmcmFtZSIsImRvY3VtZW50IiwiY3JlYXRlRWxlbWVudCIsInNyYyIsImJvZHkiLCJhcHBlbmRDaGlsZCIsImlkb2MiLCJjb250ZW50V2luZG93Iiwib3BlbiIsIndyaXRlIiwiY2xvc2UiLCJmaXJzdEVsZW1lbnRDaGlsZCIsIm9mZnNldEhlaWdodCIsInJlbW92ZUNoaWxkIiwiZ2V0RWxlbWVudHNCeVRhZ05hbWUiLCJwYW4iLCJlbGVtZW50IiwicHJlc3MiLCJkb3duIiwidXAiLCJfYm91bmQiLCJhcnJvd01vdmVTcGVlZHVwRW5hYmxlZCIsImFycm93QmluZGluZ3MiLCJhc3NpZ24iLCJhcnJvd01vdmVTcGVlZCIsImFycm93TW92ZVNwZWVkdXAiLCJhcnJvd01vdmVTcGVlZE1heCIsInJlZ2lzdGVyS2V5ZG93biIsImFycm93TW92ZSIsInJlZ2lzdGVyS2V5dXAiLCJiaW5kQXJyb3dzIiwiX3RoaXM2IiwiX2hhbmRsZXIiLCJ0eXBlIiwiaGFuZGxlZCIsInJlcGxhY2UiLCJjYWxsYmFjayIsInB1c2giLCJpZCIsIl9pZGNudHIiLCJyZXBsIiwiZmluZEluZGV4IiwiayIsImZpbHRlciIsIkFycm93VXAiLCJBcnJvd0Rvd24iLCJBcnJvd0xlZnQiLCJBcnJvd1JpZ2h0IiwiZHgiLCJkeSIsImluZGV4IiwicG9zaXRpb24iLCJyZWxhdGl2ZUNvb3JkcyIsIkZJWEVEIiwiVU5TQ0FMQUJMRSIsImJsdXIiLCJWZWN0b3IiLCJfdGhpczciLCJzdWIiLCJfdGhpczgiLCJkaXYiLCJ2YWwiLCJSZXNvdXJjZUxvYWRlciIsInJlc291cmNlcyIsIm9ubG9hZCIsImF1dG9iaW5kIiwiX2xvYWRjbnRyIiwibG9hZCIsIl90aGlzOSIsInJlcyIsIl9sb2FkIiwidXJsaXN0IiwiaW1nbGlzdCIsIl9pdGVyYXRvck5vcm1hbENvbXBsZXRpb244IiwiX2RpZEl0ZXJhdG9yRXJyb3I4IiwiX2l0ZXJhdG9yRXJyb3I4IiwiX3N0ZXA4IiwiX2l0ZXJhdG9yOCIsInVybCIsImltZyIsIkltYWdlIiwiYXVkaW9saXN0IiwiX2l0ZXJhdG9yTm9ybWFsQ29tcGxldGlvbjkiLCJfZGlkSXRlcmF0b3JFcnJvcjkiLCJfaXRlcmF0b3JFcnJvcjkiLCJfc3RlcDkiLCJfaXRlcmF0b3I5IiwiYXVkaW8iLCJBdWRpbyIsImRlZmF1bHQiLCJnbG9iYWwiLCJfYmFiZWxQb2x5ZmlsbCIsImNvbnNvbGUiLCJ3YXJuIiwiaW5jbHVkZXMiLCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzIiwidmFsdWVzIiwiUHJvbWlzZSIsIlN0cmluZyIsInBhZEVuZCIsInBhZFN0YXJ0IiwiZiIsIml0IiwiY29mIiwibXNnIiwiVU5TQ09QQUJMRVMiLCJBcnJheVByb3RvIiwiYXQiLCJTIiwidW5pY29kZSIsImZvcmJpZGRlbkZpZWxkIiwiaXNPYmplY3QiLCJ0b09iamVjdCIsInRvQWJzb2x1dGVJbmRleCIsInRvTGVuZ3RoIiwiY29weVdpdGhpbiIsInN0YXJ0IiwiTyIsImxlbiIsInRvIiwiZW5kIiwiY291bnQiLCJpbmMiLCJhTGVuIiwiZW5kUG9zIiwidG9JT2JqZWN0IiwiSVNfSU5DTFVERVMiLCIkdGhpcyIsImVsIiwiZnJvbUluZGV4IiwiY3R4IiwiSU9iamVjdCIsImFzYyIsIlRZUEUiLCIkY3JlYXRlIiwiSVNfTUFQIiwiSVNfRklMVEVSIiwiSVNfU09NRSIsIklTX0VWRVJZIiwiSVNfRklORF9JTkRFWCIsIk5PX0hPTEVTIiwiY2FsbGJhY2tmbiIsInRoYXQiLCJzZWxmIiwicmVzdWx0IiwiYUZ1bmN0aW9uIiwibWVtbyIsImlzUmlnaHQiLCJTUEVDSUVTIiwib3JpZ2luYWwiLCJDIiwiY29uc3RydWN0b3IiLCJzcGVjaWVzQ29uc3RydWN0b3IiLCJpbnZva2UiLCJhcnJheVNsaWNlIiwic2xpY2UiLCJmYWN0b3JpZXMiLCJGdW5jdGlvbiIsImZuIiwicGFydEFyZ3MiLCJhcmdzIiwiY29uY2F0IiwiRiIsImpvaW4iLCJjb25zdHJ1Y3QiLCJUQUciLCJBUkciLCJUIiwiQiIsInRyeUdldCIsImNhbGxlZSIsImRQIiwicmVkZWZpbmVBbGwiLCJhbkluc3RhbmNlIiwiZm9yT2YiLCIkaXRlckRlZmluZSIsInN0ZXAiLCJzZXRTcGVjaWVzIiwiREVTQ1JJUFRPUlMiLCJmYXN0S2V5IiwidmFsaWRhdGUiLCJTSVpFIiwiZ2V0RW50cnkiLCJlbnRyeSIsIl9pIiwiX2YiLCJnZXRDb25zdHJ1Y3RvciIsIndyYXBwZXIiLCJOQU1FIiwiQURERVIiLCJpdGVyYWJsZSIsIl90IiwiX2wiLCJjbGVhciIsImRlbGV0ZSIsInByZXYiLCJkZWYiLCJzZXRTdHJvbmciLCJpdGVyYXRlZCIsImtpbmQiLCJfayIsImdldFdlYWsiLCJhbk9iamVjdCIsImNyZWF0ZUFycmF5TWV0aG9kIiwiJGhhcyIsImFycmF5RmluZCIsImFycmF5RmluZEluZGV4IiwidW5jYXVnaHRGcm96ZW5TdG9yZSIsIlVuY2F1Z2h0RnJvemVuU3RvcmUiLCJmaW5kVW5jYXVnaHRGcm96ZW4iLCJzdG9yZSIsInNldCIsInVmc3RvcmUiLCIkZXhwb3J0IiwicmVkZWZpbmUiLCJtZXRhIiwiZmFpbHMiLCIkaXRlckRldGVjdCIsInNldFRvU3RyaW5nVGFnIiwiaW5oZXJpdElmUmVxdWlyZWQiLCJtZXRob2RzIiwiY29tbW9uIiwiSVNfV0VBSyIsIkJhc2UiLCJwcm90byIsImZpeE1ldGhvZCIsIktFWSIsIkhBU05UX0NIQUlOSU5HIiwiVEhST1dTX09OX1BSSU1JVElWRVMiLCJBQ0NFUFRfSVRFUkFCTEVTIiwiQlVHR1lfWkVSTyIsIiRpbnN0YW5jZSIsIk5FRUQiLCJHIiwiVyIsImNvcmUiLCJ2ZXJzaW9uIiwiX19lIiwiJGRlZmluZVByb3BlcnR5IiwiY3JlYXRlRGVzYyIsImdldFRpbWUiLCIkdG9JU09TdHJpbmciLCJ0b0lTT1N0cmluZyIsImx6IiwiTmFOIiwiaXNGaW5pdGUiLCJSYW5nZUVycm9yIiwiZ2V0VVRDRnVsbFllYXIiLCJnZXRVVENNaWxsaXNlY29uZHMiLCJnZXRVVENNb250aCIsImdldFVUQ0RhdGUiLCJnZXRVVENIb3VycyIsImdldFVUQ01pbnV0ZXMiLCJnZXRVVENTZWNvbmRzIiwidG9QcmltaXRpdmUiLCJoaW50IiwiaXMiLCJzcGxpdCIsImdldEtleXMiLCJnT1BTIiwicElFIiwiZ2V0U3ltYm9scyIsInN5bWJvbHMiLCJpc0VudW0iLCJoaWRlIiwic291cmNlIiwib3duIiwiZXhwIiwiSVNfRk9SQ0VEIiwiSVNfR0xPQkFMIiwiSVNfU1RBVElDIiwiSVNfUFJPVE8iLCJQIiwiSVNfQklORCIsImV4cFByb3RvIiwiVSIsIlIiLCJNQVRDSCIsInJlIiwiZXhlYyIsImRlZmluZWQiLCJ3a3MiLCJyZWdleHBFeGVjIiwiUkVQTEFDRV9TVVBQT1JUU19OQU1FRF9HUk9VUFMiLCJncm91cHMiLCJTUExJVF9XT1JLU19XSVRIX09WRVJXUklUVEVOX0VYRUMiLCJvcmlnaW5hbEV4ZWMiLCJTWU1CT0wiLCJERUxFR0FURVNfVE9fU1lNQk9MIiwiREVMRUdBVEVTX1RPX0VYRUMiLCJleGVjQ2FsbGVkIiwibmF0aXZlUmVnRXhwTWV0aG9kIiwiZm5zIiwibmF0aXZlTWV0aG9kIiwicmVnZXhwIiwic3RyIiwiYXJnMiIsImZvcmNlU3RyaW5nTWV0aG9kIiwic3RyZm4iLCJyeGZuIiwiUmVnRXhwIiwic3RyaW5nIiwiYXJnIiwiaWdub3JlQ2FzZSIsIm11bHRpbGluZSIsInN0aWNreSIsImlzQXJyYXlJdGVyIiwiZ2V0SXRlckZuIiwiQlJFQUsiLCJSRVRVUk4iLCJJVEVSQVRPUiIsIml0ZXJGbiIsIl9fZyIsImRvY3VtZW50RWxlbWVudCIsInNldFByb3RvdHlwZU9mIiwidW4iLCJwcm9wZXJ0eUlzRW51bWVyYWJsZSIsIkl0ZXJhdG9ycyIsImZsb29yIiwiaXNSZWdFeHAiLCJJdGVyYXRvclByb3RvdHlwZSIsIkxJQlJBUlkiLCIkaXRlckNyZWF0ZSIsImdldFByb3RvdHlwZU9mIiwiQlVHR1kiLCJyZXR1cm5UaGlzIiwiREVGQVVMVCIsIklTX1NFVCIsIkZPUkNFRCIsImdldE1ldGhvZCIsIkRFRl9WQUxVRVMiLCJWQUxVRVNfQlVHIiwiJG5hdGl2ZSIsIiRkZWZhdWx0IiwiJGVudHJpZXMiLCIkYW55TmF0aXZlIiwiU0FGRV9DTE9TSU5HIiwicml0ZXIiLCJza2lwQ2xvc2luZyIsInNhZmUiLCIkZXhwbTEiLCJleHBtMSIsInNpZ24iLCJFUFNJTE9OIiwiRVBTSUxPTjMyIiwiTUFYMzIiLCJNSU4zMiIsImZyb3VuZCIsIiRhYnMiLCIkc2lnbiIsImxvZzFwIiwibG9nIiwiTUVUQSIsInNldERlc2MiLCJpc0V4dGVuc2libGUiLCJGUkVFWkUiLCJwcmV2ZW50RXh0ZW5zaW9ucyIsInNldE1ldGEiLCJ3Iiwib25GcmVlemUiLCJtYWNyb3Rhc2siLCJPYnNlcnZlciIsIk11dGF0aW9uT2JzZXJ2ZXIiLCJXZWJLaXRNdXRhdGlvbk9ic2VydmVyIiwicHJvY2VzcyIsImlzTm9kZSIsImhlYWQiLCJsYXN0Iiwibm90aWZ5IiwiZmx1c2giLCJkb21haW4iLCJleGl0IiwiZW50ZXIiLCJuZXh0VGljayIsInN0YW5kYWxvbmUiLCJyZXNvbHZlIiwicHJvbWlzZSIsInRoZW4iLCJ0b2dnbGUiLCJub2RlIiwiY3JlYXRlVGV4dE5vZGUiLCJvYnNlcnZlIiwiY2hhcmFjdGVyRGF0YSIsInRhc2siLCJQcm9taXNlQ2FwYWJpbGl0eSIsInJlamVjdCIsIiQkcmVzb2x2ZSIsIiQkcmVqZWN0IiwiJGFzc2lnbiIsIkEiLCJLIiwiaiIsImRQcyIsImVudW1CdWdLZXlzIiwiSUVfUFJPVE8iLCJFbXB0eSIsImNyZWF0ZURpY3QiLCJpZnJhbWVEb2N1bWVudCIsInN0eWxlIiwiZGlzcGxheSIsImx0IiwiUHJvcGVydGllcyIsIklFOF9ET01fREVGSU5FIiwiQXR0cmlidXRlcyIsImRlZmluZVByb3BlcnRpZXMiLCJnT1BEIiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIiwiZ09QTiIsIndpbmRvd05hbWVzIiwiZ2V0T3duUHJvcGVydHlOYW1lcyIsImdldFdpbmRvd05hbWVzIiwiJGtleXMiLCJoaWRkZW5LZXlzIiwiZ2V0T3duUHJvcGVydHlTeW1ib2xzIiwiT2JqZWN0UHJvdG8iLCJhcnJheUluZGV4T2YiLCJuYW1lcyIsImlzRW50cmllcyIsIlJlZmxlY3QiLCJvd25LZXlzIiwiJHBhcnNlRmxvYXQiLCJwYXJzZUZsb2F0IiwiJHRyaW0iLCJ0cmltIiwiY2hhckF0IiwiJHBhcnNlSW50IiwicGFyc2VJbnQiLCJ3cyIsImhleCIsInJhZGl4IiwidGVzdCIsIm5ld1Byb21pc2VDYXBhYmlsaXR5IiwicHJvbWlzZUNhcGFiaWxpdHkiLCJiaXRtYXAiLCJTUkMiLCIkdG9TdHJpbmciLCJUUEwiLCJpbnNwZWN0U291cmNlIiwiaXNGdW5jdGlvbiIsImNsYXNzb2YiLCJidWlsdGluRXhlYyIsInJlMSIsInJlMiIsInJlZ2V4cEZsYWdzIiwibmF0aXZlRXhlYyIsIm5hdGl2ZVJlcGxhY2UiLCJwYXRjaGVkRXhlYyIsIlVQREFURVNfTEFTVF9JTkRFWF9XUk9ORyIsIk5QQ0dfSU5DTFVERUQiLCJsYXN0SW5kZXgiLCJyZUNvcHkiLCJidWdneSIsIl9fcHJvdG9fXyIsInRhZyIsInN0YXQiLCJzaGFyZWQiLCJ1aWQiLCJjb3B5cmlnaHQiLCJEIiwibWV0aG9kIiwidG9JbnRlZ2VyIiwiVE9fU1RSSU5HIiwicG9zIiwiY2hhckNvZGVBdCIsInNlYXJjaFN0cmluZyIsInF1b3QiLCJjcmVhdGVIVE1MIiwiYXR0cmlidXRlIiwicDEiLCJ0b0xvd2VyQ2FzZSIsInJlcGVhdCIsIm1heExlbmd0aCIsImZpbGxTdHJpbmciLCJsZWZ0Iiwic3RyaW5nTGVuZ3RoIiwiZmlsbFN0ciIsImludE1heExlbmd0aCIsImZpbGxMZW4iLCJzdHJpbmdGaWxsZXIiLCJjZWlsIiwic3BhY2VzIiwic3BhY2UiLCJsdHJpbSIsInJ0cmltIiwiZXhwb3J0ZXIiLCJBTElBUyIsIkZPUkNFIiwiZGVmZXIiLCJjaGFubmVsIiwicG9ydCIsImh0bWwiLCJjZWwiLCJzZXRUYXNrIiwic2V0SW1tZWRpYXRlIiwiY2xlYXJUYXNrIiwiY2xlYXJJbW1lZGlhdGUiLCJNZXNzYWdlQ2hhbm5lbCIsIkRpc3BhdGNoIiwiY291bnRlciIsInF1ZXVlIiwicnVuIiwibGlzdGVuZXIiLCJwb3J0MiIsInBvcnQxIiwib25tZXNzYWdlIiwicG9zdE1lc3NhZ2UiLCJpbXBvcnRTY3JpcHRzIiwic2V0VGltZW91dCIsIm51bWJlciIsInZhbHVlT2YiLCIkdHlwZWQiLCIkYnVmZmVyIiwicHJvcGVydHlEZXNjIiwidG9JbmRleCIsImNyZWF0ZUFycmF5SW5jbHVkZXMiLCJBcnJheUl0ZXJhdG9ycyIsImFycmF5RmlsbCIsImFycmF5Q29weVdpdGhpbiIsIiREUCIsIiRHT1BEIiwiVWludDhBcnJheSIsIiRBcnJheUJ1ZmZlciIsIkFycmF5QnVmZmVyIiwiJERhdGFWaWV3IiwiRGF0YVZpZXciLCJhcnJheUZvckVhY2giLCJhcnJheUZpbHRlciIsImFycmF5U29tZSIsImFycmF5RXZlcnkiLCJhcnJheUluY2x1ZGVzIiwiYXJyYXlWYWx1ZXMiLCJhcnJheUtleXMiLCJhcnJheUVudHJpZXMiLCJhcnJheUxhc3RJbmRleE9mIiwibGFzdEluZGV4T2YiLCJhcnJheVJlZHVjZSIsImFycmF5UmVkdWNlUmlnaHQiLCJyZWR1Y2VSaWdodCIsImFycmF5Sm9pbiIsImFycmF5U29ydCIsImFycmF5VG9TdHJpbmciLCJhcnJheVRvTG9jYWxlU3RyaW5nIiwidG9Mb2NhbGVTdHJpbmciLCJUWVBFRF9DT05TVFJVQ1RPUiIsIkRFRl9DT05TVFJVQ1RPUiIsIkFMTF9DT05TVFJVQ1RPUlMiLCJDT05TVFIiLCJUWVBFRF9BUlJBWSIsIlRZUEVEIiwiVklFVyIsIiRtYXAiLCJhbGxvY2F0ZSIsIkxJVFRMRV9FTkRJQU4iLCJVaW50MTZBcnJheSIsImJ1ZmZlciIsIkZPUkNFRF9TRVQiLCJ0b09mZnNldCIsIkJZVEVTIiwib2Zmc2V0Iiwic3BlY2llc0Zyb21MaXN0IiwibGlzdCIsImZyb21MaXN0IiwiYWRkR2V0dGVyIiwiaW50ZXJuYWwiLCIkZnJvbSIsIm1hcGZuIiwibWFwcGluZyIsIiRvZiIsIlRPX0xPQ0FMRV9CVUciLCIkdG9Mb2NhbGVTdHJpbmciLCJmaWxsIiwiZmluZCIsInByZWRpY2F0ZSIsImluZGV4T2YiLCJzZWFyY2hFbGVtZW50Iiwic2VwYXJhdG9yIiwicmV2ZXJzZSIsIm1pZGRsZSIsImNvbXBhcmVmbiIsInN1YmFycmF5IiwiYmVnaW4iLCIkYmVnaW4iLCJieXRlT2Zmc2V0IiwiQllURVNfUEVSX0VMRU1FTlQiLCIkc2xpY2UiLCIkc2V0IiwiYXJyYXlMaWtlIiwiJGl0ZXJhdG9ycyIsImlzVEFJbmRleCIsIiRnZXREZXNjIiwiJHNldERlc2MiLCJkZXNjIiwiJFR5cGVkQXJyYXlQcm90b3R5cGUkIiwiQ0xBTVBFRCIsIkdFVFRFUiIsIlNFVFRFUiIsIlR5cGVkQXJyYXkiLCJUQUMiLCJBQlYiLCJUeXBlZEFycmF5UHJvdG90eXBlIiwiYWRkRWxlbWVudCIsInJvdW5kIiwic2V0dGVyIiwiJG9mZnNldCIsIiRsZW5ndGgiLCJieXRlTGVuZ3RoIiwia2xhc3MiLCIkbGVuIiwiJG5hdGl2ZUl0ZXJhdG9yIiwiQ09SUkVDVF9JVEVSX05BTUUiLCIkaXRlcmF0b3IiLCJvZiIsIlBST1RPVFlQRSIsIldST05HX0lOREVYIiwiQmFzZUJ1ZmZlciIsIkxOMiIsIiRCVUZGRVIiLCIkTEVOR1RIIiwiJE9GRlNFVCIsInBhY2tJRUVFNzU0IiwibUxlbiIsIm5CeXRlcyIsImVMZW4iLCJlTWF4IiwiZUJpYXMiLCJydCIsInVucGFja0lFRUU3NTQiLCJuQml0cyIsInVucGFja0kzMiIsImJ5dGVzIiwicGFja0k4IiwicGFja0kxNiIsInBhY2tJMzIiLCJwYWNrRjY0IiwicGFja0YzMiIsInZpZXciLCJpc0xpdHRsZUVuZGlhbiIsImludEluZGV4IiwiX2IiLCJwYWNrIiwiY29udmVyc2lvbiIsIkFycmF5QnVmZmVyUHJvdG8iLCIkc2V0SW50OCIsInNldEludDgiLCJnZXRJbnQ4Iiwic2V0VWludDgiLCJidWZmZXJMZW5ndGgiLCJnZXRVaW50OCIsImdldEludDE2IiwiZ2V0VWludDE2IiwiZ2V0SW50MzIiLCJnZXRVaW50MzIiLCJnZXRGbG9hdDMyIiwiZ2V0RmxvYXQ2NCIsInNldEludDE2Iiwic2V0VWludDE2Iiwic2V0SW50MzIiLCJzZXRVaW50MzIiLCJzZXRGbG9hdDMyIiwic2V0RmxvYXQ2NCIsIlR5cGVkIiwiVHlwZWRBcnJheUNvbnN0cnVjdG9ycyIsInB4IiwicmFuZG9tIiwid2tzRXh0IiwiJFN5bWJvbCIsIlVTRV9TWU1CT0wiLCJnZXRJdGVyYXRvck1ldGhvZCIsIiRldmVyeSIsIiRmaWx0ZXIiLCIkZmluZCIsImZvcmNlZCIsIiRmb3JFYWNoIiwiU1RSSUNUIiwiY3JlYXRlUHJvcGVydHkiLCIkaW5kZXhPZiIsIk5FR0FUSVZFX1pFUk8iLCJhZGRUb1Vuc2NvcGFibGVzIiwiQXJndW1lbnRzIiwiJHJlZHVjZSIsInVwVG8iLCJzaXplIiwiY2xvbmVkIiwiJHNvbWUiLCIkc29ydCIsInRvSlNPTiIsInB2IiwiVE9fUFJJTUlUSVZFIiwiRGF0ZVByb3RvIiwiSEFTX0lOU1RBTkNFIiwiRnVuY3Rpb25Qcm90byIsIkZQcm90byIsIm5hbWVSRSIsInN0cm9uZyIsIiRhY29zaCIsImFjb3NoIiwiTUFYX1ZBTFVFIiwiJGFzaW5oIiwiYXNpbmgiLCIkYXRhbmgiLCJhdGFuaCIsImNicnQiLCJjbHozMiIsIkxPRzJFIiwiY29zaCIsImh5cG90IiwidmFsdWUxIiwidmFsdWUyIiwic3VtIiwibGFyZyIsIiRpbXVsIiwiaW11bCIsInhuIiwieW4iLCJ4bCIsInlsIiwibG9nMTAiLCJMT0cxMEUiLCJsb2cyIiwic2luaCIsIkUiLCJ0YW5oIiwidHJ1bmMiLCIkTnVtYmVyIiwiQlJPS0VOX0NPRiIsIlRSSU0iLCJ0b051bWJlciIsImFyZ3VtZW50IiwidGhpcmQiLCJtYXhDb2RlIiwiZmlyc3QiLCJjb2RlIiwiZGlnaXRzIiwiX2lzRmluaXRlIiwiaXNJbnRlZ2VyIiwiaXNTYWZlSW50ZWdlciIsIk1BWF9TQUZFX0lOVEVHRVIiLCJNSU5fU0FGRV9JTlRFR0VSIiwiYU51bWJlclZhbHVlIiwiJHRvRml4ZWQiLCJ0b0ZpeGVkIiwiRVJST1IiLCJtdWx0aXBseSIsImMyIiwiZGl2aWRlIiwibnVtVG9TdHJpbmciLCJmcmFjdGlvbkRpZ2l0cyIsInoiLCJ4MiIsIiRmYWlscyIsIiR0b1ByZWNpc2lvbiIsInRvUHJlY2lzaW9uIiwicHJlY2lzaW9uIiwiJGZyZWV6ZSIsIiRnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IiLCIkZ2V0UHJvdG90eXBlT2YiLCIkaXNFeHRlbnNpYmxlIiwiJGlzRnJvemVuIiwiJGlzU2VhbGVkIiwiJHByZXZlbnRFeHRlbnNpb25zIiwiJHNlYWwiLCJJbnRlcm5hbCIsIm5ld0dlbmVyaWNQcm9taXNlQ2FwYWJpbGl0eSIsIk93blByb21pc2VDYXBhYmlsaXR5IiwiV3JhcHBlciIsIm1pY3JvdGFzayIsIm5ld1Byb21pc2VDYXBhYmlsaXR5TW9kdWxlIiwicGVyZm9ybSIsInByb21pc2VSZXNvbHZlIiwidmVyc2lvbnMiLCJ2OCIsIiRQcm9taXNlIiwiZW1wdHkiLCJVU0VfTkFUSVZFIiwiRmFrZVByb21pc2UiLCJQcm9taXNlUmVqZWN0aW9uRXZlbnQiLCJpc1RoZW5hYmxlIiwiaXNSZWplY3QiLCJfbiIsImNoYWluIiwiX2MiLCJfdiIsIm9rIiwiX3MiLCJyZWFjdGlvbiIsImV4aXRlZCIsImhhbmRsZXIiLCJmYWlsIiwiX2giLCJvbkhhbmRsZVVuaGFuZGxlZCIsIm9uVW5oYW5kbGVkIiwidW5oYW5kbGVkIiwiaXNVbmhhbmRsZWQiLCJlbWl0Iiwib251bmhhbmRsZWRyZWplY3Rpb24iLCJyZWFzb24iLCJlcnJvciIsIl9hIiwib25yZWplY3Rpb25oYW5kbGVkIiwiJHJlamVjdCIsIl93IiwiJHJlc29sdmUiLCJleGVjdXRvciIsIm9uRnVsZmlsbGVkIiwib25SZWplY3RlZCIsImNhdGNoIiwiY2FwYWJpbGl0eSIsInJlbWFpbmluZyIsIiRpbmRleCIsImFscmVhZHlDYWxsZWQiLCJyYWNlIiwickFwcGx5IiwiZkFwcGx5IiwidGhpc0FyZ3VtZW50IiwiYXJndW1lbnRzTGlzdCIsIkwiLCJyQ29uc3RydWN0IiwiTkVXX1RBUkdFVF9CVUciLCJBUkdTX0JVRyIsIlRhcmdldCIsIm5ld1RhcmdldCIsIiRhcmdzIiwicHJvcGVydHlLZXkiLCJhdHRyaWJ1dGVzIiwiZGVsZXRlUHJvcGVydHkiLCJFbnVtZXJhdGUiLCJlbnVtZXJhdGUiLCJnZXRQcm90byIsInJlY2VpdmVyIiwic2V0UHJvdG8iLCJWIiwiZXhpc3RpbmdEZXNjcmlwdG9yIiwib3duRGVzYyIsIiRmbGFncyIsIiRSZWdFeHAiLCJDT1JSRUNUX05FVyIsInRpUkUiLCJwaVJFIiwiZmlVIiwicHJveHkiLCJmbGFncyIsImFkdmFuY2VTdHJpbmdJbmRleCIsInJlZ0V4cEV4ZWMiLCIkbWF0Y2giLCJtYXliZUNhbGxOYXRpdmUiLCJyeCIsImZ1bGxVbmljb2RlIiwibWF0Y2hTdHIiLCJTVUJTVElUVVRJT05fU1lNQk9MUyIsIlNVQlNUSVRVVElPTl9TWU1CT0xTX05PX05BTUVEIiwiUkVQTEFDRSIsIiRyZXBsYWNlIiwic2VhcmNoVmFsdWUiLCJyZXBsYWNlVmFsdWUiLCJmdW5jdGlvbmFsUmVwbGFjZSIsInJlc3VsdHMiLCJhY2N1bXVsYXRlZFJlc3VsdCIsIm5leHRTb3VyY2VQb3NpdGlvbiIsIm1hdGNoZWQiLCJjYXB0dXJlcyIsIm5hbWVkQ2FwdHVyZXMiLCJyZXBsYWNlckFyZ3MiLCJyZXBsYWNlbWVudCIsImdldFN1YnN0aXR1dGlvbiIsInRhaWxQb3MiLCJjaCIsInNhbWVWYWx1ZSIsIlNFQVJDSCIsIiRzZWFyY2giLCJwcmV2aW91c0xhc3RJbmRleCIsImNhbGxSZWdFeHBFeGVjIiwiJG1pbiIsIiRwdXNoIiwiU1VQUE9SVFNfWSIsIlNQTElUIiwiJHNwbGl0IiwiaW50ZXJuYWxTcGxpdCIsImxpbWl0IiwibGFzdExlbmd0aCIsIm91dHB1dCIsImxhc3RMYXN0SW5kZXgiLCJzcGxpdExpbWl0Iiwic2VwYXJhdG9yQ29weSIsInNwbGl0dGVyIiwidW5pY29kZU1hdGNoaW5nIiwibGltIiwicSIsIiRhdCIsImNvZGVQb2ludEF0IiwiJGVuZHNXaXRoIiwiZW5kc1dpdGgiLCJlbmRQb3NpdGlvbiIsInNlYXJjaCIsImNvbG9yIiwiZnJvbUNoYXJDb2RlIiwiJGZyb21Db2RlUG9pbnQiLCJmcm9tQ29kZVBvaW50IiwicmF3IiwiY2FsbFNpdGUiLCJ0cGwiLCIkc3RhcnRzV2l0aCIsInN0YXJ0c1dpdGgiLCJ3a3NEZWZpbmUiLCJlbnVtS2V5cyIsIl9jcmVhdGUiLCJnT1BORXh0IiwiJEpTT04iLCJKU09OIiwiX3N0cmluZ2lmeSIsInN0cmluZ2lmeSIsIkhJRERFTiIsIlN5bWJvbFJlZ2lzdHJ5IiwiQWxsU3ltYm9scyIsIk9QU3ltYm9scyIsIlFPYmplY3QiLCJmaW5kQ2hpbGQiLCJzZXRTeW1ib2xEZXNjIiwicHJvdG9EZXNjIiwid3JhcCIsInN5bSIsImlzU3ltYm9sIiwiJGRlZmluZVByb3BlcnRpZXMiLCIkcHJvcGVydHlJc0VudW1lcmFibGUiLCIkZ2V0T3duUHJvcGVydHlOYW1lcyIsIiRnZXRPd25Qcm9wZXJ0eVN5bWJvbHMiLCJJU19PUCIsImVzNlN5bWJvbHMiLCJ3ZWxsS25vd25TeW1ib2xzIiwiZm9yIiwia2V5Rm9yIiwidXNlU2V0dGVyIiwidXNlU2ltcGxlIiwicmVwbGFjZXIiLCIkcmVwbGFjZXIiLCIkaXNWaWV3IiwiaXNWaWV3IiwiZmluIiwidmlld1MiLCJ2aWV3VCIsImluaXQiLCJJbnRlcm5hbE1hcCIsImVhY2giLCJ3ZWFrIiwidG1wIiwiJFdlYWtNYXAiLCJmcmVlemUiLCIkaW5jbHVkZXMiLCJnZXREZXNjIiwiJHZhbHVlcyIsImZpbmFsbHkiLCJvbkZpbmFsbHkiLCIkcGFkIiwiVE9fU1RSSU5HX1RBRyIsIkFycmF5VmFsdWVzIiwiRE9NSXRlcmFibGVzIiwiQ1NTUnVsZUxpc3QiLCJDU1NTdHlsZURlY2xhcmF0aW9uIiwiQ1NTVmFsdWVMaXN0IiwiQ2xpZW50UmVjdExpc3QiLCJET01SZWN0TGlzdCIsIkRPTVN0cmluZ0xpc3QiLCJET01Ub2tlbkxpc3QiLCJEYXRhVHJhbnNmZXJJdGVtTGlzdCIsIkZpbGVMaXN0IiwiSFRNTEFsbENvbGxlY3Rpb24iLCJIVE1MQ29sbGVjdGlvbiIsIkhUTUxGb3JtRWxlbWVudCIsIkhUTUxTZWxlY3RFbGVtZW50IiwiTWVkaWFMaXN0IiwiTWltZVR5cGVBcnJheSIsIk5hbWVkTm9kZU1hcCIsIk5vZGVMaXN0IiwiUGFpbnRSZXF1ZXN0TGlzdCIsIlBsdWdpbiIsIlBsdWdpbkFycmF5IiwiU1ZHTGVuZ3RoTGlzdCIsIlNWR051bWJlckxpc3QiLCJTVkdQYXRoU2VnTGlzdCIsIlNWR1BvaW50TGlzdCIsIlNWR1N0cmluZ0xpc3QiLCJTVkdUcmFuc2Zvcm1MaXN0IiwiU291cmNlQnVmZmVyTGlzdCIsIlN0eWxlU2hlZXRMaXN0IiwiVGV4dFRyYWNrQ3VlTGlzdCIsIlRleHRUcmFja0xpc3QiLCJUb3VjaExpc3QiLCJjb2xsZWN0aW9ucyIsImV4cGxpY2l0IiwiQ29sbGVjdGlvbiIsIiR0YXNrIiwiTVNJRSIsInRpbWUiLCJib3VuZEFyZ3MiLCJzZXRJbnRlcnZhbCIsIk9wIiwiaGFzT3duIiwiaXRlcmF0b3JTeW1ib2wiLCJhc3luY0l0ZXJhdG9yU3ltYm9sIiwiYXN5bmNJdGVyYXRvciIsInRvU3RyaW5nVGFnU3ltYm9sIiwiaW5Nb2R1bGUiLCJydW50aW1lIiwicmVnZW5lcmF0b3JSdW50aW1lIiwiR2VuU3RhdGVTdXNwZW5kZWRTdGFydCIsIkdlblN0YXRlU3VzcGVuZGVkWWllbGQiLCJHZW5TdGF0ZUV4ZWN1dGluZyIsIkdlblN0YXRlQ29tcGxldGVkIiwiQ29udGludWVTZW50aW5lbCIsIk5hdGl2ZUl0ZXJhdG9yUHJvdG90eXBlIiwiR3AiLCJHZW5lcmF0b3JGdW5jdGlvblByb3RvdHlwZSIsIkdlbmVyYXRvciIsIkdlbmVyYXRvckZ1bmN0aW9uIiwiZGlzcGxheU5hbWUiLCJpc0dlbmVyYXRvckZ1bmN0aW9uIiwiZ2VuRnVuIiwiY3RvciIsIm1hcmsiLCJhd3JhcCIsIl9fYXdhaXQiLCJkZWZpbmVJdGVyYXRvck1ldGhvZHMiLCJBc3luY0l0ZXJhdG9yIiwiYXN5bmMiLCJpbm5lckZuIiwib3V0ZXJGbiIsInRyeUxvY3NMaXN0IiwicG9wIiwiQ29udGV4dCIsInJlc2V0Iiwic2tpcFRlbXBSZXNldCIsInNlbnQiLCJfc2VudCIsImRlbGVnYXRlIiwidHJ5RW50cmllcyIsInJlc2V0VHJ5RW50cnkiLCJzdG9wIiwicm9vdFJlY29yZCIsImNvbXBsZXRpb24iLCJydmFsIiwiZGlzcGF0Y2hFeGNlcHRpb24iLCJleGNlcHRpb24iLCJoYW5kbGUiLCJsb2MiLCJjYXVnaHQiLCJyZWNvcmQiLCJ0cnlMb2MiLCJoYXNDYXRjaCIsImhhc0ZpbmFsbHkiLCJjYXRjaExvYyIsImZpbmFsbHlMb2MiLCJFcnJvciIsImFicnVwdCIsImZpbmFsbHlFbnRyeSIsImNvbXBsZXRlIiwiYWZ0ZXJMb2MiLCJmaW5pc2giLCJ0aHJvd24iLCJkZWxlZ2F0ZVlpZWxkIiwicmVzdWx0TmFtZSIsIm5leHRMb2MiLCJwcm90b0dlbmVyYXRvciIsImdlbmVyYXRvciIsIl9pbnZva2UiLCJzdGF0ZSIsImRvbmVSZXN1bHQiLCJkZWxlZ2F0ZVJlc3VsdCIsIm1heWJlSW52b2tlRGVsZWdhdGUiLCJ0cnlDYXRjaCIsIm1ha2VJbnZva2VNZXRob2QiLCJvYmoiLCJwcmV2aW91c1Byb21pc2UiLCJjYWxsSW52b2tlV2l0aE1ldGhvZEFuZEFyZyIsInVud3JhcHBlZCIsImluZm8iLCJwdXNoVHJ5RW50cnkiLCJsb2NzIiwiaXRlcmF0b3JNZXRob2QiLCJnIl0sIm1hcHBpbmdzIjoiQ0FBQSxTQUFBQSxFQUFBQyxHQUNBLGlCQUFBQyxTQUFBLGlCQUFBQyxPQUNBQSxPQUFBRCxRQUFBRCxJQUNBLG1CQUFBRyxlQUFBQyxJQUNBRCxPQUFBLEdBQUFILEdBQ0EsaUJBQUFDLFFBQ0FBLFFBQUEsZUFBQUQsSUFFQUQsRUFBQSxlQUFBQyxJQVJBLENBU0NLLE9BQUEsV0FDRCxtQkNUQSxJQUFBQyxFQUFBLEdBR0EsU0FBQUMsRUFBQUMsR0FHQSxHQUFBRixFQUFBRSxHQUNBLE9BQUFGLEVBQUFFLEdBQUFQLFFBR0EsSUFBQUMsRUFBQUksRUFBQUUsR0FBQSxDQUNBQyxFQUFBRCxFQUNBRSxH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MEI7Ozs7OENDRkF2Qyx1QkFBUSxpREFBUkEsQ0FBd0IscUJBQUFrdEMsR0FDeEIsZ0JBQUE1akMsRUFBQXV0QixFQUFBdDBCLEdBQ0EsT0FBQTJxQyxFQUFBOW1DLEtBQUFrRCxFQUFBdXRCLEVBQUF0MEI7Ozs7OENDRkF2Qyx1QkFBUSxpREFBUkEsQ0FBd0IsbUJBQUFrdEMsR0FDeEIsZ0JBQUE1akMsRUFBQXV0QixFQUFBdDBCLEdBQ0EsT0FBQTJxQyxFQUFBOW1DLEtBQUFrRCxFQUFBdXRCLEVBQUF0MEI7Ozs7OENDRkF2Qyx1QkFBUSxpREFBUkEsQ0FBd0IsbUJBQUFrdEMsR0FDeEIsZ0JBQUE1akMsRUFBQXV0QixFQUFBdDBCLEdBQ0EsT0FBQTJxQyxFQUFBOW1DLEtBQUFrRCxFQUFBdXRCLEVBQUF0MEI7Ozs7OENDRkF2Qyx1QkFBUSxpREFBUkEsQ0FBd0Isa0JBQUFrdEMsR0FDeEIsZ0JBQUE1akMsRUFBQXV0QixFQUFBdDBCLEdBQ0EsT0FBQTJxQyxFQUFBOW1DLEtBQUFrRCxFQUFBdXRCLEVBQUF0MEI7Ozs7OENDRkF2Qyx1QkFBUSxpREFBUkEsQ0FBd0Isb0JBQUFrdEMsR0FDeEIsZ0JBQUE1akMsRUFBQXV0QixFQUFBdDBCLEdBQ0EsT0FBQTJxQyxFQUFBOW1DLEtBQUFrRCxFQUFBdXRCLEVBQUF0MEI7Ozs7OENDRkF2Qyx1QkFBUSxpREFBUkEsQ0FBd0Isb0JBQUFrdEMsR0FDeEIsZ0JBQUE1akMsRUFBQXV0QixFQUFBdDBCLEdBQ0EsT0FBQTJxQyxFQUFBOW1DLEtBQUFrRCxFQUFBdXRCLEVBQUF0MEI7Ozs7OENDRkF2Qyx1QkFBUSxpREFBUkEsQ0FBd0IsbUJBQUFrdEMsR0FDeEIsZ0JBQUE1akMsRUFBQXV0QixFQUFBdDBCLEdBQ0EsT0FBQTJxQyxFQUFBOW1DLEtBQUFrRCxFQUFBdXRCLEVBQUF0MEI7Ozs7OENDRkF2Qyx1QkFBUSxpREFBUkEsQ0FBd0IsbUJBQUFrdEMsR0FDeEIsZ0JBQUE1akMsRUFBQXV0QixFQUFBdDBCLEdBQ0EsT0FBQTJxQyxFQUFBOW1DLEtBQUFrRCxF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SUFBQXMzQixFQUFBdDNCLEVBQUFzeUIsR0FDQSxHQUFBZ0YsRUFDQSxPQUFBQSxFQUFBdDFDLEtBQUFnZSxHQUdBLHNCQUFBQSxFQUFBcFIsS0FDQSxPQUFBb1IsRUFHQSxJQUFBaFcsTUFBQWdXLEVBQUE5YixRQUFBLENBQ0EsSUFBQXJDLEdBQUEsRUFBQStNLEVBQUEsU0FBQUEsSUFDQSxPQUFBL00sRUFBQW1lLEVBQUE5YixRQUNBLEdBQUFtdUMsRUFBQXJ3QyxLQUFBZ2UsRUFBQW5lLEdBR0EsT0FGQStNLEVBQUE5TCxNQUFBa2QsRUFBQW5lLEdBQ0ErTSxFQUFBQyxNQUFBLEVBQ0FELEVBT0EsT0FIQUEsRUFBQTlMLE1BQUErQyxFQUNBK0ksRUFBQUMsTUFBQSxFQUVBRCxHQUdBLE9BQUFBLFVBS0EsT0FBWUEsS0FBQThuQyxHQUlaLFNBQUFBLElBQ0EsT0FBWTV6QyxNQUFBK0MsRUFBQWdKLE1BQUEsSUF4ZlosQ0Fzc0JBLFdBQ0EsT0FBQTlHLE1BQUEsaUJBQUFrVixXQURBLElBRUdjLFNBQUEsY0FBQUE7Ozs7NENDL3NCSCxJQUFBdzVCLEVBR0FBLEVBQUEsV0FDQSxPQUFBeHZDLEtBREEsR0FJQSxJQUVBd3ZDLEtBQUEsSUFBQXg1QixTQUFBLGlCQUNDLE1BQUF4UixHQUVELGlCQUFBOUssU0FBQTgxQyxFQUFBOTFDLFFBT0FILEVBQUFELFFBQUFrMkMiLCJmaWxlIjoiQ2FudmFzQ29udHJvbHMuYnVuZGxlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uIHdlYnBhY2tVbml2ZXJzYWxNb2R1bGVEZWZpbml0aW9uKHJvb3QsIGZhY3RvcnkpIHtcblx0aWYodHlwZW9mIGV4cG9ydHMgPT09ICdvYmplY3QnICYmIHR5cGVvZiBtb2R1bGUgPT09ICdvYmplY3QnKVxuXHRcdG1vZHVsZS5leHBvcnRzID0gZmFjdG9yeSgpO1xuXHRlbHNlIGlmKHR5cGVvZiBkZWZpbmUgPT09ICdmdW5jdGlvbicgJiYgZGVmaW5lLmFtZClcblx0XHRkZWZpbmUoW10sIGZhY3RvcnkpO1xuXHRlbHNlIGlmKHR5cGVvZiBleHBvcnRzID09PSAnb2JqZWN0Jylcblx0XHRleHBvcnRzW1wiQ2FudmFzQ29udHJvbHNcIl0gPSBmYWN0b3J5KCk7XG5cdGVsc2Vcblx0XHRyb290W1wiQ2FudmFzQ29udHJvbHNcIl0gPSBmYWN0b3J5KCk7XG59KSh3aW5kb3csIGZ1bmN0aW9uKCkge1xucmV0dXJuICIsIiBcdC8vIFRoZSBtb2R1bGUgY2FjaGVcbiBcdHZhciBpbnN0YWxsZWRNb2R1bGVzID0ge307XG5cbiBcdC8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG4gXHRmdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG5cbiBcdFx0Ly8gQ2hlY2sgaWYgbW9kdWxlIGlzIGluIGNhY2hlXG4gXHRcdGlmKGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdKSB7XG4gXHRcdFx0cmV0dXJuIGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdLmV4cG9ydHM7XG4gXHRcdH1cbiBcdFx0Ly8gQ3JlYXRlIGEgbmV3IG1vZHVsZSAoYW5kIHB1dCBpdCBpbnRvIHRoZSBjYWNoZSlcbiBcdFx0dmFyIG1vZHVsZSA9IGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdID0ge1xuIFx0XHRcdGk6IG1vZHVsZUlkLFxuIFx0XHRcdGw6IGZhbHNlLFxuIFx0XHRcdGV4cG9ydHM6IHt9XG4gXHRcdH07XG5cbiBcdFx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG4gXHRcdG1vZHVsZXNbbW9kdWxlSWRdLmNhbGwobW9kdWxlLmV4cG9ydHMsIG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuXG4gXHRcdC8vIEZsYWcgdGhlIG1vZHVsZSBhcyBsb2FkZWRcbiBcdFx0bW9kdWxlLmwgPSB0cnVlO1xuXG4gXHRcdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG4gXHRcdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbiBcdH1cblxuXG4gXHQvLyBleHBvc2UgdGhlIG1vZHVsZXMgb2JqZWN0IChfX3dlYnBhY2tfbW9kdWxlc19fKVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5tID0gbW9kdWxlcztcblxuIFx0Ly8gZXhwb3NlIHRoZSBtb2R1bGUgY2FjaGVcbiBcdF9fd2VicGFja19yZXF1aXJlX18uYyA9IGluc3RhbGxlZE1vZHVsZXM7XG5cbiBcdC8vIGRlZmluZSBnZXR0ZXIgZnVuY3Rpb24gZm9yIGhhcm1vbnkgZXhwb3J0c1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5kID0gZnVuY3Rpb24oZXhwb3J0cywgbmFtZSwgZ2V0dGVyKSB7XG4gXHRcdGlmKCFfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZXhwb3J0cywgbmFtZSkpIHtcbiBcdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgbmFtZSwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGdldHRlciB9KTtcbiBcdFx0fVxuIFx0fTtcblxuIFx0Ly8gZGVmaW5lIF9fZXNNb2R1bGUgb24gZXhwb3J0c1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5yID0gZnVuY3Rpb24oZXhwb3J0cykge1xuIFx0XHRpZih0eXBlb2YgU3ltYm9sICE9PSAndW5kZWZpbmVkJyAmJiBTeW1ib2wudG9TdHJpbmdUYWcpIHtcbiBcdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgU3ltYm9sLnRvU3RyaW5nVGFnLCB7IHZhbHVlOiAnTW9kdWxlJyB9KTtcbiBcdFx0fVxuIFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xuIFx0fTtcblxuIFx0Ly8gY3JlYXRlIGEgZmFrZSBuYW1lc3BhY2Ugb2JqZWN0XG4gXHQvLyBtb2RlICYgMTogdmFsdWUgaXMgYSBtb2R1bGUgaWQsIHJlcXVpcmUgaXRcbiBcdC8vIG1vZGUgJiAyOiBtZXJnZSBhbGwgcHJvcGVydGllcyBvZiB2YWx1ZSBpbnRvIHRoZSBuc1xuIFx0Ly8gbW9kZSAmIDQ6IHJldHVybiB2YWx1ZSB3aGVuIGFscmVhZHkgbnMgb2JqZWN0XG4gXHQvLyBtb2RlICYgOHwxOiBiZWhhdmUgbGlrZSByZXF1aXJlXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnQgPSBmdW5jdGlvbih2YWx1ZSwgbW9kZSkge1xuIFx0XHRpZihtb2RlICYgMSkgdmFsdWUgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKHZhbHVlKTtcbiBcdFx0aWYobW9kZSAmIDgpIHJldHVybiB2YWx1ZTtcbiBcdFx0aWYoKG1vZGUgJiA0KSAmJiB0eXBlb2YgdmFsdWUgPT09ICdvYmplY3QnICYmIHZhbHVlICYmIHZhbHVlLl9fZXNNb2R1bGUpIHJldHVybiB2YWx1ZTtcbiBcdFx0dmFyIG5zID0gT2JqZWN0LmNyZWF0ZShudWxsKTtcbiBcdFx0X193ZWJwYWNrX3JlcXVpcmVfXy5yKG5zKTtcbiBcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KG5zLCAnZGVmYXVsdCcsIHsgZW51bWVyYWJsZTogdHJ1ZSwgdmFsdWU6IHZhbHVlIH0pO1xuIFx0XHRpZihtb2RlICYgMiAmJiB0eXBlb2YgdmFsdWUgIT0gJ3N0cmluZycpIGZvcih2YXIga2V5IGluIHZhbHVlKSBfX3dlYnBhY2tfcmVxdWlyZV9fLmQobnMsIGtleSwgZnVuY3Rpb24oa2V5KSB7IHJldHVybiB2YWx1ZVtrZXldOyB9LmJpbmQobnVsbCwga2V5KSk7XG4gXHRcdHJldHVybiBucztcbiBcdH07XG5cbiBcdC8vIGdldERlZmF1bHRFeHBvcnQgZnVuY3Rpb24gZm9yIGNvbXBhdGliaWxpdHkgd2l0aCBub24taGFybW9ueSBtb2R1bGVzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm4gPSBmdW5jdGlvbihtb2R1bGUpIHtcbiBcdFx0dmFyIGdldHRlciA9IG1vZHVsZSAmJiBtb2R1bGUuX19lc01vZHVsZSA/XG4gXHRcdFx0ZnVuY3Rpb24gZ2V0RGVmYXVsdCgpIHsgcmV0dXJuIG1vZHVsZVsnZGVmYXVsdCddOyB9IDpcbiBcdFx0XHRmdW5jdGlvbiBnZXRNb2R1bGVFeHBvcnRzKCkgeyByZXR1cm4gbW9kdWxlOyB9O1xuIFx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQoZ2V0dGVyLCAnYScsIGdldHRlcik7XG4gXHRcdHJldHVybiBnZXR0ZXI7XG4gXHR9O1xuXG4gXHQvLyBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGxcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubyA9IGZ1bmN0aW9uKG9iamVjdCwgcHJvcGVydHkpIHsgcmV0dXJuIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmplY3QsIHByb3BlcnR5KTsgfTtcblxuIFx0Ly8gX193ZWJwYWNrX3B1YmxpY19wYXRoX19cbiBcdF9fd2VicGFja19yZXF1aXJlX18ucCA9IFwiXCI7XG5cblxuIFx0Ly8gTG9hZCBlbnRyeSBtb2R1bGUgYW5kIHJldHVybiBleHBvcnRzXG4gXHRyZXR1cm4gX193ZWJwYWNrX3JlcXVpcmVfXyhfX3dlYnBhY2tfcmVxdWlyZV9fLnMgPSBcIi4vZGlzdC9iYWJlbC9DYW52YXNDb250cm9scy5qc1wiKTtcbiIsIi8qXHJcbiAqIEFuZ2xlIGJldHdlZW4gMyBwb2lucyAoUmFkaWFucyk6XHJcbiAqIHBjOiBjZW50ZXIvcG9sZVxyXG4gKiBwbjogcG9pbnQgbmV3IGNvb3JkaW5hdGVzXHJcbiAqIHBwOiBwb2ludCBwYXN0IGNvb3JkaW5hdGVzXHJcbiAqXHJcbiAqIGF0YW4yKHBueSAtIHBjeSwgcG54IC0gcGN4KSAtIGF0YW4yKHBweSAtIHBjeSwgcHB4IC0gcGN4KVxyXG4gKi9cblxuLypcclxuICogY2VudGVyZWQgem9vbSBicmVha3Mgd2l0aCB0cmFuc0JvdW5kcyAtIG5vcm1hbC9hY2NlcHRhYmxlXHJcbiAqL1xuXCJ1c2Ugc3RyaWN0XCI7XG5cbmZ1bmN0aW9uIF90b0NvbnN1bWFibGVBcnJheShhcnIpIHsgcmV0dXJuIF9hcnJheVdpdGhvdXRIb2xlcyhhcnIpIHx8IF9pdGVyYWJsZVRvQXJyYXkoYXJyKSB8fCBfbm9uSXRlcmFibGVTcHJlYWQoKTsgfVxuXG5mdW5jdGlvbiBfbm9uSXRlcmFibGVTcHJlYWQoKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJJbnZhbGlkIGF0dGVtcHQgdG8gc3ByZWFkIG5vbi1pdGVyYWJsZSBpbnN0YW5jZVwiKTsgfVxuXG5mdW5jdGlvbiBfaXRlcmFibGVUb0FycmF5KGl0ZXIpIHsgaWYgKFN5bWJvbC5pdGVyYXRvciBpbiBPYmplY3QoaXRlcikgfHwgT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGl0ZXIpID09PSBcIltvYmplY3QgQXJndW1lbnRzXVwiKSByZXR1cm4gQXJyYXkuZnJvbShpdGVyKTsgfVxuXG5mdW5jdGlvbiBfYXJyYXlXaXRob3V0SG9sZXMoYXJyKSB7IGlmIChBcnJheS5pc0FycmF5KGFycikpIHsgZm9yICh2YXIgaSA9IDAsIGFycjIgPSBuZXcgQXJyYXkoYXJyLmxlbmd0aCk7IGkgPCBhcnIubGVuZ3RoOyBpKyspIHsgYXJyMltpXSA9IGFycltpXTsgfSByZXR1cm4gYXJyMjsgfSB9XG5cbmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfSB9XG5cbmZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHsgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKykgeyB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldOyBkZXNjcmlwdG9yLmVudW1lcmFibGUgPSBkZXNjcmlwdG9yLmVudW1lcmFibGUgfHwgZmFsc2U7IGRlc2NyaXB0b3IuY29uZmlndXJhYmxlID0gdHJ1ZTsgaWYgKFwidmFsdWVcIiBpbiBkZXNjcmlwdG9yKSBkZXNjcmlwdG9yLndyaXRhYmxlID0gdHJ1ZTsgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgZGVzY3JpcHRvci5rZXksIGRlc2NyaXB0b3IpOyB9IH1cblxuZnVuY3Rpb24gX2NyZWF0ZUNsYXNzKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykgeyBpZiAocHJvdG9Qcm9wcykgX2RlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLCBwcm90b1Byb3BzKTsgaWYgKHN0YXRpY1Byb3BzKSBfZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpOyByZXR1cm4gQ29uc3RydWN0b3I7IH1cblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcblxucmVxdWlyZShcIkBiYWJlbC9wb2x5ZmlsbFwiKTtcbi8qKlxyXG4gKiBAZmlsZSBDYW52YXNDb250cm9scy50c1xyXG4gKiBAY29weXJpZ2h0IFZhbGVuLiBILiAyazE4XHJcbiAqIEBhdXRob3IgVmFsZW4uSC4gPGFsdGVybmF0aXZleHh4eUBnbWFpbC5jb20+XHJcbiAqL1xuXG4vKipcclxuICogVGhlIHJvb3Qgb2YgdGhlIG1haW4gbGlicmFyeVxyXG4gKiBAbW9kdWxlIENhbnZhc0NvbnRyb2xzXHJcbiAqIEBsaWNlbnNlIElTQ1xyXG4gKiBAZ2xvYmFsXHJcbiAqL1xuXG5cbnZhciBDYW52YXNDb250cm9scztcblxuKGZ1bmN0aW9uIChDYW52YXNDb250cm9scykge1xuICAvKipcclxuICAgKiBJZiBgZGVzdGAgbGFja3MgYSBwcm9wZXJ0eSB0aGF0IGB0YXJnYCBoYXMgdGhlbiB0aGF0IHByb3BlcnR5IGlzIGNvcGllZCBpbnRvIGBkZXN0YFxyXG4gICAqIEBmdW5jdGlvblxyXG4gICAqIEBpbm5lclxyXG4gICAqIEBwYXJhbSB7b2JqZWN0fSBkZXN0IC0gZGVzdGluYXRpb24gb2JqZWN0XHJcbiAgICogQHBhcmFtIHtvYmplY3R9IHRhcmcgLSBiYXNlIG9iamVjdFxyXG4gICAqIEBwYXJhbSB7RnVuY3Rpb259IGNvbmRpdGlvbiAtIGluaGVyaXRhbmNlIGNvbmRpdGlvblxyXG4gICAqIEByZXR1cm5zIHtvYmplY3R9IGRlc3RpbmF0aW9uIG9iamVjdFxyXG4gICAqL1xuICBmdW5jdGlvbiBpbmhlcml0KGRlc3QsIHRhcmcpIHtcbiAgICB2YXIgY29uZGl0aW9uID0gYXJndW1lbnRzLmxlbmd0aCA+IDIgJiYgYXJndW1lbnRzWzJdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMl0gOiBmdW5jdGlvbiAoZGVzdCwgdGFyZywgcHJvcCkge1xuICAgICAgcmV0dXJuIGRlc3RbcHJvcF0gPT09IHVuZGVmaW5lZCAmJiAoZGVzdFtwcm9wXSA9IHRhcmdbcHJvcF0pO1xuICAgIH07XG5cbiAgICBmb3IgKHZhciBpIGluIHRhcmcpIHtcbiAgICAgIGNvbmRpdGlvbihkZXN0LCB0YXJnLCBpKTtcbiAgICB9XG5cbiAgICByZXR1cm4gZGVzdDtcbiAgfSAvL2luaGVyaXRcblxuXG4gIENhbnZhc0NvbnRyb2xzLmluaGVyaXQgPSBpbmhlcml0O1xuICAvKipcclxuICAgKiBSZXN0cmljdCBudW1iZXIncyByYW5nZVxyXG4gICAqIEBmdW5jdGlvblxyXG4gICAqIEBpbm5lclxyXG4gICAqIEBwYXJhbSB7bnVtYmVyfSBuIC0gdGFyZ2V0IG51bWJlclxyXG4gICAqIEBwYXJhbSB7bnVtYmVyfSBtIC0gbWluaW11bSBudW1iZXJcclxuICAgKiBAcGFyYW0ge251bWJlcn0gTSAtIG1heGltdW0gbnVtYmVyXHJcbiAgICogQHBhcmFtIHtudW1iZXJ9IHA9MCAtIHByZWNpc2lvblxyXG4gICAqIEByZXR1cm5zIHtudW1iZXJ9IGJvdW5kIG51bWJlclxyXG4gICAqL1xuXG4gIGZ1bmN0aW9uIGJvdW5kKG4sIG0sIE0pIHtcbiAgICB2YXIgcCA9IGFyZ3VtZW50cy5sZW5ndGggPiAzICYmIGFyZ3VtZW50c1szXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzNdIDogMDtcbiAgICByZXR1cm4gbiA+IE0gKyBwID8gTSA6IG4gPCBtIC0gcCA/IG0gOiBuO1xuICB9IC8vYm91bmRcblxuXG4gIENhbnZhc0NvbnRyb2xzLmJvdW5kID0gYm91bmQ7XG4gIC8qKlxyXG4gICAqIERvd25zcGVlZCBpbmNyZW1lbnRhdGlvblxyXG4gICAqIEBwYXJhbSB7bnVtYmVyfSBuIC0gbnVtYmVyXHJcbiAgICogQHBhcmFtIHtudW1iZXJ9IG0gLSBtaW5pbXVtXHJcbiAgICogQHBhcmFtIHtudW1iZXJ9IE0gLSBNYXhpbXVtXHJcbiAgICogQHBhcmFtIHtudW1iZXJ9IG9wIC0gb3BlcmF0aW9uXHJcbiAgICogQHJldHVybnMge251bWJlcn0gblxyXG4gICAqL1xuXG4gIGZ1bmN0aW9uIGJsb2NrKG4sIG0sIE0sIG9wKSB7XG4gICAgaWYgKG4gPiBNICYmIG9wID4gMCkge1xuICAgICAgcmV0dXJuIG47XG4gICAgfSBlbHNlIGlmIChuID4gTSkge1xuICAgICAgcmV0dXJuIG4gKyBvcDtcbiAgICB9IGVsc2UgaWYgKG4gPCBtICYmIG9wIDwgMCkge1xuICAgICAgcmV0dXJuIG47XG4gICAgfSBlbHNlIGlmIChuIDwgbSkge1xuICAgICAgcmV0dXJuIG4gKyBvcDtcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIG4gKyBvcDtcbiAgICB9XG4gIH0gLy9ibG9ja1xuXG5cbiAgQ2FudmFzQ29udHJvbHMuYmxvY2sgPSBibG9jaztcbiAgLyoqXHJcbiAgICogQ2FsY3VsYXRlIGRpc3RhbmNlIGJldHdlZW4gMiBwb2ludHNcclxuICAgKiBAcGFyYW0ge251bWJlcltdfSBYcyAtIFggY29vcmRpbmF0ZXNcclxuICAgKiBAcGFyYW0ge251bWJlcltdfSBZcyAtIFkgY29vcmRpbmF0ZXNcclxuICAgKiBAcmV0dXJucyB7bnVtYmVyfSBkaXN0YW5jZVxyXG4gICAqIEBmdW5jdGlvblxyXG4gICAqIEBpbm5lclxyXG4gICAqL1xuXG4gIGZ1bmN0aW9uIGRpc3QoWHMsIFlzKSB7XG4gICAgcmV0dXJuIE1hdGguc3FydChbWHNbMV0gLSBYc1swXSwgWXNbMV0gLSBZc1swXV0ubWFwKGZ1bmN0aW9uICh2KSB7XG4gICAgICByZXR1cm4gTWF0aC5wb3codiwgMik7XG4gICAgfSkucmVkdWNlKGZ1bmN0aW9uIChhY2MsIHYpIHtcbiAgICAgIHJldHVybiBhY2MgKyB2O1xuICAgIH0pKTtcbiAgfSAvL2Rpc3RcblxuXG4gIENhbnZhc0NvbnRyb2xzLmRpc3QgPSBkaXN0O1xuICAvKipcclxuICAgKiBDaGVja3MgaWYgcG9pbnRlciBpcyBpbnNpZGUgYW4gYXJlYVxyXG4gICAqIEBwYXJhbSB7bnVtYmVyW119IGJveCAtIHgseSxkeCxkeVxyXG4gICAqIEBwYXJhbSB7bnVtYmVyW119IHBvaW50IC0geCx5XHJcbiAgICogQHBhcmFtIHtudW1iZXJ9IHNlbnNpdGl2aXR5IC0gZXh0cmEgYm91bmRhcnlcclxuICAgKiBAcmV0dXJucyBib29sZWFuXHJcbiAgICogQGlubmVyXHJcbiAgICogQGZ1bmN0aW9uXHJcbiAgICovXG5cbiAgZnVuY3Rpb24gaXNXaXRoaW4oYm94LCBwb2ludCkge1xuICAgIHZhciBzZW5zaXRpdml0eSA9IGFyZ3VtZW50cy5sZW5ndGggPiAyICYmIGFyZ3VtZW50c1syXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzJdIDogLjU7XG4gICAgcmV0dXJuIGJveFswXSAtIHNlbnNpdGl2aXR5IDw9IHBvaW50WzBdICYmIGJveFswXSArIGJveFsyXSArIHNlbnNpdGl2aXR5ID49IHBvaW50WzBdICYmIGJveFsxXSAtIHNlbnNpdGl2aXR5IDw9IHBvaW50WzFdICYmIGJveFsxXSArIGJveFszXSArIHNlbnNpdGl2aXR5ID49IHBvaW50WzFdO1xuICB9IC8vaXNXaXRoaW5cblxuXG4gIENhbnZhc0NvbnRyb2xzLmlzV2l0aGluID0gaXNXaXRoaW47XG4gIC8qKlxyXG4gICAqIEEgaG9sZGVyIGZvciBhbGwgT3B0aW9uc1xyXG4gICAqIEBuYW1lc3BhY2VcclxuICAgKi9cblxuICB2YXIgT3B0cztcblxuICAoZnVuY3Rpb24gKE9wdHMpIHtcbiAgICB2YXIgVXNlQnV0dG9uO1xuXG4gICAgKGZ1bmN0aW9uIChVc2VCdXR0b24pIHtcbiAgICAgIFVzZUJ1dHRvbltVc2VCdXR0b25bXCJVU0VMRUZUXCJdID0gMV0gPSBcIlVTRUxFRlRcIjtcbiAgICAgIFVzZUJ1dHRvbltVc2VCdXR0b25bXCJVU0VSSUdIVFwiXSA9IDJdID0gXCJVU0VSSUdIVFwiO1xuICAgICAgVXNlQnV0dG9uW1VzZUJ1dHRvbltcIlVTRUJPVEhcIl0gPSAzXSA9IFwiVVNFQk9USFwiO1xuICAgIH0pKFVzZUJ1dHRvbiA9IE9wdHMuVXNlQnV0dG9uIHx8IChPcHRzLlVzZUJ1dHRvbiA9IHt9KSk7IC8vVXNlQnV0dG9uXG5cblxuICAgIHZhciBTY2FsZU1vZGU7XG5cbiAgICAoZnVuY3Rpb24gKFNjYWxlTW9kZSkge1xuICAgICAgU2NhbGVNb2RlW1NjYWxlTW9kZVtcIk5PUk1BTFwiXSA9IDFdID0gXCJOT1JNQUxcIjtcbiAgICAgIFNjYWxlTW9kZVtTY2FsZU1vZGVbXCJGUkVFU0NBTEVcIl0gPSAyXSA9IFwiRlJFRVNDQUxFXCI7XG4gICAgfSkoU2NhbGVNb2RlID0gT3B0cy5TY2FsZU1vZGUgfHwgKE9wdHMuU2NhbGVNb2RlID0ge30pKTsgLy9TY2FsZU1vZGVcblxuXG4gICAgdmFyIFBvc2l0aW9uO1xuXG4gICAgKGZ1bmN0aW9uIChQb3NpdGlvbikge1xuICAgICAgUG9zaXRpb25bUG9zaXRpb25bXCJGSVhFRFwiXSA9IDFdID0gXCJGSVhFRFwiO1xuICAgICAgUG9zaXRpb25bUG9zaXRpb25bXCJBQlNPTFVURVwiXSA9IDJdID0gXCJBQlNPTFVURVwiO1xuICAgICAgUG9zaXRpb25bUG9zaXRpb25bXCJVTlNDQUxBQkxFXCJdID0gNF0gPSBcIlVOU0NBTEFCTEVcIjtcbiAgICB9KShQb3NpdGlvbiA9IE9wdHMuUG9zaXRpb24gfHwgKE9wdHMuUG9zaXRpb24gPSB7fSkpOyAvL1Bvc2l0aW9uXG5cbiAgfSkoT3B0cyA9IENhbnZhc0NvbnRyb2xzLk9wdHMgfHwgKENhbnZhc0NvbnRyb2xzLk9wdHMgPSB7fSkpOyAvL09wdHNcblxuICAvKipcclxuICAgKiBBIGhvbGRlciBmb3IgYWxsIGVycm9yc1xyXG4gICAqIEBuYW1lc3BhY2VcclxuICAgKi9cblxuXG4gIHZhciBFcnJvcnM7XG5cbiAgKGZ1bmN0aW9uIChFcnJvcnMpIHtcbiAgICBFcnJvcnMuRU5PVENBTlYgPSBuZXcgVHlwZUVycm9yKFwiTm90IGFuIEhUTUxDYW52YXNFbGVtZW50LlwiKTtcbiAgICBFcnJvcnMuRU5PVENUWCA9IG5ldyBUeXBlRXJyb3IoXCJOb3QgYSBDYW52YXNSZW5kZXJpbmdDb250ZXh0MkQuXCIpO1xuICAgIEVycm9ycy5FTk9UTlVNQVJSMiA9IG5ldyBUeXBlRXJyb3IoXCJOb3QgYW4gQXJyYXkgb2YgMi1hdC1sZWFzdCBOdW1iZXJzLlwiKTtcbiAgICBFcnJvcnMuRU5PVE5VTSA9IG5ldyBUeXBlRXJyb3IoXCJOb3QgYSB2YWxpZCBOdW1iZXIuXCIpO1xuICAgIEVycm9ycy5FSVNBTFIgPSBuZXcgUmVmZXJlbmNlRXJyb3IoXCJPYmplY3QgaXMgYWxyZWFkeSByZWdpc3RlcmVkLlwiKTtcbiAgfSkoRXJyb3JzID0gQ2FudmFzQ29udHJvbHMuRXJyb3JzIHx8IChDYW52YXNDb250cm9scy5FcnJvcnMgPSB7fSkpOyAvL0Vycm9yc1xuXG4gIC8qKlxyXG4gICAqIEEgd3JhcHBlciBmb3IgdGhlIHRhcmdldGVkIGNhbnZhcyBlbGVtZW50XHJcbiAgICogQGNsYXNzXHJcbiAgICogQGltcGxlbWVudHMge09wdHMuQ29udHJvbGxhYmxlQ2FudmFzT3B0aW9uc31cclxuICAgKiBAcHJvcCB7SFRNTENhbnZhc0VsZW1lbnR9IHRhcmdldD1maXJzdENhbnZPY2N1ckluRG9jIC0gQm91bmQgY2FudmFzXHJcbiAgICogQHByb3Age0NhbnZhc1JlbmRlcmluZ0NvbnRleHQyRH0gY29udGV4dD89dGFyZ2V0LmdldENvbnRleHQoXCIyZFwiKSAtIFRoZSAyZCBjb250ZXh0IGNyZWF0ZWQgb3V0IG9mIGB0YXJnZXRgXHJcbiAgICogQHByb3Age251bWJlcltdfSB0cmFucz0wLDAgLSBUcmFuc2xhdGlvblxyXG4gICAqIEBwcm9wIHtudW1iZXJbXX0gc2NsPTEsMSAtIFNjYWxpbmdcclxuICAgKiBAcHJvcCB7bnVtYmVyW119IHBpbj89dGhpcy50YXJnZXQud2lkdGgvMix0aGlzLnRhcmdldC5oZWlnaHQvMiAtIFBzZXVkby1jZW50ZXJcclxuICAgKiBAcHJvcCB7bnVtYmVyW119IHRyYW5zQm91bmQ9LUluZmluaXR5LC1JbmZpbml0eSxJbmZpbml0eSxJbmZpbml0eSAtIE1heCB0cmFuc2xhdGlvbiBib3VuZGFyaWVzXHJcbiAgICogQHByb3Age2Jvb2xlYW59IGR5bmFtaWNUcmFuc0JvdW5kcz10cnVlIC0gdHJhbnNCb3VuZHMgZGVwZW5kIG9uIHNjYWxpbmdcclxuICAgKiBAcHJvcCB7Ym9vbGVhbn0gZHJhZ0VuYWJsZWQ9ZmFsc2UgLSBFbmFibGUgdHJhbnNsYXRpb24gb24gZHJhZ1xyXG4gICAqIEBwcm9wIHtib29sZWFufSBwaW5jaEVuYWJsZWQ9ZmFsc2UgLSBFbmFibGUgc2NhbGluZyBvbiAyLWZpbmdlciBwaW5jaCAoYm90aCBmaW5nZXJzIHNoYWxsIG1vdmUpXHJcbiAgICogQHByb3Age2Jvb2xlYW59IHdoZWVsRW5hYmxlZD1mYWxzZSAtIEVuYWJsZSBzY2FsaW5nIG9uIG1vdXNlIHdoZWVsXHJcbiAgICogQHByb3Age2Jvb2xlYW59IGtleXNFbmFibGVkPWZhbHNlIC0gRW5hYmxlIGtleWFib3JkIGV2ZW50cyBsaXN0ZW5lclxyXG4gICAqIEBwcm9wIHtib29sZWFufSBwYW5FbmFibGVkPWZhbHNlIC0gRW5hYmxlIHRyYW5zbGF0aW9uIGJhc2VkIG9uIG1vdXNlL2ZpbmdlciBkaXN0YW5jZSBmcm9tIHBpbiAocHNldWRvLWNlbnRlcilcclxuICAgKiBAcHJvcCB7Ym9vbGVhbn0gdGlsdEVuYWJsZWQ9ZmFsc2UgLSBFbmFibGUgdHJhbnNsYXRpb24gb24gZGV2aWNlIG1vdmVtZW50XHJcbiAgICogQHByb3Age2Jvb2xlYW59IGV2ZW50c1JldmVyc2VkPWZhbHNlIC0gVG9nZ2xlIHJldmVyc2Utb3BlcmF0aW9uc1xyXG4gICAqIEBwcm9wIHtPcHRzLlVzZUJ1dHRvbn0gdXNlQnV0dG9uPU9wdHMuVXNlQnV0dG9uLlVTRUxFRlQgLSBSZXNwb25kIHRvIGxlZnQtY2xpY2ssIHJpZ2h0IG9yIGJvdGhcclxuICAgKiBAcHJvcCB7bnVtYmVyW119IF9jb29yZGluYXRlcyAtIEN1cnJlbnQgZXZlbnQgY29vcmRpbmF0ZXNcclxuICAgKiBAcHJvcCB7bnVtYmVyfSB0cmFuc1NwZWVkPTEgLSBUcmFuc2xhdGlvbiBzcGVlZCBmYWN0b3JcclxuICAgKiBAcHJvcCB7bnVtYmVyfSBzY2xTcGVlZD0xIC0gU2NhbGluZyBzcGVlZCBmYWN0b3JcclxuICAgKiBAcHJvcCB7T3B0cy5Db250cm9sbGFibGVDYW52YXNBZGFwdGVyc30gX2FkYXB0cyAtIE1hcCBvZiBhbGwgY3VycmVudGx5IGF0dGFjaGVkIGNvbnRyb2wgZXZlbnQgYWRhcHRlcnNcclxuICAgKiBAcHJvcCB7b2JqZWN0fSBfdG91Y2hlcyAtIE1hcCBvZiBhbGwgY3VycmVudCB0b3VjaGVzXHJcbiAgICogQHByb3Age0NsYXNzfSBDYW52YXNCdXR0b24gLSBBIHdpZGdldC1tYWtpbmcgY2xhc3MgZm9yIGNhbnZhc1xyXG4gICAqIEBwcm9wIHtTZXQ8Q2FudmFzQnV0dG9uPn0gd2dldHMgLSBDYW52YXMgd2lkZ2V0c1xyXG4gICAqL1xuXG5cbiAgdmFyIENvbnRyb2xsYWJsZUNhbnZhcyA9XG4gIC8qI19fUFVSRV9fKi9cbiAgZnVuY3Rpb24gKCkge1xuICAgIC8qKlxyXG4gICAgICogQ29udHJvbGxhYmxlQ2FudmFzIGNvbnN0cnVjdG9yXHJcbiAgICAgKiBAcGFyYW0ge09wdHMuQ29udHJvbGxhYmxlQ2FudmFzT3B0aW9uc30gb3B0cz89Q29udHJvbGxhYmxlQ2FudmFzLmRlZmF1bHRPcHRzIC0gQ29udHJvbGxhYmxlQ2FudmFzIE9wdGlvbnNcclxuICAgICAqIEBjb25zdHJ1Y3RvclxyXG4gICAgICovXG4gICAgZnVuY3Rpb24gQ29udHJvbGxhYmxlQ2FudmFzKCkge1xuICAgICAgdmFyIG9wdHMgPSBhcmd1bWVudHMubGVuZ3RoID4gMCAmJiBhcmd1bWVudHNbMF0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1swXSA6IENvbnRyb2xsYWJsZUNhbnZhcy5kZWZhdWx0T3B0cztcblxuICAgICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIENvbnRyb2xsYWJsZUNhbnZhcyk7XG5cbiAgICAgIHRoaXMudHJhbnMgPSBbMCwgMF07XG4gICAgICB0aGlzLnNjbCA9IFsxLCAxXTtcbiAgICAgIHRoaXMudHJhbnNCb3VuZHMgPSBbLUluZmluaXR5LCAtSW5maW5pdHksIEluZmluaXR5LCBJbmZpbml0eV07XG4gICAgICB0aGlzLmR5bmFtaWNUcmFuc0JvdW5kcyA9IHRydWU7XG4gICAgICB0aGlzLnNjbEJvdW5kcyA9IFswLCAwLCBJbmZpbml0eSwgSW5maW5pdHldO1xuICAgICAgdGhpcy5kcmFnRW5hYmxlZCA9IGZhbHNlO1xuICAgICAgdGhpcy5waW5jaEVuYWJsZWQgPSBmYWxzZTtcbiAgICAgIHRoaXMud2hlZWxFbmFibGVkID0gZmFsc2U7XG4gICAgICB0aGlzLmtleXNFbmFibGVkID0gZmFsc2U7XG4gICAgICB0aGlzLnBhbkVuYWJsZWQgPSBmYWxzZTsgLy9PQlNcblxuICAgICAgdGhpcy50aWx0RW5hYmxlZCA9IGZhbHNlOyAvL09CU1xuXG4gICAgICB0aGlzLmV2ZW50c1JldmVyc2VkID0gZmFsc2U7XG4gICAgICB0aGlzLnVzZUJ1dHRvbiA9IE9wdHMuVXNlQnV0dG9uLlVTRUxFRlQ7XG4gICAgICB0aGlzLnNjYWxlTW9kZSA9IE9wdHMuU2NhbGVNb2RlLk5PUk1BTDtcbiAgICAgIHRoaXMudHJhbnNTcGVlZCA9IDE7XG4gICAgICB0aGlzLnNjbFNwZWVkID0gMTtcbiAgICAgIHRoaXMudG91Y2hTZW5zaXRpdml0eSA9IC41O1xuICAgICAgdGhpcy5jbGlja1NlbnNpdGl2aXR5ID0gODAwO1xuICAgICAgdGhpcy5fem9vbUNoYW5nZWQgPSBbZmFsc2UsIGZhbHNlXTtcbiAgICAgIHRoaXMuX21vYmlsZSA9IGZhbHNlO1xuICAgICAgdGhpcy5fcHJlc3NlZCA9IGZhbHNlO1xuICAgICAgdGhpcy5fY2xrdGltZSA9IDA7XG4gICAgICB0aGlzLl9jb29yZGluYXRlcyA9IFtdO1xuICAgICAgdGhpcy5fdG91Y2hlcyA9IFtdO1xuICAgICAgaW5oZXJpdChvcHRzLCBDb250cm9sbGFibGVDYW52YXMuZGVmYXVsdE9wdHMpO1xuXG4gICAgICBpZiAoIShvcHRzLnRhcmdldCBpbnN0YW5jZW9mIEhUTUxDYW52YXNFbGVtZW50KSkge1xuICAgICAgICB0aHJvdyBFcnJvcnMuRU5PVENBTlY7XG4gICAgICB9IGVsc2UgaWYgKFtvcHRzLnRyYW5zLCBvcHRzLnNjbCwgb3B0cy50cmFuc0JvdW5kcywgb3B0cy5zY2xCb3VuZHNdLnNvbWUoZnVuY3Rpb24gKGFycikge1xuICAgICAgICByZXR1cm4gIShhcnIgaW5zdGFuY2VvZiBBcnJheSB8fCBhcnIgaW5zdGFuY2VvZiBGbG9hdDMyQXJyYXkgfHwgYXJyIGluc3RhbmNlb2YgRmxvYXQ2NEFycmF5KSB8fCBhcnIubGVuZ3RoIDwgMiB8fCBBcnJheS5mcm9tKGFycikuc29tZShmdW5jdGlvbiAobnVtKSB7XG4gICAgICAgICAgcmV0dXJuIGlzTmFOKG51bSkgfHwgbnVtID09PSAnJztcbiAgICAgICAgfSk7XG4gICAgICB9KSkge1xuICAgICAgICB0aHJvdyBFcnJvcnMuRU5PVE5VTUFSUjI7XG4gICAgICB9XG5cbiAgICAgIGluaGVyaXQob3B0cy5fYWRhcHRzLCBDb250cm9sbGFibGVDYW52YXMuZGVmYXVsdE9wdHMuX2FkYXB0cyk7IC8vUE9TU0lCTEUgRVJST1JcblxuICAgICAgaWYgKG9wdHMucGluID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgb3B0cy5waW4gPSBbb3B0cy50YXJnZXQud2lkdGggLyAyLCBvcHRzLnRhcmdldC5oZWlnaHQgLyAyXTtcbiAgICAgIH0gZWxzZSBpZiAoIShvcHRzLnBpbiBpbnN0YW5jZW9mIEFycmF5IHx8IG9wdHMucGluIGluc3RhbmNlb2YgRmxvYXQzMkFycmF5IHx8IG9wdHMucGluIGluc3RhbmNlb2YgRmxvYXQ2NEFycmF5KSB8fCBvcHRzLnBpbi5sZW5ndGggPCAyIHx8IEFycmF5LmZyb20ob3B0cy5waW4pLnNvbWUoZnVuY3Rpb24gKG51bSkge1xuICAgICAgICByZXR1cm4gaXNOYU4obnVtKSB8fCBudW0gPT09ICcnO1xuICAgICAgfSkpIHtcbiAgICAgICAgdGhyb3cgRXJyb3JzLkVOT1ROVU1BUlIyO1xuICAgICAgfVxuXG4gICAgICB0aGlzLnRhcmdldCA9IG9wdHMudGFyZ2V0O1xuICAgICAgdGhpcy5jb250ZXh0ID0gdGhpcy50YXJnZXQuZ2V0Q29udGV4dChcIjJkXCIpO1xuICAgICAgdGhpcy5rZXliaW5kcyA9IG5ldyBLZXlCaW5kKHRoaXMudGFyZ2V0LCBvcHRzLmtleXNFbmFibGVkKTtcbiAgICAgIHRoaXMuX2FkYXB0cyA9IHt9O1xuICAgICAgaW5oZXJpdCh0aGlzLl9hZGFwdHMsIG9wdHMuX2FkYXB0cyk7XG4gICAgICB0aGlzLnRyYW5zU3BlZWQgPSBvcHRzLnRyYW5zU3BlZWQgKiAxO1xuICAgICAgdGhpcy5zY2xTcGVlZCA9IG9wdHMuc2NsU3BlZWQgKiAxO1xuICAgICAgdGhpcy50b3VjaFNlbnNpdGl2aXR5ID0gb3B0cy50b3VjaFNlbnNpdGl2aXR5ICogMTtcbiAgICAgIHRoaXMuY2xpY2tTZW5zaXRpdml0eSA9IG9wdHMuY2xpY2tTZW5zaXRpdml0eSAqIDE7XG4gICAgICB0aGlzLnVzZUJ1dHRvbiA9IG9wdHMudXNlQnV0dG9uIHwgMDtcbiAgICAgIHRoaXMuc2NhbGVNb2RlID0gb3B0cy5zY2FsZU1vZGUgfCAwO1xuICAgICAgdGhpcy53Z2V0cyA9IG5ldyBTZXQob3B0cy53Z2V0cyk7XG4gICAgICB0aGlzLnRyYW5zID0gQXJyYXkuZnJvbShvcHRzLnRyYW5zKS5tYXAoTnVtYmVyKTtcbiAgICAgIHRoaXMuc2NsID0gQXJyYXkuZnJvbShvcHRzLnNjbCkubWFwKE51bWJlcik7XG4gICAgICB0aGlzLnBpbiA9IEFycmF5LmZyb20ob3B0cy5waW4pLm1hcChOdW1iZXIpO1xuICAgICAgdGhpcy50cmFuc0JvdW5kcyA9IEFycmF5LmZyb20ob3B0cy50cmFuc0JvdW5kcykubWFwKE51bWJlcik7IC8vIHgsIHksIFgsIFlcblxuICAgICAgdGhpcy5zY2xCb3VuZHMgPSBBcnJheS5mcm9tKG9wdHMuc2NsQm91bmRzKS5tYXAoTnVtYmVyKTsgLy8geCwgeSwgWCwgWVxuXG4gICAgICB0aGlzLmR5bmFtaWNUcmFuc0JvdW5kcyA9ICEhb3B0cy5keW5hbWljVHJhbnNCb3VuZHM7XG4gICAgICB0aGlzLmRyYWdFbmFibGVkID0gISFvcHRzLmRyYWdFbmFibGVkO1xuICAgICAgdGhpcy5waW5jaEVuYWJsZWQgPSAhIW9wdHMucGluY2hFbmFibGVkO1xuICAgICAgdGhpcy53aGVlbEVuYWJsZWQgPSAhIW9wdHMud2hlZWxFbmFibGVkO1xuICAgICAgdGhpcy5wYW5FbmFibGVkID0gISFvcHRzLnBhbkVuYWJsZWQ7XG4gICAgICB0aGlzLnRpbHRFbmFibGVkID0gISFvcHRzLnRpbHRFbmFibGVkO1xuICAgICAgdGhpcy5ldmVudHNSZXZlcnNlZCA9ICEhb3B0cy5ldmVudHNSZXZlcnNlZDtcbiAgICAgIHRoaXMuX3ByZXNzZWQgPSBmYWxzZTtcbiAgICAgIHRoaXMuX2Nvb3JkaW5hdGVzID0gWzAsIDBdO1xuICAgICAgdGhpcy5fdG91Y2hlcyA9IFtdO1xuICAgICAgdGhpcy5fbW9iaWxlID0gQ29udHJvbGxhYmxlQ2FudmFzLmlzTW9iaWxlO1xuICAgICAgaWYgKCFDb250cm9sbGFibGVDYW52YXMuX2xpbmVwaXgpIENvbnRyb2xsYWJsZUNhbnZhcy5fbGluZXBpeCA9IENvbnRyb2xsYWJsZUNhbnZhcy5saW5lVG9QaXg7XG4gICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcy50YXJnZXQsIFwiX2NjX1wiLCB7XG4gICAgICAgIHZhbHVlOiB0aGlzLFxuICAgICAgICBlbnVtZXJhYmxlOiBmYWxzZSxcbiAgICAgICAgd3JpdGFibGU6IGZhbHNlLFxuICAgICAgICBjb25maWd1cmFibGU6IHRydWVcbiAgICAgIH0pO1xuICAgIH0gLy9jdG9yXG5cblxuICAgIF9jcmVhdGVDbGFzcyhDb250cm9sbGFibGVDYW52YXMsIFt7XG4gICAgICBrZXk6IFwiaGFuZGxlXCIsXG4gICAgICAvL2ctbWF4ICBPQlNcblxuICAgICAgLyoqXHJcbiAgICAgICAqIEVuYWJsZSBjb250cm9sc1xyXG4gICAgICAgKiBAbWV0aG9kXHJcbiAgICAgICAqL1xuICAgICAgdmFsdWU6IGZ1bmN0aW9uIGhhbmRsZSgpIHtcbiAgICAgICAgdGhpcy5fbW9iaWxlID8gdGhpcy5fbW9iaWxlQWRhcHQoKSA6IHRoaXMuX3BjQWRhcHQoKTtcbiAgICAgIH0gLy9oYW5kbGVcblxuICAgICAgLyoqXHJcbiAgICAgICAqIEFkZCAoL2NyZWF0ZSkgYSB3aWRnZXQgaW4gdGhlIGNvbnRyb2xsZXJcclxuICAgICAgICogQHBhcmFtIHtDb250cm9sbGFibGVDYW52YXMuQ2FudmFzQnV0dG9ufE9wdHMuQ2FudmFzQnV0dG9uT3B0aW9uc30gZGF0YSAtIGNvbnN0cnVjdG9yIG9wdGlvbnNcclxuICAgICAgICogQHJldHVybiB7Q29udHJvbGxhYmxlQ2FudmFzLkNhbnZhc0J1dHRvbn0gdGhlIHdpZGdldFxyXG4gICAgICAgKi9cblxuICAgIH0sIHtcbiAgICAgIGtleTogXCJhZGRXaWRnZXRcIixcbiAgICAgIHZhbHVlOiBmdW5jdGlvbiBhZGRXaWRnZXQoZGF0YSkge1xuICAgICAgICBpZiAoZGF0YSBpbnN0YW5jZW9mIENhbnZhc0J1dHRvbiAmJiAhdGhpcy53Z2V0cy5oYXMoZGF0YSkpIHtcbiAgICAgICAgICBkYXRhLnBhcmVudCA9IHRoaXM7XG4gICAgICAgICAgdGhpcy53Z2V0cy5hZGQoZGF0YSk7XG4gICAgICAgIH0gZWxzZSBpZiAoIShkYXRhIGluc3RhbmNlb2YgQ2FudmFzQnV0dG9uKSkge1xuICAgICAgICAgIGRhdGEgPSBuZXcgQ29udHJvbGxhYmxlQ2FudmFzLkNhbnZhc0J1dHRvbihkYXRhKTtcbiAgICAgICAgICBkYXRhLnBhcmVudCA9IHRoaXM7XG4gICAgICAgICAgdGhpcy53Z2V0cy5hZGQoZGF0YSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgdGhyb3cgRXJyb3JzLkVJU0FMUjtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiBkYXRhO1xuICAgICAgfSAvL2FkZFdpZGdldFxuXG4gICAgICAvKipcclxuICAgICAgICogUmUtYXBwbHkgaW50ZXJuYWwgdHJhbnNmb3JtYXRpb25zXHJcbiAgICAgICAqIEBtZXRob2RcclxuICAgICAgICogQHJldHVybnMge0NvbnRyb2xsYWJsZUNhbnZhc30gdGhpcyAtIEZvciBtZXRob2QgY2hhaW5pbmdcclxuICAgICAgICovXG5cbiAgICB9LCB7XG4gICAgICBrZXk6IFwicmV0cmFuc2Zvcm1cIixcbiAgICAgIHZhbHVlOiBmdW5jdGlvbiByZXRyYW5zZm9ybSgpIHtcbiAgICAgICAgdGhpcy5jb250ZXh0LnNldFRyYW5zZm9ybSgxLCAwLCAwLCAxLCAwLCAwKTsgLy9TS0VXL1JPVEFURSBOT1QgSU1QTEVNRU5URUQhIVxuXG4gICAgICAgIHRoaXMuY29udGV4dC50cmFuc2xhdGUodGhpcy50cmFuc1swXSwgdGhpcy50cmFuc1sxXSk7XG4gICAgICAgIHRoaXMuY29udGV4dC5zY2FsZSh0aGlzLnNjbFswXSwgdGhpcy5zY2xbMV0pO1xuICAgICAgICByZXR1cm4gdGhpcztcbiAgICAgIH0gLy9yZXRyYW5zZm9ybVxuXG4gICAgICAvKipcclxuICAgICAgICogSW50ZXJtZWRpYXRlIHRyYW5zbGF0aW9uIGZ1bmN0aW9uIGZvciBpY29uaWMgdHJhbnNsYXRlIGJlZm9yZSB0aGUgcmVhbFxyXG4gICAgICAgKiBAbWV0aG9kXHJcbiAgICAgICAqIEBwYXJhbSB7bnVtYmVyfSB4PTAgLSB4IHRyYW5zbGF0aW9uXHJcbiAgICAgICAqIEBwYXJhbSB7bnVtYmVyfSB5PTAgLSB5IHRyYW5zbGF0aW9uXHJcbiAgICAgICAqIEBwYXJhbSB7Ym9vbGVhbn0gYWJzPz1mYWxzZSAtIGFic29sdXRlIHRyYW5zbGF0aW9uIG9yIHJlbGF0aXZlIHRvIGN1cnJlbnRcclxuICAgICAgICogQHJldHVybnMge251bWJlcltdfSBSZXR1cm5zIGN1cnJlbnQgdG90YWwgdHJhbnNsYXRpb25cclxuICAgICAgICovXG5cbiAgICB9LCB7XG4gICAgICBrZXk6IFwidHJhbnNsYXRlXCIsXG4gICAgICB2YWx1ZTogZnVuY3Rpb24gdHJhbnNsYXRlKCkge1xuICAgICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuXG4gICAgICAgIHZhciB4ID0gYXJndW1lbnRzLmxlbmd0aCA+IDAgJiYgYXJndW1lbnRzWzBdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMF0gOiAwO1xuICAgICAgICB2YXIgeSA9IGFyZ3VtZW50cy5sZW5ndGggPiAxICYmIGFyZ3VtZW50c1sxXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzFdIDogMDtcbiAgICAgICAgdmFyIGFicyA9IGFyZ3VtZW50cy5sZW5ndGggPiAyICYmIGFyZ3VtZW50c1syXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzJdIDogZmFsc2U7XG4gICAgICAgIHZhciBieSA9IFt4LCB5XS5tYXAoTnVtYmVyKTtcbiAgICAgICAgaWYgKHRoaXMuZXZlbnRzUmV2ZXJzZWQpIGJ5ID0gYnkubWFwKGZ1bmN0aW9uIChiKSB7XG4gICAgICAgICAgcmV0dXJuIC1iO1xuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIHRoaXMudHJhbnMgPSB0aGlzLnRyYW5zLm1hcChmdW5jdGlvbiAodHJuLCBpZHgpIHtcbiAgICAgICAgICByZXR1cm4gYm91bmQoTnVtYmVyKCFhYnMgPyB0cm4gKyBieVtpZHhdIDogYnlbaWR4XSksIF90aGlzLmR5bmFtaWNUcmFuc0JvdW5kcyA/IF90aGlzLnRyYW5zQm91bmRzW2lkeF0gKiBfdGhpcy5zY2xbaWR4XSA6IF90aGlzLnRyYW5zQm91bmRzW2lkeF0sIF90aGlzLmR5bmFtaWNUcmFuc0JvdW5kcyA/IF90aGlzLnRyYW5zQm91bmRzW2lkeCArIDJdICogX3RoaXMuc2NsW2lkeF0gOiBfdGhpcy50cmFuc0JvdW5kc1tpZHggKyAyXSk7XG4gICAgICAgIH0pO1xuICAgICAgfSAvL3RyYW5zbGF0ZVxuXG4gICAgICAvKipcclxuICAgICAgICogSW50ZXJtZWRpYXRlIHNjYWxpbmcgZnVuY3Rpb24gZm9yIGljb25pYyBzY2FsZSBiZWZvcmUgdGhlIHJlYWxcclxuICAgICAgICogQG1ldGhvZFxyXG4gICAgICAgKiBAcGFyYW0ge251bWJlcn0geD0xIC0geCBzY2FsZVxyXG4gICAgICAgKiBAcGFyYW0ge251bWJlcn0geT14IC0geSBzY2FsZVxyXG4gICAgICAgKiBAcGFyYW0ge2Jvb2xlYW59IGFicz89ZmFsc2UgLSBhYnNvbHV0ZSBzY2FsZSBvciByZWxhdGl2ZSB0byBjdXJyZW50XHJcbiAgICAgICAqIEByZXR1cm5zIHtudW1iZXJbXX0gUmV0dXJucyBjdXJyZW50IHRvdGFsIHNjYWxpbmdcclxuICAgICAgICovXG5cbiAgICB9LCB7XG4gICAgICBrZXk6IFwic2NhbGVcIixcbiAgICAgIHZhbHVlOiBmdW5jdGlvbiBzY2FsZSgpIHtcbiAgICAgICAgdmFyIF90aGlzMiA9IHRoaXM7XG5cbiAgICAgICAgdmFyIHggPSBhcmd1bWVudHMubGVuZ3RoID4gMCAmJiBhcmd1bWVudHNbMF0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1swXSA6IDE7XG4gICAgICAgIHZhciB5ID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgJiYgYXJndW1lbnRzWzFdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMV0gOiB4O1xuICAgICAgICB2YXIgYWJzID0gYXJndW1lbnRzLmxlbmd0aCA+IDIgJiYgYXJndW1lbnRzWzJdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMl0gOiBmYWxzZTtcbiAgICAgICAgdmFyIGJ5ID0gW3gsIHldLm1hcChOdW1iZXIpO1xuICAgICAgICBpZiAodGhpcy5ldmVudHNSZXZlcnNlZCkgYnkgPSBieS5tYXAoZnVuY3Rpb24gKGIpIHtcbiAgICAgICAgICByZXR1cm4gLWI7XG4gICAgICAgIH0pO1xuXG4gICAgICAgIGlmICghYWJzKSB7XG4gICAgICAgICAgdmFyIG5zY2wgPSB0aGlzLnNjbC5tYXAoZnVuY3Rpb24gKHNjbCwgaWR4KSB7XG4gICAgICAgICAgICByZXR1cm4gc2NsICogYnlbaWR4XTtcbiAgICAgICAgICB9KTtcbiAgICAgICAgICBuc2NsID0gW25zY2xbMF0gLSB0aGlzLnNjbFswXSwgbnNjbFsxXSAtIHRoaXMuc2NsWzFdXTtcbiAgICAgICAgICB0aGlzLl96b29tQ2hhbmdlZCA9IFt0aGlzLnNjbFswXSAhPT0gYmxvY2sodGhpcy5zY2xbMF0sIHRoaXMuc2NsQm91bmRzWzBdLCB0aGlzLnNjbEJvdW5kc1syXSwgbnNjbFswXSksIHRoaXMuc2NsWzFdICE9PSBibG9jayh0aGlzLnNjbFsxXSwgdGhpcy5zY2xCb3VuZHNbMV0sIHRoaXMuc2NsQm91bmRzWzNdLCBuc2NsWzFdKV07XG4gICAgICAgICAgcmV0dXJuIHRoaXMuc2NsID0gW2Jsb2NrKHRoaXMuc2NsWzBdLCB0aGlzLnNjbEJvdW5kc1swXSwgdGhpcy5zY2xCb3VuZHNbMl0sIG5zY2xbMF0pLCBibG9jayh0aGlzLnNjbFsxXSwgdGhpcy5zY2xCb3VuZHNbMV0sIHRoaXMuc2NsQm91bmRzWzNdLCBuc2NsWzFdKV07XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgdGhpcy5fem9vbUNoYW5nZWQgPSBbdGhpcy5zY2xbMF0gIT09IGJvdW5kKHRoaXMuc2NsWzBdLCB0aGlzLnNjbEJvdW5kc1swXSwgdGhpcy5zY2xCb3VuZHNbMl0pLCB0aGlzLnNjbFsxXSAhPT0gYm91bmQodGhpcy5zY2xbMV0sIHRoaXMuc2NsQm91bmRzWzFdLCB0aGlzLnNjbEJvdW5kc1szXSldO1xuICAgICAgICAgIHJldHVybiB0aGlzLnNjbCA9IHRoaXMuc2NsLm1hcChmdW5jdGlvbiAoc2NsLCBpZHgpIHtcbiAgICAgICAgICAgIHJldHVybiBib3VuZChzY2wgKiBieVtpZHhdLCBfdGhpczIuc2NsQm91bmRzW2lkeF0sIF90aGlzMi5zY2xCb3VuZHNbaWR4ICsgMl0pO1xuICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICB9IC8vc2NhbGVcblxuICAgIH0sIHtcbiAgICAgIGtleTogXCJfbW9iaWxlQWRhcHRcIixcbiAgICAgIHZhbHVlOiBmdW5jdGlvbiBfbW9iaWxlQWRhcHQoKSB7XG4gICAgICAgIHZhciBfdGhpczMgPSB0aGlzO1xuXG4gICAgICAgIGlmICghKHRoaXMuX2FkYXB0cy5kcmFnIHx8IHRoaXMuX2FkYXB0cy5waW5jaCkgJiYgdGhpcy5kcmFnRW5hYmxlZCkge1xuICAgICAgICAgIHRoaXMudGFyZ2V0LmFkZEV2ZW50TGlzdGVuZXIoXCJ0b3VjaHN0YXJ0XCIsIGZ1bmN0aW9uIChlKSB7XG4gICAgICAgICAgICByZXR1cm4gQ29udHJvbGxhYmxlQ2FudmFzLmRyYWdNb2JpbGVTdGFydChlLCBfdGhpczMpO1xuICAgICAgICAgIH0sIHtcbiAgICAgICAgICAgIHBhc3NpdmU6IGZhbHNlXG4gICAgICAgICAgfSk7XG4gICAgICAgICAgdGhpcy50YXJnZXQuYWRkRXZlbnRMaXN0ZW5lcihcInRvdWNobW92ZVwiLCB0aGlzLl9hZGFwdHMucGluY2ggPSB0aGlzLl9hZGFwdHMuZHJhZyA9IGZ1bmN0aW9uIChlKSB7XG4gICAgICAgICAgICByZXR1cm4gQ29udHJvbGxhYmxlQ2FudmFzLmRyYWdNb2JpbGVNb3ZlKGUsIF90aGlzMyk7XG4gICAgICAgICAgfSwge1xuICAgICAgICAgICAgcGFzc2l2ZTogZmFsc2VcbiAgICAgICAgICB9KTtcbiAgICAgICAgICB0aGlzLnRhcmdldC5hZGRFdmVudExpc3RlbmVyKFwidG91Y2hlbmRcIiwgZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgICAgIHJldHVybiBDb250cm9sbGFibGVDYW52YXMuZHJhZ01vYmlsZUVuZChlLCBfdGhpczMpO1xuICAgICAgICAgIH0sIHtcbiAgICAgICAgICAgIHBhc3NpdmU6IGZhbHNlXG4gICAgICAgICAgfSk7XG4gICAgICAgICAgdGhpcy50YXJnZXQuYWRkRXZlbnRMaXN0ZW5lcihcInRvdWNoY2FuY2VsXCIsIGZ1bmN0aW9uIChlKSB7XG4gICAgICAgICAgICByZXR1cm4gQ29udHJvbGxhYmxlQ2FudmFzLmRyYWdNb2JpbGVFbmQoZSwgX3RoaXMzKTtcbiAgICAgICAgICB9LCB7XG4gICAgICAgICAgICBwYXNzaXZlOiBmYWxzZVxuICAgICAgICAgIH0pO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKCF0aGlzLl9hZGFwdHMudGlsdCAmJiB0aGlzLnRpbHRFbmFibGVkKSB7Ly9UT0RPXG4gICAgICAgIH1cbiAgICAgIH0gLy9fbW9iaWxlQWRhcHRcblxuICAgIH0sIHtcbiAgICAgIGtleTogXCJfcGNBZGFwdFwiLFxuICAgICAgdmFsdWU6IGZ1bmN0aW9uIF9wY0FkYXB0KCkge1xuICAgICAgICB2YXIgX3RoaXM0ID0gdGhpcztcblxuICAgICAgICBpZiAoISh0aGlzLl9hZGFwdHMuZHJhZyB8fCB0aGlzLl9hZGFwdHMuY2xpY2spICYmIHRoaXMuZHJhZ0VuYWJsZWQpIHtcbiAgICAgICAgICB0aGlzLnRhcmdldC5hZGRFdmVudExpc3RlbmVyKFwibW91c2Vtb3ZlXCIsIHRoaXMuX2FkYXB0cy5kcmFnID0gZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgICAgIHJldHVybiBDb250cm9sbGFibGVDYW52YXMuZHJhZ1BDKGUsIF90aGlzNCk7XG4gICAgICAgICAgfSk7XG4gICAgICAgICAgdGhpcy50YXJnZXQuYWRkRXZlbnRMaXN0ZW5lcihcIm1vdXNlZG93blwiLCBmdW5jdGlvbiAoZSkge1xuICAgICAgICAgICAgX3RoaXM0Ll9jbGt0aW1lID0gRGF0ZS5ub3coKTtcbiAgICAgICAgICAgIF90aGlzNC5fcHJlc3NlZCA9IHRydWU7XG4gICAgICAgICAgfSk7XG4gICAgICAgICAgdGhpcy50YXJnZXQuYWRkRXZlbnRMaXN0ZW5lcihcIm1vdXNldXBcIiwgdGhpcy5fYWRhcHRzLmNsaWNrID0gZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgICAgIHJldHVybiBDb250cm9sbGFibGVDYW52YXMuY2xpY2tQQyhlLCBfdGhpczQpO1xuICAgICAgICAgIH0pOyAvL0B0cy1pZ25vcmVcblxuICAgICAgICAgIHRoaXMudGFyZ2V0LmFkZEV2ZW50TGlzdGVuZXIoXCJtb3VzZW91dFwiLCBmdW5jdGlvbiAoZSkge1xuICAgICAgICAgICAgcmV0dXJuIF90aGlzNC5fYWRhcHRzLmNsaWNrKGUpO1xuICAgICAgICAgIH0pO1xuICAgICAgICAgIGlmICgodGhpcy51c2VCdXR0b24gJiBPcHRzLlVzZUJ1dHRvbi5VU0VSSUdIVCkgPT09IE9wdHMuVXNlQnV0dG9uLlVTRVJJR0hUKSB0aGlzLnRhcmdldC5hZGRFdmVudExpc3RlbmVyKFwiY29udGV4dG1lbnVcIiwgZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgICAgIHJldHVybiBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgfSwge1xuICAgICAgICAgICAgY2FwdHVyZTogdHJ1ZSxcbiAgICAgICAgICAgIHBhc3NpdmU6IGZhbHNlXG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoIXRoaXMuX2FkYXB0cy53aGVlbCAmJiB0aGlzLndoZWVsRW5hYmxlZCkge1xuICAgICAgICAgIHRoaXMudGFyZ2V0LmFkZEV2ZW50TGlzdGVuZXIoXCJ3aGVlbFwiLCB0aGlzLl9hZGFwdHMud2hlZWwgPSBmdW5jdGlvbiAoZSkge1xuICAgICAgICAgICAgcmV0dXJuIENvbnRyb2xsYWJsZUNhbnZhcy53aGVlbChlLCBfdGhpczQpO1xuICAgICAgICAgIH0pO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKCF0aGlzLl9hZGFwdHMudGlsdCAmJiB0aGlzLnRpbHRFbmFibGVkKSB7Ly9UT0RPXG4gICAgICAgIH1cbiAgICAgIH0gLy9fcGNBZGFwdFxuXG4gICAgfSwge1xuICAgICAga2V5OiBcImdldENvb3Jkc1wiLFxuICAgICAgLy93aGVlbFxuXG4gICAgICAvKipcclxuICAgICAgICogR2V0IHNjcmVlbi1lcXVpdmFsZW50IGNvb3JkaW5hdGVzIHRoYXQgYnlwYXNzIHRyYW5zZm9ybWF0aW9ucy5cclxuICAgICAgICogQG1ldGhvZFxyXG4gICAgICAgKiBAcmV0dXJucyB7bnVtYmVyW119XHJcbiAgICAgICAqL1xuICAgICAgdmFsdWU6IGZ1bmN0aW9uIGdldENvb3JkcygpIHtcbiAgICAgICAgdmFyIF90aGlzNSA9IHRoaXM7XG5cbiAgICAgICAgcmV0dXJuIHRoaXMuX2Nvb3JkaW5hdGVzLm1hcChmdW5jdGlvbiAoYywgaWR4KSB7XG4gICAgICAgICAgcmV0dXJuIChjIC0gX3RoaXM1LnRyYW5zW2lkeF0pIC8gX3RoaXM1LnNjbFtpZHhdO1xuICAgICAgICB9KTtcbiAgICAgIH0gLy9nZXRDb29yZHNcblxuICAgIH0sIHtcbiAgICAgIGtleTogXCJyYXRpb1wiLFxuICAgICAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnRhcmdldC53aWR0aCAvIHRoaXMudGFyZ2V0LmhlaWdodDtcbiAgICAgIH0gLy9nLXJhdGlvICBPQlNcblxuICAgIH0sIHtcbiAgICAgIGtleTogXCJtaW5cIixcbiAgICAgIGdldDogZnVuY3Rpb24gZ2V0KCkge1xuICAgICAgICByZXR1cm4gTWF0aC5taW4odGhpcy50YXJnZXQud2lkdGgsIHRoaXMudGFyZ2V0LmhlaWdodCk7XG4gICAgICB9IC8vZy1taW5cblxuICAgIH0sIHtcbiAgICAgIGtleTogXCJtYXhcIixcbiAgICAgIGdldDogZnVuY3Rpb24gZ2V0KCkge1xuICAgICAgICByZXR1cm4gTWF0aC5tYXgodGhpcy50YXJnZXQud2lkdGgsIHRoaXMudGFyZ2V0LmhlaWdodCk7XG4gICAgICB9XG4gICAgfV0sIFt7XG4gICAgICBrZXk6IFwiY2xpY2tQQ1wiLFxuICAgICAgdmFsdWU6IGZ1bmN0aW9uIGNsaWNrUEMoZXZlbnQsIGNjKSB7XG4gICAgICAgIGlmIChEYXRlLm5vdygpIC0gY2MuX2Nsa3RpbWUgPD0gY2MuY2xpY2tTZW5zaXRpdml0eSkge1xuICAgICAgICAgIHZhciBjb29yZHMgPSBbKGV2ZW50LmNsaWVudFggLSBjYy50YXJnZXQub2Zmc2V0TGVmdCAtIGNjLnRyYW5zWzBdKSAvIGNjLnNjbFswXSwgKGV2ZW50LmNsaWVudFkgLSBjYy50YXJnZXQub2Zmc2V0VG9wIC0gY2MudHJhbnNbMV0pIC8gY2Muc2NsWzFdXSxcbiAgICAgICAgICAgICAgc29ydGVkID0gQXJyYXkuZnJvbShjYy53Z2V0cy5lbnRyaWVzKCkpLm1hcChmdW5jdGlvbiAocykge1xuICAgICAgICAgICAgcmV0dXJuIHNbMV07XG4gICAgICAgICAgfSkuc29ydChmdW5jdGlvbiAoYSwgYikge1xuICAgICAgICAgICAgcmV0dXJuIGIuX2lkIC0gYS5faWQ7XG4gICAgICAgICAgfSksXG4gICAgICAgICAgICAgIHJldCA9IGZhbHNlO1xuICAgICAgICAgIHZhciBfaXRlcmF0b3JOb3JtYWxDb21wbGV0aW9uID0gdHJ1ZTtcbiAgICAgICAgICB2YXIgX2RpZEl0ZXJhdG9yRXJyb3IgPSBmYWxzZTtcbiAgICAgICAgICB2YXIgX2l0ZXJhdG9yRXJyb3IgPSB1bmRlZmluZWQ7XG5cbiAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgZm9yICh2YXIgX2l0ZXJhdG9yID0gc29ydGVkW1N5bWJvbC5pdGVyYXRvcl0oKSwgX3N0ZXA7ICEoX2l0ZXJhdG9yTm9ybWFsQ29tcGxldGlvbiA9IChfc3RlcCA9IF9pdGVyYXRvci5uZXh0KCkpLmRvbmUpOyBfaXRlcmF0b3JOb3JtYWxDb21wbGV0aW9uID0gdHJ1ZSkge1xuICAgICAgICAgICAgICB2YXIgYnV0dCA9IF9zdGVwLnZhbHVlO1xuICAgICAgICAgICAgICBidXR0LmVuYWJsZWQgJiYgYnV0dC5faXNPbihjb29yZHMpICYmIChyZXQgPSBidXR0LmNsaWNrKGNvb3JkcykpO1xuICAgICAgICAgICAgICBpZiAocmV0KSBicmVhaztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgICAgICAgIF9kaWRJdGVyYXRvckVycm9yID0gdHJ1ZTtcbiAgICAgICAgICAgIF9pdGVyYXRvckVycm9yID0gZXJyO1xuICAgICAgICAgIH0gZmluYWxseSB7XG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICBpZiAoIV9pdGVyYXRvck5vcm1hbENvbXBsZXRpb24gJiYgX2l0ZXJhdG9yLnJldHVybiAhPSBudWxsKSB7XG4gICAgICAgICAgICAgICAgX2l0ZXJhdG9yLnJldHVybigpO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9IGZpbmFsbHkge1xuICAgICAgICAgICAgICBpZiAoX2RpZEl0ZXJhdG9yRXJyb3IpIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBfaXRlcmF0b3JFcnJvcjtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIGNjLl9jbGt0aW1lID0gMDtcbiAgICAgICAgY2MuX3ByZXNzZWQgPSBmYWxzZTtcbiAgICAgIH0gLy9jbGlja1BDXG5cbiAgICB9LCB7XG4gICAgICBrZXk6IFwiZHJhZ1BDXCIsXG4gICAgICB2YWx1ZTogZnVuY3Rpb24gZHJhZ1BDKGV2ZW50LCBjYykge1xuICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICB2YXIgY29vcmRzID0gW2V2ZW50LmNsaWVudFggLSBjYy50YXJnZXQub2Zmc2V0TGVmdCwgZXZlbnQuY2xpZW50WSAtIGNjLnRhcmdldC5vZmZzZXRUb3BdLFxuICAgICAgICAgICAgcmVsID0gW10sXG4gICAgICAgICAgICByZXQgPSBmYWxzZTtcbiAgICAgICAgY2MuX2Nvb3JkaW5hdGVzID0gY29vcmRzO1xuXG4gICAgICAgIGlmICgoY2MudXNlQnV0dG9uICYgT3B0cy5Vc2VCdXR0b24uVVNFUklHSFQpICE9PSBPcHRzLlVzZUJ1dHRvbi5VU0VSSUdIVCAmJiAoXCJidXR0b25zXCIgaW4gZXZlbnQgJiYgKGV2ZW50LmJ1dHRvbnMgJiAyKSA9PT0gMiB8fCBcIndoaWNoXCIgaW4gZXZlbnQgJiYgZXZlbnQud2hpY2ggPT09IDMgfHwgXCJidXR0b25cIiBpbiBldmVudCAmJiBldmVudC5idXR0b24gPT09IDIpIHx8IChjYy51c2VCdXR0b24gJiBPcHRzLlVzZUJ1dHRvbi5VU0VSSUdIVCkgPT09IE9wdHMuVXNlQnV0dG9uLlVTRVJJR0hUICYmIChjYy51c2VCdXR0b24gJiBPcHRzLlVzZUJ1dHRvbi5VU0VCT1RIKSAhPT0gT3B0cy5Vc2VCdXR0b24uVVNFQk9USCAmJiBcImJ1dHRvbnNcIiBpbiBldmVudCAmJiAoZXZlbnQuYnV0dG9ucyAmIDIpICE9PSAyICYmIFwid2hpY2hcIiBpbiBldmVudCAmJiBldmVudC53aGljaCAhPT0gMyAmJiBcImJ1dHRvblwiIGluIGV2ZW50ICYmIGV2ZW50LmJ1dHRvbiAhPT0gMikge1xuICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChjYy5fcHJlc3NlZCkge1xuICAgICAgICAgIGNjLl9jbGt0aW1lID0gMDtcbiAgICAgICAgICBjYy50cmFuc2xhdGUoZXZlbnQubW92ZW1lbnRYICogY2MudHJhbnNTcGVlZCwgZXZlbnQubW92ZW1lbnRZICogY2MudHJhbnNTcGVlZCk7XG4gICAgICAgIH1cblxuICAgICAgICB2YXIgX2l0ZXJhdG9yTm9ybWFsQ29tcGxldGlvbjIgPSB0cnVlO1xuICAgICAgICB2YXIgX2RpZEl0ZXJhdG9yRXJyb3IyID0gZmFsc2U7XG4gICAgICAgIHZhciBfaXRlcmF0b3JFcnJvcjIgPSB1bmRlZmluZWQ7XG5cbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICBmb3IgKHZhciBfaXRlcmF0b3IyID0gY2Mud2dldHNbU3ltYm9sLml0ZXJhdG9yXSgpLCBfc3RlcDI7ICEoX2l0ZXJhdG9yTm9ybWFsQ29tcGxldGlvbjIgPSAoX3N0ZXAyID0gX2l0ZXJhdG9yMi5uZXh0KCkpLmRvbmUpOyBfaXRlcmF0b3JOb3JtYWxDb21wbGV0aW9uMiA9IHRydWUpIHtcbiAgICAgICAgICAgIHZhciBidXR0ID0gX3N0ZXAyLnZhbHVlO1xuICAgICAgICAgICAgYnV0dC5lbmFibGVkICYmIGJ1dHQuX2lzT24ocmVsID0gY29vcmRzLm1hcChmdW5jdGlvbiAoYywgaWR4KSB7XG4gICAgICAgICAgICAgIHJldHVybiAoYyAtIGNjLnRyYW5zW2lkeF0pIC8gY2Muc2NsW2lkeF07XG4gICAgICAgICAgICB9KSkgJiYgIWJ1dHQucHN0YXRlICYmIChidXR0LnBzdGF0ZSA9IHRydWUsIHJldCA9IGJ1dHQuZm9jdXMocmVsKSk7XG4gICAgICAgICAgICBpZiAocmV0KSBicmVhaztcbiAgICAgICAgICB9XG4gICAgICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgICAgIF9kaWRJdGVyYXRvckVycm9yMiA9IHRydWU7XG4gICAgICAgICAgX2l0ZXJhdG9yRXJyb3IyID0gZXJyO1xuICAgICAgICB9IGZpbmFsbHkge1xuICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICBpZiAoIV9pdGVyYXRvck5vcm1hbENvbXBsZXRpb24yICYmIF9pdGVyYXRvcjIucmV0dXJuICE9IG51bGwpIHtcbiAgICAgICAgICAgICAgX2l0ZXJhdG9yMi5yZXR1cm4oKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9IGZpbmFsbHkge1xuICAgICAgICAgICAgaWYgKF9kaWRJdGVyYXRvckVycm9yMikge1xuICAgICAgICAgICAgICB0aHJvdyBfaXRlcmF0b3JFcnJvcjI7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9IC8vZHJhZ1BDXG5cbiAgICB9LCB7XG4gICAgICBrZXk6IFwiZHJhZ01vYmlsZU1vdmVcIixcbiAgICAgIHZhbHVlOiBmdW5jdGlvbiBkcmFnTW9iaWxlTW92ZShldmVudCwgY2MpIHtcbiAgICAgICAgZnVuY3Rpb24gY2hlY2soYXJyLCBjdXJyKSB7XG4gICAgICAgICAgaWYgKGFyci5ldmVyeShmdW5jdGlvbiAoYXIsIGlkeCkge1xuICAgICAgICAgICAgcmV0dXJuIE1hdGguYWJzKGFyIC0gY3VycltpZHhdKSA+PSBjYy50b3VjaFNlbnNpdGl2aXR5O1xuICAgICAgICAgIH0pKSB7XG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH0gLy9jaGVja1xuXG5cbiAgICAgICAgZnVuY3Rpb24gYXJyYXluZ2UodGxpcykge1xuICAgICAgICAgIHJldHVybiBbW3RsaXNbMF0uY2xpZW50WCAtIGNjLnRhcmdldC5vZmZzZXRMZWZ0LCB0bGlzWzBdLmNsaWVudFkgLSBjYy50YXJnZXQub2Zmc2V0VG9wXSwgW3RsaXNbMV0uY2xpZW50WCAtIGNjLnRhcmdldC5vZmZzZXRMZWZ0LCB0bGlzWzFdLmNsaWVudFkgLSBjYy50YXJnZXQub2Zmc2V0VG9wXV07XG4gICAgICAgIH0gLy9hcnJheW5nZVxuXG5cbiAgICAgICAgZnVuY3Rpb24gZXZlcnkodCwgbnQpIHtcbiAgICAgICAgICB2YXIgYWxsID0gYXJndW1lbnRzLmxlbmd0aCA+IDIgJiYgYXJndW1lbnRzWzJdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMl0gOiBmYWxzZTtcbiAgICAgICAgICB2YXIgb25jZSA9IGFyZ3VtZW50cy5sZW5ndGggPiAzICYmIGFyZ3VtZW50c1szXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzNdIDogZmFsc2U7XG4gICAgICAgICAgdmFyIG91dCA9IGZhbHNlO1xuXG4gICAgICAgICAgaWYgKGFsbCAmJiBjaGVjayh0WzBdLCBudFswXSkgJiYgY2hlY2sodFsxXSwgbnRbMV0pKSB7XG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgICB9IGVsc2UgaWYgKGFsbCkge1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIGlmIChjaGVjayh0WzBdLCBudFswXSkpIHtcbiAgICAgICAgICAgIG91dCA9IG9uY2UgfHwgIW91dDtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBpZiAoY2hlY2sodFsxXSwgbnRbMV0pKSB7XG4gICAgICAgICAgICBvdXQgPSBvbmNlIHx8ICFvdXQ7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgcmV0dXJuIG91dDtcbiAgICAgICAgfSAvL2V2ZXJ5XG5cblxuICAgICAgICBmdW5jdGlvbiBpbmgoKSB7XG4gICAgICAgICAgdmFyIG9uZSA9IGFyZ3VtZW50cy5sZW5ndGggPiAwICYmIGFyZ3VtZW50c1swXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzBdIDogZmFsc2U7XG4gICAgICAgICAgY2MuX3RvdWNoZXNbMF0gPSBbZXZlbnQudGFyZ2V0VG91Y2hlc1swXS5jbGllbnRYIC0gY2MudGFyZ2V0Lm9mZnNldExlZnQsIGV2ZW50LnRhcmdldFRvdWNoZXNbMF0uY2xpZW50WSAtIGNjLnRhcmdldC5vZmZzZXRUb3BdO1xuICAgICAgICAgIGlmICghb25lKSBjYy5fdG91Y2hlc1sxXSA9IFtldmVudC50YXJnZXRUb3VjaGVzWzFdLmNsaWVudFggLSBjYy50YXJnZXQub2Zmc2V0TGVmdCwgZXZlbnQudGFyZ2V0VG91Y2hlc1sxXS5jbGllbnRZIC0gY2MudGFyZ2V0Lm9mZnNldFRvcF07XG4gICAgICAgIH0gLy9pbmhcblxuXG4gICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgIHZhciBjb29yZHMgPSBbZXZlbnQudGFyZ2V0VG91Y2hlc1tldmVudC50YXJnZXRUb3VjaGVzLmxlbmd0aCAtIDFdLmNsaWVudFggLSBjYy50YXJnZXQub2Zmc2V0TGVmdCwgZXZlbnQudGFyZ2V0VG91Y2hlc1tldmVudC50YXJnZXRUb3VjaGVzLmxlbmd0aCAtIDFdLmNsaWVudFkgLSBjYy50YXJnZXQub2Zmc2V0VG9wXTtcblxuICAgICAgICBpZiAoY2MuZHJhZ0VuYWJsZWQgJiYgY2MuX3RvdWNoZXMubGVuZ3RoID09PSAxKSB7XG4gICAgICAgICAgdmFyIGNwID0gQXJyYXkuZnJvbShjYy50cmFucyksXG4gICAgICAgICAgICAgIGRpcztcbiAgICAgICAgICBjYy50cmFuc2xhdGUuYXBwbHkoY2MsIF90b0NvbnN1bWFibGVBcnJheShbY29vcmRzWzBdIC0gY2MuX2Nvb3JkaW5hdGVzWzBdLCBjb29yZHNbMV0gLSBjYy5fY29vcmRpbmF0ZXNbMV1dLm1hcChmdW5jdGlvbiAodikge1xuICAgICAgICAgICAgcmV0dXJuIHYgKiBjYy50cmFuc1NwZWVkO1xuICAgICAgICAgIH0pKSk7XG4gICAgICAgICAgZGlzID0gZGlzdChbY3BbMF0sIGNjLnRyYW5zWzBdXSwgW2NwWzFdLCBjYy50cmFuc1sxXV0pO1xuICAgICAgICAgIGlmIChkaXMgPiBjYy50b3VjaFNlbnNpdGl2aXR5KSBjYy5fY2xrdGltZSA9IDA7XG4gICAgICAgICAgaW5oKHRydWUpO1xuICAgICAgICB9IGVsc2UgaWYgKGNjLnBpbmNoRW5hYmxlZCAmJiBjYy5fdG91Y2hlcy5sZW5ndGggPT09IDIgJiYgZXZlbnQudGFyZ2V0VG91Y2hlcy5sZW5ndGggPT09IDIgJiYgZXZlcnkoYXJyYXluZ2UoZXZlbnQudGFyZ2V0VG91Y2hlcyksIGNjLl90b3VjaGVzLCBmYWxzZSwgdHJ1ZSkpIHtcbiAgICAgICAgICBpZiAoKGNjLnNjYWxlTW9kZSAmIE9wdHMuU2NhbGVNb2RlLkZSRUVTQ0FMRSkgPT09IE9wdHMuU2NhbGVNb2RlLkZSRUVTQ0FMRSkge1xuICAgICAgICAgICAgdmFyIGluaWRpc3QgPSBbTWF0aC5hYnMoY2MuX3RvdWNoZXNbZXZlbnQudGFyZ2V0VG91Y2hlc1swXS5pZGVudGlmaWVyXVswXSAtIGNjLl90b3VjaGVzW2V2ZW50LnRhcmdldFRvdWNoZXNbMV0uaWRlbnRpZmllcl1bMF0pLCBNYXRoLmFicyhjYy5fdG91Y2hlc1tldmVudC50YXJnZXRUb3VjaGVzWzBdLmlkZW50aWZpZXJdWzFdIC0gY2MuX3RvdWNoZXNbZXZlbnQudGFyZ2V0VG91Y2hlc1sxXS5pZGVudGlmaWVyXVsxXSldLFxuICAgICAgICAgICAgICAgIF9kaXMgPSBbTWF0aC5hYnMoZXZlbnQudGFyZ2V0VG91Y2hlc1swXS5jbGllbnRYIC0gZXZlbnQudGFyZ2V0VG91Y2hlc1sxXS5jbGllbnRYIC0gMiAqIGNjLnRhcmdldC5vZmZzZXRMZWZ0KSwgTWF0aC5hYnMoZXZlbnQudGFyZ2V0VG91Y2hlc1swXS5jbGllbnRZIC0gZXZlbnQudGFyZ2V0VG91Y2hlc1sxXS5jbGllbnRZIC0gMiAqIGNjLnRhcmdldC5vZmZzZXRUb3ApXSxcbiAgICAgICAgICAgICAgICBpdG91Y2hlcyA9IFtjYy5fdG91Y2hlc1tldmVudC50YXJnZXRUb3VjaGVzWzBdLmlkZW50aWZpZXJdWzBdICsgY2MuX3RvdWNoZXNbZXZlbnQudGFyZ2V0VG91Y2hlc1sxXS5pZGVudGlmaWVyXVswXSwgY2MuX3RvdWNoZXNbZXZlbnQudGFyZ2V0VG91Y2hlc1swXS5pZGVudGlmaWVyXVsxXSArIGNjLl90b3VjaGVzW2V2ZW50LnRhcmdldFRvdWNoZXNbMV0uaWRlbnRpZmllcl1bMV1dLm1hcChmdW5jdGlvbiAoaSwgaWR4KSB7XG4gICAgICAgICAgICAgIHJldHVybiBpIC8gMiAtIGNjLnRyYW5zW2lkeF07XG4gICAgICAgICAgICB9KSxcbiAgICAgICAgICAgICAgICBkID0gW19kaXNbMF0gLyBpbmlkaXN0WzBdLCBfZGlzWzFdIC8gaW5pZGlzdFsxXV0ubWFwKGZ1bmN0aW9uICh2KSB7XG4gICAgICAgICAgICAgIHJldHVybiB2ICogY2Muc2NsU3BlZWQ7XG4gICAgICAgICAgICB9KSxcbiAgICAgICAgICAgICAgICBudG91Y2hlcyA9IGl0b3VjaGVzLm1hcChmdW5jdGlvbiAoaSwgaWR4KSB7XG4gICAgICAgICAgICAgIHJldHVybiBpICogKDEgLSBkW2lkeF0pO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICBpZiAoY2MuX3pvb21DaGFuZ2VkWzBdKSBjYy50cmFuc2xhdGUobnRvdWNoZXNbMF0pO1xuICAgICAgICAgICAgaWYgKGNjLl96b29tQ2hhbmdlZFsxXSkgY2MudHJhbnNsYXRlKG50b3VjaGVzWzFdKTtcbiAgICAgICAgICAgIGNjLnNjYWxlKGRbMF0sIGRbMV0pO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAvL0B0cy1pZ25vcmVcbiAgICAgICAgICAgIHZhciBfaW5pZGlzdCA9IGRpc3QoW2NjLl90b3VjaGVzW2V2ZW50LnRhcmdldFRvdWNoZXNbMF0uaWRlbnRpZmllcl1bMF0sIGNjLl90b3VjaGVzW2V2ZW50LnRhcmdldFRvdWNoZXNbMV0uaWRlbnRpZmllcl1bMF1dLCBbY2MuX3RvdWNoZXNbZXZlbnQudGFyZ2V0VG91Y2hlc1swXS5pZGVudGlmaWVyXVsxXSwgY2MuX3RvdWNoZXNbZXZlbnQudGFyZ2V0VG91Y2hlc1sxXS5pZGVudGlmaWVyXVsxXV0pLFxuICAgICAgICAgICAgICAgIF9kaXMyID0gZGlzdChbZXZlbnQudGFyZ2V0VG91Y2hlc1swXS5jbGllbnRYIC0gY2MudGFyZ2V0Lm9mZnNldExlZnQsIGV2ZW50LnRhcmdldFRvdWNoZXNbMV0uY2xpZW50WCAtIGNjLnRhcmdldC5vZmZzZXRMZWZ0XSwgW2V2ZW50LnRhcmdldFRvdWNoZXNbMF0uY2xpZW50WSAtIGNjLnRhcmdldC5vZmZzZXRUb3AsIGV2ZW50LnRhcmdldFRvdWNoZXNbMV0uY2xpZW50WSAtIGNjLnRhcmdldC5vZmZzZXRUb3BdKSxcbiAgICAgICAgICAgICAgICBfaXRvdWNoZXMgPSBbY2MuX3RvdWNoZXNbZXZlbnQudGFyZ2V0VG91Y2hlc1swXS5pZGVudGlmaWVyXVswXSArIGNjLl90b3VjaGVzW2V2ZW50LnRhcmdldFRvdWNoZXNbMV0uaWRlbnRpZmllcl1bMF0sIGNjLl90b3VjaGVzW2V2ZW50LnRhcmdldFRvdWNoZXNbMF0uaWRlbnRpZmllcl1bMV0gKyBjYy5fdG91Y2hlc1tldmVudC50YXJnZXRUb3VjaGVzWzFdLmlkZW50aWZpZXJdWzFdXS5tYXAoZnVuY3Rpb24gKGksIGlkeCkge1xuICAgICAgICAgICAgICByZXR1cm4gaSAvIDIgLSBjYy50cmFuc1tpZHhdO1xuICAgICAgICAgICAgfSksXG4gICAgICAgICAgICAgICAgX2QgPSBjYy5zY2xTcGVlZCAqIF9kaXMyIC8gX2luaWRpc3QsXG4gICAgICAgICAgICAgICAgX250b3VjaGVzID0gX2l0b3VjaGVzLm1hcChmdW5jdGlvbiAoaSkge1xuICAgICAgICAgICAgICByZXR1cm4gaSAqICgxIC0gX2QpO1xuICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgIGNjLnNjYWxlKF9kKTtcbiAgICAgICAgICAgIGlmIChjYy5fem9vbUNoYW5nZWQuZXZlcnkoZnVuY3Rpb24gKHptKSB7XG4gICAgICAgICAgICAgIHJldHVybiB6bTtcbiAgICAgICAgICAgIH0pKSBjYy50cmFuc2xhdGUuYXBwbHkoY2MsIF90b0NvbnN1bWFibGVBcnJheShfbnRvdWNoZXMpKTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBpbmgoKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGNjLl9jb29yZGluYXRlcyA9IGNvb3JkcztcbiAgICAgIH0gLy9kcmFnTW9iaWxlTW92ZVxuXG4gICAgfSwge1xuICAgICAga2V5OiBcImRyYWdNb2JpbGVTdGFydFwiLFxuICAgICAgdmFsdWU6IGZ1bmN0aW9uIGRyYWdNb2JpbGVTdGFydChldmVudCwgY2MpIHtcbiAgICAgICAgdmFyIGN1c3QgPSBhcmd1bWVudHMubGVuZ3RoID4gMiAmJiBhcmd1bWVudHNbMl0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1syXSA6IGZhbHNlO1xuICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuXG4gICAgICAgIGlmICghY3VzdCkge1xuICAgICAgICAgIHZhciBjb29yZHMsXG4gICAgICAgICAgICAgIHNvcnRlZCA9IEFycmF5LmZyb20oY2Mud2dldHMuZW50cmllcygpKS5tYXAoZnVuY3Rpb24gKHMpIHtcbiAgICAgICAgICAgIHJldHVybiBzWzFdO1xuICAgICAgICAgIH0pLnNvcnQoZnVuY3Rpb24gKGEsIGIpIHtcbiAgICAgICAgICAgIHJldHVybiBiLl9pZCAtIGEuX2lkO1xuICAgICAgICAgIH0pLFxuICAgICAgICAgICAgICByZXQgPSBmYWxzZTtcbiAgICAgICAgICBBcnJheS5mcm9tKGV2ZW50LmNoYW5nZWRUb3VjaGVzKS5mb3JFYWNoKGZ1bmN0aW9uICh0KSB7XG4gICAgICAgICAgICByZXR1cm4gY2MuX3RvdWNoZXNbdC5pZGVudGlmaWVyXSA9IFt0LmNsaWVudFggLSBjYy50YXJnZXQub2Zmc2V0TGVmdCwgdC5jbGllbnRZIC0gY2MudGFyZ2V0Lm9mZnNldFRvcF07XG4gICAgICAgICAgfSk7XG4gICAgICAgICAgdmFyIF9pdGVyYXRvck5vcm1hbENvbXBsZXRpb24zID0gdHJ1ZTtcbiAgICAgICAgICB2YXIgX2RpZEl0ZXJhdG9yRXJyb3IzID0gZmFsc2U7XG4gICAgICAgICAgdmFyIF9pdGVyYXRvckVycm9yMyA9IHVuZGVmaW5lZDtcblxuICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICBmb3IgKHZhciBfaXRlcmF0b3IzID0gZXZlbnQuY2hhbmdlZFRvdWNoZXNbU3ltYm9sLml0ZXJhdG9yXSgpLCBfc3RlcDM7ICEoX2l0ZXJhdG9yTm9ybWFsQ29tcGxldGlvbjMgPSAoX3N0ZXAzID0gX2l0ZXJhdG9yMy5uZXh0KCkpLmRvbmUpOyBfaXRlcmF0b3JOb3JtYWxDb21wbGV0aW9uMyA9IHRydWUpIHtcbiAgICAgICAgICAgICAgdmFyIHRvdWNoID0gX3N0ZXAzLnZhbHVlO1xuICAgICAgICAgICAgICBjb29yZHMgPSBbKHRvdWNoLmNsaWVudFggLSBjYy50YXJnZXQub2Zmc2V0TGVmdCAtIGNjLnRyYW5zWzBdKSAvIGNjLnNjbFswXSwgKHRvdWNoLmNsaWVudFkgLSBjYy50YXJnZXQub2Zmc2V0VG9wIC0gY2MudHJhbnNbMV0pIC8gY2Muc2NsWzFdXTtcbiAgICAgICAgICAgICAgdmFyIF9pdGVyYXRvck5vcm1hbENvbXBsZXRpb240ID0gdHJ1ZTtcbiAgICAgICAgICAgICAgdmFyIF9kaWRJdGVyYXRvckVycm9yNCA9IGZhbHNlO1xuICAgICAgICAgICAgICB2YXIgX2l0ZXJhdG9yRXJyb3I0ID0gdW5kZWZpbmVkO1xuXG4gICAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgZm9yICh2YXIgX2l0ZXJhdG9yNCA9IHNvcnRlZFtTeW1ib2wuaXRlcmF0b3JdKCksIF9zdGVwNDsgIShfaXRlcmF0b3JOb3JtYWxDb21wbGV0aW9uNCA9IChfc3RlcDQgPSBfaXRlcmF0b3I0Lm5leHQoKSkuZG9uZSk7IF9pdGVyYXRvck5vcm1hbENvbXBsZXRpb240ID0gdHJ1ZSkge1xuICAgICAgICAgICAgICAgICAgdmFyIGJ1dHQgPSBfc3RlcDQudmFsdWU7XG4gICAgICAgICAgICAgICAgICBidXR0LmVuYWJsZWQgJiYgYnV0dC5faXNPbihjb29yZHMpICYmICFidXR0LnBzdGF0ZSAmJiAoYnV0dC5wc3RhdGUgPSB0cnVlLCByZXQgPSBidXR0LmZvY3VzKGNvb3JkcykpO1xuICAgICAgICAgICAgICAgICAgaWYgKHJldCkgYnJlYWs7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgICAgICAgICAgICBfZGlkSXRlcmF0b3JFcnJvcjQgPSB0cnVlO1xuICAgICAgICAgICAgICAgIF9pdGVyYXRvckVycm9yNCA9IGVycjtcbiAgICAgICAgICAgICAgfSBmaW5hbGx5IHtcbiAgICAgICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgICAgaWYgKCFfaXRlcmF0b3JOb3JtYWxDb21wbGV0aW9uNCAmJiBfaXRlcmF0b3I0LnJldHVybiAhPSBudWxsKSB7XG4gICAgICAgICAgICAgICAgICAgIF9pdGVyYXRvcjQucmV0dXJuKCk7XG4gICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSBmaW5hbGx5IHtcbiAgICAgICAgICAgICAgICAgIGlmIChfZGlkSXRlcmF0b3JFcnJvcjQpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhyb3cgX2l0ZXJhdG9yRXJyb3I0O1xuICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgICAgICAgX2RpZEl0ZXJhdG9yRXJyb3IzID0gdHJ1ZTtcbiAgICAgICAgICAgIF9pdGVyYXRvckVycm9yMyA9IGVycjtcbiAgICAgICAgICB9IGZpbmFsbHkge1xuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgaWYgKCFfaXRlcmF0b3JOb3JtYWxDb21wbGV0aW9uMyAmJiBfaXRlcmF0b3IzLnJldHVybiAhPSBudWxsKSB7XG4gICAgICAgICAgICAgICAgX2l0ZXJhdG9yMy5yZXR1cm4oKTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSBmaW5hbGx5IHtcbiAgICAgICAgICAgICAgaWYgKF9kaWRJdGVyYXRvckVycm9yMykge1xuICAgICAgICAgICAgICAgIHRocm93IF9pdGVyYXRvckVycm9yMztcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChjYy5fdG91Y2hlcy5sZW5ndGggPT09IDEpIHtcbiAgICAgICAgICBjYy5fY2xrdGltZSA9IERhdGUubm93KCk7XG4gICAgICAgICAgY2MuX2Nvb3JkaW5hdGVzID0gY2MuX3RvdWNoZXNbY2MuX3RvdWNoZXMubGVuZ3RoIC0gMV07XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgY2MuX2Nsa3RpbWUgPSAwO1xuICAgICAgICB9XG5cbiAgICAgICAgY2MuX3ByZXNzZWQgPSB0cnVlO1xuICAgICAgfSAvL2RyYWdNb2JpbGVTdGFydFxuXG4gICAgfSwge1xuICAgICAga2V5OiBcImRyYWdNb2JpbGVFbmRcIixcbiAgICAgIHZhbHVlOiBmdW5jdGlvbiBkcmFnTW9iaWxlRW5kKGV2ZW50LCBjYykge1xuICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICB2YXIgY29vcmRzLFxuICAgICAgICAgICAgc29ydGVkID0gQXJyYXkuZnJvbShjYy53Z2V0cy5lbnRyaWVzKCkpLm1hcChmdW5jdGlvbiAocykge1xuICAgICAgICAgIHJldHVybiBzWzFdO1xuICAgICAgICB9KS5zb3J0KGZ1bmN0aW9uIChhLCBiKSB7XG4gICAgICAgICAgcmV0dXJuIGIuX2lkIC0gYS5faWQ7XG4gICAgICAgIH0pLFxuICAgICAgICAgICAgcmV0ID0gZmFsc2U7XG4gICAgICAgIHZhciBfaXRlcmF0b3JOb3JtYWxDb21wbGV0aW9uNSA9IHRydWU7XG4gICAgICAgIHZhciBfZGlkSXRlcmF0b3JFcnJvcjUgPSBmYWxzZTtcbiAgICAgICAgdmFyIF9pdGVyYXRvckVycm9yNSA9IHVuZGVmaW5lZDtcblxuICAgICAgICB0cnkge1xuICAgICAgICAgIGZvciAodmFyIF9pdGVyYXRvcjUgPSBldmVudC5jaGFuZ2VkVG91Y2hlc1tTeW1ib2wuaXRlcmF0b3JdKCksIF9zdGVwNTsgIShfaXRlcmF0b3JOb3JtYWxDb21wbGV0aW9uNSA9IChfc3RlcDUgPSBfaXRlcmF0b3I1Lm5leHQoKSkuZG9uZSk7IF9pdGVyYXRvck5vcm1hbENvbXBsZXRpb241ID0gdHJ1ZSkge1xuICAgICAgICAgICAgdmFyIHRvdWNoID0gX3N0ZXA1LnZhbHVlO1xuICAgICAgICAgICAgY29vcmRzID0gWyh0b3VjaC5jbGllbnRYIC0gY2MudGFyZ2V0Lm9mZnNldExlZnQgLSBjYy50cmFuc1swXSkgLyBjYy5zY2xbMF0sICh0b3VjaC5jbGllbnRZIC0gY2MudGFyZ2V0Lm9mZnNldFRvcCAtIGNjLnRyYW5zWzFdKSAvIGNjLnNjbFsxXV07XG4gICAgICAgICAgICB2YXIgX2l0ZXJhdG9yTm9ybWFsQ29tcGxldGlvbjcgPSB0cnVlO1xuICAgICAgICAgICAgdmFyIF9kaWRJdGVyYXRvckVycm9yNyA9IGZhbHNlO1xuICAgICAgICAgICAgdmFyIF9pdGVyYXRvckVycm9yNyA9IHVuZGVmaW5lZDtcblxuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgZm9yICh2YXIgX2l0ZXJhdG9yNyA9IHNvcnRlZFtTeW1ib2wuaXRlcmF0b3JdKCksIF9zdGVwNzsgIShfaXRlcmF0b3JOb3JtYWxDb21wbGV0aW9uNyA9IChfc3RlcDcgPSBfaXRlcmF0b3I3Lm5leHQoKSkuZG9uZSk7IF9pdGVyYXRvck5vcm1hbENvbXBsZXRpb243ID0gdHJ1ZSkge1xuICAgICAgICAgICAgICAgIHZhciBfYnV0dCA9IF9zdGVwNy52YWx1ZTtcbiAgICAgICAgICAgICAgICBfYnV0dC5lbmFibGVkICYmIF9idXR0Ll9pc09uKGNvb3Jkcyk7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgICAgICAgICBfZGlkSXRlcmF0b3JFcnJvcjcgPSB0cnVlO1xuICAgICAgICAgICAgICBfaXRlcmF0b3JFcnJvcjcgPSBlcnI7XG4gICAgICAgICAgICB9IGZpbmFsbHkge1xuICAgICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgIGlmICghX2l0ZXJhdG9yTm9ybWFsQ29tcGxldGlvbjcgJiYgX2l0ZXJhdG9yNy5yZXR1cm4gIT0gbnVsbCkge1xuICAgICAgICAgICAgICAgICAgX2l0ZXJhdG9yNy5yZXR1cm4oKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH0gZmluYWxseSB7XG4gICAgICAgICAgICAgICAgaWYgKF9kaWRJdGVyYXRvckVycm9yNykge1xuICAgICAgICAgICAgICAgICAgdGhyb3cgX2l0ZXJhdG9yRXJyb3I3O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICAgICAgX2RpZEl0ZXJhdG9yRXJyb3I1ID0gdHJ1ZTtcbiAgICAgICAgICBfaXRlcmF0b3JFcnJvcjUgPSBlcnI7XG4gICAgICAgIH0gZmluYWxseSB7XG4gICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGlmICghX2l0ZXJhdG9yTm9ybWFsQ29tcGxldGlvbjUgJiYgX2l0ZXJhdG9yNS5yZXR1cm4gIT0gbnVsbCkge1xuICAgICAgICAgICAgICBfaXRlcmF0b3I1LnJldHVybigpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0gZmluYWxseSB7XG4gICAgICAgICAgICBpZiAoX2RpZEl0ZXJhdG9yRXJyb3I1KSB7XG4gICAgICAgICAgICAgIHRocm93IF9pdGVyYXRvckVycm9yNTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoY2MuX3RvdWNoZXMubGVuZ3RoID09PSAxICYmIERhdGUubm93KCkgLSBjYy5fY2xrdGltZSA8PSBjYy5jbGlja1NlbnNpdGl2aXR5KSB7XG4gICAgICAgICAgdmFyIF9pdGVyYXRvck5vcm1hbENvbXBsZXRpb242ID0gdHJ1ZTtcbiAgICAgICAgICB2YXIgX2RpZEl0ZXJhdG9yRXJyb3I2ID0gZmFsc2U7XG4gICAgICAgICAgdmFyIF9pdGVyYXRvckVycm9yNiA9IHVuZGVmaW5lZDtcblxuICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICBmb3IgKHZhciBfaXRlcmF0b3I2ID0gc29ydGVkW1N5bWJvbC5pdGVyYXRvcl0oKSwgX3N0ZXA2OyAhKF9pdGVyYXRvck5vcm1hbENvbXBsZXRpb242ID0gKF9zdGVwNiA9IF9pdGVyYXRvcjYubmV4dCgpKS5kb25lKTsgX2l0ZXJhdG9yTm9ybWFsQ29tcGxldGlvbjYgPSB0cnVlKSB7XG4gICAgICAgICAgICAgIHZhciBidXR0ID0gX3N0ZXA2LnZhbHVlO1xuICAgICAgICAgICAgICBidXR0LmVuYWJsZWQgJiYgYnV0dC5faXNPbihjb29yZHMpICYmIChyZXQgPSBidXR0LmNsaWNrKGNvb3JkcykpO1xuICAgICAgICAgICAgICBpZiAocmV0KSBicmVhaztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgICAgICAgIF9kaWRJdGVyYXRvckVycm9yNiA9IHRydWU7XG4gICAgICAgICAgICBfaXRlcmF0b3JFcnJvcjYgPSBlcnI7XG4gICAgICAgICAgfSBmaW5hbGx5IHtcbiAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgIGlmICghX2l0ZXJhdG9yTm9ybWFsQ29tcGxldGlvbjYgJiYgX2l0ZXJhdG9yNi5yZXR1cm4gIT0gbnVsbCkge1xuICAgICAgICAgICAgICAgIF9pdGVyYXRvcjYucmV0dXJuKCk7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0gZmluYWxseSB7XG4gICAgICAgICAgICAgIGlmIChfZGlkSXRlcmF0b3JFcnJvcjYpIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBfaXRlcmF0b3JFcnJvcjY7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG5cbiAgICAgICAgICBjYy5fY2xrdGltZSA9IDA7XG4gICAgICAgIH1cblxuICAgICAgICBBcnJheS5mcm9tKGV2ZW50LmNoYW5nZWRUb3VjaGVzKS5mb3JFYWNoKGZ1bmN0aW9uICh0KSB7XG4gICAgICAgICAgY2MuX3RvdWNoZXMuc3BsaWNlKHQuaWRlbnRpZmllciwgMSk7XG4gICAgICAgIH0pO1xuXG4gICAgICAgIGlmIChPYmplY3Qua2V5cyhjYy5fdG91Y2hlcykubGVuZ3RoID09IDEpIHtcbiAgICAgICAgICBDb250cm9sbGFibGVDYW52YXMuZHJhZ01vYmlsZVN0YXJ0KGV2ZW50LCBjYywgdHJ1ZSk7XG4gICAgICAgIH1cblxuICAgICAgICBjYy5fcHJlc3NlZCA9ICEhY2MuX3RvdWNoZXMubGVuZ3RoO1xuICAgICAgfSAvL2RyYWdNb2JpbGVFbmRcblxuICAgIH0sIHtcbiAgICAgIGtleTogXCJ3aGVlbFwiLFxuICAgICAgdmFsdWU6IGZ1bmN0aW9uIHdoZWVsKGV2ZW50LCBjYykge1xuICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICB2YXIgZCA9IDEgLSBjYy5zY2xTcGVlZCAqIENvbnRyb2xsYWJsZUNhbnZhcy5maXhEZWx0YShldmVudC5kZWx0YU1vZGUsIGV2ZW50LmRlbHRhWSkgLyBjYy5taW4sXG4gICAgICAgICAgICBjb29yZHMgPSBbZXZlbnQuY2xpZW50WCAtIGNjLnRhcmdldC5vZmZzZXRMZWZ0IC0gY2MudHJhbnNbMF0sIGV2ZW50LmNsaWVudFkgLSBjYy50YXJnZXQub2Zmc2V0VG9wIC0gY2MudHJhbnNbMV1dO1xuICAgICAgICBjYy5zY2FsZShkKTtcbiAgICAgICAgaWYgKGNjLl96b29tQ2hhbmdlZC5ldmVyeShmdW5jdGlvbiAoem0pIHtcbiAgICAgICAgICByZXR1cm4gem07XG4gICAgICAgIH0pKSBjYy50cmFuc2xhdGUuYXBwbHkoY2MsIF90b0NvbnN1bWFibGVBcnJheShjb29yZHMubWFwKGZ1bmN0aW9uIChjKSB7XG4gICAgICAgICAgcmV0dXJuIGMgKiAoMSAtIGQpO1xuICAgICAgICB9KSkpO1xuICAgICAgfVxuICAgIH0sIHtcbiAgICAgIGtleTogXCJmaXhEZWx0YVwiLFxuICAgICAgLy9saW5lVG9QaXhcbiAgICAgIHZhbHVlOiBmdW5jdGlvbiBmaXhEZWx0YShtb2RlLCBkZWx0YVkpIHtcbiAgICAgICAgaWYgKG1vZGUgPT09IDEpIHtcbiAgICAgICAgICByZXR1cm4gQ29udHJvbGxhYmxlQ2FudmFzLl9saW5lcGl4ICogZGVsdGFZO1xuICAgICAgICB9IGVsc2UgaWYgKG1vZGUgPT09IDIpIHtcbiAgICAgICAgICByZXR1cm4gd2luZG93LmlubmVySGVpZ2h0O1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHJldHVybiBkZWx0YVk7XG4gICAgICAgIH1cbiAgICAgIH0gLy9maXhEZWx0YVxuXG4gICAgfSwge1xuICAgICAga2V5OiBcImlzTW9iaWxlXCIsXG4gICAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHtcbiAgICAgICAgaWYgKG5hdmlnYXRvci51c2VyQWdlbnQubWF0Y2goL0FuZHJvaWQvaSkgfHwgbmF2aWdhdG9yLnVzZXJBZ2VudC5tYXRjaCgvd2ViT1MvaSkgfHwgbmF2aWdhdG9yLnVzZXJBZ2VudC5tYXRjaCgvaVBob25lL2kpIHx8IG5hdmlnYXRvci51c2VyQWdlbnQubWF0Y2goL2lQYWQvaSkgfHwgbmF2aWdhdG9yLnVzZXJBZ2VudC5tYXRjaCgvaVBvZC9pKSB8fCBuYXZpZ2F0b3IudXNlckFnZW50Lm1hdGNoKC9CbGFja0JlcnJ5L2kpIHx8IG5hdmlnYXRvci51c2VyQWdlbnQubWF0Y2goL1dpbmRvd3MgUGhvbmUvaSkpIHtcbiAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cbiAgICAgIH0gLy9pc01vYmlsZVxuXG4gICAgfSwge1xuICAgICAga2V5OiBcImxpbmVUb1BpeFwiLFxuICAgICAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7XG4gICAgICAgIHZhciByLFxuICAgICAgICAgICAgaWZyYW1lID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImlmcmFtZVwiKTtcbiAgICAgICAgaWZyYW1lLnNyYyA9ICcjJztcbiAgICAgICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChpZnJhbWUpO1xuICAgICAgICB2YXIgaXdpbiA9IGlmcmFtZS5jb250ZW50V2luZG93LFxuICAgICAgICAgICAgaWRvYyA9IGl3aW4uZG9jdW1lbnQ7XG4gICAgICAgIGlkb2Mub3BlbigpO1xuICAgICAgICBpZG9jLndyaXRlKCc8IURPQ1RZUEUgaHRtbD48aHRtbD48aGVhZD48L2hlYWQ+PGJvZHk+PHA+YTwvcD48L2JvZHk+PC9odG1sPicpO1xuICAgICAgICBpZG9jLmNsb3NlKCk7XG4gICAgICAgIHZhciBzcGFuID0gaWRvYy5ib2R5LmZpcnN0RWxlbWVudENoaWxkO1xuICAgICAgICByID0gc3Bhbi5vZmZzZXRIZWlnaHQ7XG4gICAgICAgIGRvY3VtZW50LmJvZHkucmVtb3ZlQ2hpbGQoaWZyYW1lKTtcbiAgICAgICAgcmV0dXJuIHI7XG4gICAgICB9XG4gICAgfV0pO1xuXG4gICAgcmV0dXJuIENvbnRyb2xsYWJsZUNhbnZhcztcbiAgfSgpOyAvL0NvbnRyb2xsYWJsZUNhbnZhc1xuXG5cbiAgQ29udHJvbGxhYmxlQ2FudmFzLl9saW5lcGl4ID0gMTA7XG4gIC8qKlxyXG4gICAqIERlZmF1bHQgb3B0aW9ucyBmb3IgQ29udHJvbGxhYmxlQ2FudmFzXHJcbiAgICogQHJlYWRvbmx5XHJcbiAgICogQHN0YXRpY1xyXG4gICAqL1xuXG4gIENvbnRyb2xsYWJsZUNhbnZhcy5kZWZhdWx0T3B0cyA9IHtcbiAgICB0YXJnZXQ6IGRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKFwiY2FudmFzXCIpWzBdLFxuICAgIHRyYW5zOiBbMCwgMF0sXG4gICAgc2NsOiBbMSwgMV0sXG4gICAgZHJhZ0VuYWJsZWQ6IGZhbHNlLFxuICAgIHBpbmNoRW5hYmxlZDogZmFsc2UsXG4gICAgd2hlZWxFbmFibGVkOiBmYWxzZSxcbiAgICBrZXlzRW5hYmxlZDogZmFsc2UsXG4gICAgcGFuRW5hYmxlZDogZmFsc2UsXG4gICAgdGlsdEVuYWJsZWQ6IGZhbHNlLFxuICAgIGV2ZW50c1JldmVyc2VkOiBmYWxzZSxcbiAgICBkeW5hbWljVHJhbnNCb3VuZHM6IHRydWUsXG4gICAgdXNlQnV0dG9uOiAxLFxuICAgIHNjYWxlTW9kZTogMSxcbiAgICB0cmFuc1NwZWVkOiAxLFxuICAgIHNjbFNwZWVkOiAxLFxuICAgIHRvdWNoU2Vuc2l0aXZpdHk6IC4zNSxcbiAgICBjbGlja1NlbnNpdGl2aXR5OiA4MDAsXG4gICAgc2NsQm91bmRzOiBbMCwgMCwgSW5maW5pdHksIEluZmluaXR5XSxcbiAgICB0cmFuc0JvdW5kczogWy1JbmZpbml0eSwgLUluZmluaXR5LCBJbmZpbml0eSwgSW5maW5pdHldLFxuICAgIF9hZGFwdHM6IHtcbiAgICAgIGRyYWc6IGZhbHNlLFxuICAgICAgcGluY2g6IGZhbHNlLFxuICAgICAgd2hlZWw6IGZhbHNlLFxuICAgICAgcGFuOiBmYWxzZSxcbiAgICAgIHRpbHQ6IGZhbHNlLFxuICAgICAgY2xpY2s6IGZhbHNlXG4gICAgfSxcbiAgICB3Z2V0czogbmV3IFNldCgpXG4gIH07XG4gIENhbnZhc0NvbnRyb2xzLkNvbnRyb2xsYWJsZUNhbnZhcyA9IENvbnRyb2xsYWJsZUNhbnZhcztcbiAgLyoqXHJcbiAgICogQSBjbGFzcyB0byBjb250cm9sIGtleWJvYXJkIGV2ZW50c1xyXG4gICAqL1xuXG4gIHZhciBLZXlCaW5kID1cbiAgLyojX19QVVJFX18qL1xuICBmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gS2V5QmluZChlbGVtZW50KSB7XG4gICAgICB2YXIgYmluZCA9IGFyZ3VtZW50cy5sZW5ndGggPiAxICYmIGFyZ3VtZW50c1sxXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzFdIDogZmFsc2U7XG5cbiAgICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBLZXlCaW5kKTtcblxuICAgICAgdGhpcy5wcmVzcyA9IFtdO1xuICAgICAgdGhpcy5kb3duID0gW107XG4gICAgICB0aGlzLnVwID0gW107XG4gICAgICB0aGlzLl9ib3VuZCA9IGZhbHNlO1xuICAgICAgdGhpcy5hcnJvd01vdmVTcGVlZHVwRW5hYmxlZCA9IHRydWU7XG4gICAgICB0aGlzLmFycm93QmluZGluZ3MgPSB7fTtcbiAgICAgIHRoaXMuZWxlbWVudCA9IGVsZW1lbnQ7XG4gICAgICBPYmplY3QuYXNzaWduKHRoaXMuYXJyb3dCaW5kaW5ncywgS2V5QmluZC5hcnJvd0JpbmRpbmdzKTtcbiAgICAgIHRoaXMuYXJyb3dNb3ZlU3BlZWQgPSBLZXlCaW5kLmFycm93TW92ZVNwZWVkO1xuICAgICAgdGhpcy5hcnJvd01vdmVTcGVlZHVwID0gS2V5QmluZC5hcnJvd01vdmVTcGVlZHVwO1xuICAgICAgdGhpcy5hcnJvd01vdmVTcGVlZE1heCA9IEtleUJpbmQuYXJyb3dNb3ZlU3BlZWRNYXg7XG4gICAgICBiaW5kICYmIHRoaXMuYmluZCgpO1xuICAgIH0gLy9jdG9yXG5cblxuICAgIF9jcmVhdGVDbGFzcyhLZXlCaW5kLCBbe1xuICAgICAga2V5OiBcImJpbmRBcnJvd3NcIixcbiAgICAgIC8vYXJyb3dNb3ZlXG4gICAgICB2YWx1ZTogZnVuY3Rpb24gYmluZEFycm93cygpIHtcbiAgICAgICAgZm9yICh2YXIgaSBpbiB0aGlzLmFycm93QmluZGluZ3MpIHtcbiAgICAgICAgICB0aGlzLnJlZ2lzdGVyS2V5ZG93bihpLCBLZXlCaW5kLmFycm93TW92ZS5iaW5kKHRoaXMpKTtcbiAgICAgICAgICB0aGlzLnJlZ2lzdGVyS2V5dXAoaSwgS2V5QmluZC5hcnJvd01vdmUuYmluZCh0aGlzKSk7XG4gICAgICAgIH1cblxuICAgICAgICB0aGlzLmJpbmRBcnJvd3MgPSBmdW5jdGlvbiAoKSB7fTtcbiAgICAgIH0gLy9iaW5kQXJyb3dzXG5cbiAgICAgIC8qKlxyXG4gICAgICAgKiBCaW5kIGtleSBldmVudCBsaXN0ZW5lcnNcclxuICAgICAgICogQG1ldGhvZFxyXG4gICAgICAgKiBAcmV0dXJucyB7Ym9vbGVhbn1cclxuICAgICAgICovXG5cbiAgICB9LCB7XG4gICAgICBrZXk6IFwiYmluZFwiLFxuICAgICAgdmFsdWU6IGZ1bmN0aW9uIGJpbmQoKSB7XG4gICAgICAgIHZhciBfdGhpczYgPSB0aGlzO1xuXG4gICAgICAgIGlmICghdGhpcy5fYm91bmQpIHtcbiAgICAgICAgICB0aGlzLmVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcImtleXByZXNzXCIsIGZ1bmN0aW9uIChldmVudCkge1xuICAgICAgICAgICAgcmV0dXJuIF90aGlzNi5faGFuZGxlci5iaW5kKF90aGlzNikoXCJrZXlwcmVzc1wiLCBldmVudCk7XG4gICAgICAgICAgfSwgZmFsc2UpO1xuICAgICAgICAgIHRoaXMuZWxlbWVudC5hZGRFdmVudExpc3RlbmVyKFwia2V5dXBcIiwgZnVuY3Rpb24gKGV2ZW50KSB7XG4gICAgICAgICAgICByZXR1cm4gX3RoaXM2Ll9oYW5kbGVyLmJpbmQoX3RoaXM2KShcImtleXVwXCIsIGV2ZW50KTtcbiAgICAgICAgICB9LCBmYWxzZSk7XG4gICAgICAgICAgdGhpcy5lbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJrZXlkb3duXCIsIGZ1bmN0aW9uIChldmVudCkge1xuICAgICAgICAgICAgcmV0dXJuIF90aGlzNi5faGFuZGxlci5iaW5kKF90aGlzNikoXCJrZXlkb3duXCIsIGV2ZW50KTtcbiAgICAgICAgICB9LCBmYWxzZSk7XG4gICAgICAgICAgcmV0dXJuIHRoaXMuX2JvdW5kID0gdHJ1ZTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgIH0gLy9iaW5kXG5cbiAgICB9LCB7XG4gICAgICBrZXk6IFwiX2hhbmRsZXJcIixcbiAgICAgIHZhbHVlOiBmdW5jdGlvbiBfaGFuZGxlcih0eXBlLCBldmVudCkge1xuICAgICAgICB2YXIgaGFuZGxlZCA9IGZhbHNlO1xuICAgICAgICB0aGlzW3R5cGUucmVwbGFjZShcImtleVwiLCAnJyldLmZvckVhY2goZnVuY3Rpb24gKGtleSkge1xuICAgICAgICAgIGlmIChrZXkua2V5ID09PSBldmVudC5rZXkpIHtcbiAgICAgICAgICAgIGhhbmRsZWQgPSAha2V5LmNhbGxiYWNrKGV2ZW50LCB0eXBlKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gaGFuZGxlZDtcbiAgICAgIH0gLy9faGFuZGxlclxuXG4gICAgICAvKipcclxuICAgICAgICogQG1ldGhvZFxyXG4gICAgICAgKiBAcGFyYW0ge3N0cmluZ30ga2V5XHJcbiAgICAgICAqIEBwYXJhbSB7RnVuY3Rpb259IGNhbGxiYWNrIC0gY2IoZXZlbnQpXHJcbiAgICAgICAqIEByZXR1cm5zIHtLZXl9XHJcbiAgICAgICAqL1xuXG4gICAgfSwge1xuICAgICAga2V5OiBcInJlZ2lzdGVyS2V5cHJlc3NcIixcbiAgICAgIHZhbHVlOiBmdW5jdGlvbiByZWdpc3RlcktleXByZXNzKGtleSwgY2FsbGJhY2spIHtcbiAgICAgICAgdmFyIG91dDtcbiAgICAgICAgdGhpcy5wcmVzcy5wdXNoKG91dCA9IHtcbiAgICAgICAgICBrZXk6IGtleSxcbiAgICAgICAgICBjYWxsYmFjazogY2FsbGJhY2ssXG4gICAgICAgICAgaWQ6IEtleUJpbmQuX2lkY250cisrLFxuICAgICAgICAgIHR5cGU6IFwicHJlc3NcIlxuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIG91dDtcbiAgICAgIH0gLy9yZWdpc3RlcktleXByZXNzXG5cbiAgICAgIC8qKlxyXG4gICAgICAgKiBAbWV0aG9kXHJcbiAgICAgICAqIEBwYXJhbSB7c3RyaW5nfSBrZXlcclxuICAgICAgICogQHBhcmFtIHtGdW5jdGlvbn0gY2FsbGJhY2sgLSBjYihldmVudClcclxuICAgICAgICogQHJldHVybnMge0tleX1cclxuICAgICAgICovXG5cbiAgICB9LCB7XG4gICAgICBrZXk6IFwicmVnaXN0ZXJLZXlkb3duXCIsXG4gICAgICB2YWx1ZTogZnVuY3Rpb24gcmVnaXN0ZXJLZXlkb3duKGtleSwgY2FsbGJhY2spIHtcbiAgICAgICAgdmFyIG91dDtcbiAgICAgICAgdGhpcy5kb3duLnB1c2gob3V0ID0ge1xuICAgICAgICAgIGtleToga2V5LFxuICAgICAgICAgIGNhbGxiYWNrOiBjYWxsYmFjayxcbiAgICAgICAgICBpZDogS2V5QmluZC5faWRjbnRyKyssXG4gICAgICAgICAgdHlwZTogXCJkb3duXCJcbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiBvdXQ7XG4gICAgICB9IC8vcmVnaXN0ZXJLZXlkb3duXG5cbiAgICAgIC8qKlxyXG4gICAgICAgKiBAbWV0aG9kXHJcbiAgICAgICAqIEBwYXJhbSB7c3RyaW5nfSBrZXlcclxuICAgICAgICogQHBhcmFtIHtGdW5jdGlvbn0gY2FsbGJhY2sgLSBjYihldmVudClcclxuICAgICAgICogQHJldHVybnMge0tleX1cclxuICAgICAgICovXG5cbiAgICB9LCB7XG4gICAgICBrZXk6IFwicmVnaXN0ZXJLZXl1cFwiLFxuICAgICAgdmFsdWU6IGZ1bmN0aW9uIHJlZ2lzdGVyS2V5dXAoa2V5LCBjYWxsYmFjaykge1xuICAgICAgICB2YXIgb3V0O1xuICAgICAgICB0aGlzLnVwLnB1c2gob3V0ID0ge1xuICAgICAgICAgIGtleToga2V5LFxuICAgICAgICAgIGNhbGxiYWNrOiBjYWxsYmFjayxcbiAgICAgICAgICBpZDogS2V5QmluZC5faWRjbnRyKyssXG4gICAgICAgICAgdHlwZTogXCJ1cFwiXG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gb3V0O1xuICAgICAgfSAvL3JlZ2lzdGVyS2V5dXBcblxuICAgICAgLyoqXHJcbiAgICAgICAqIEBtZXRob2RcclxuICAgICAgICogQHBhcmFtIHtLZXl9IGtleVxyXG4gICAgICAgKi9cblxuICAgIH0sIHtcbiAgICAgIGtleTogXCJ1bnJlZ2lzdGVyXCIsXG4gICAgICB2YWx1ZTogZnVuY3Rpb24gdW5yZWdpc3RlcihrZXksIHJlcGwpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBrZXkgPT09IFwibnVtYmVyXCIpIHtcbiAgICAgICAgICB2YXIgaWR4O1xuXG4gICAgICAgICAgaWYgKChpZHggPSB0aGlzLnByZXNzLmZpbmRJbmRleChmdW5jdGlvbiAoaykge1xuICAgICAgICAgICAgcmV0dXJuIGsuaWQgPT09IGtleTtcbiAgICAgICAgICB9KSkgPj0gMCkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMucHJlc3Muc3BsaWNlKGlkeCwgMSwgcmVwbCk7XG4gICAgICAgICAgfSBlbHNlIGlmICgoaWR4ID0gdGhpcy5kb3duLmZpbmRJbmRleChmdW5jdGlvbiAoaykge1xuICAgICAgICAgICAgcmV0dXJuIGsuaWQgPT09IGtleTtcbiAgICAgICAgICB9KSkgPj0gMCkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuZG93bi5zcGxpY2UoaWR4LCAxLCByZXBsKTtcbiAgICAgICAgICB9IGVsc2UgaWYgKChpZHggPSB0aGlzLnVwLmZpbmRJbmRleChmdW5jdGlvbiAoaykge1xuICAgICAgICAgICAgcmV0dXJuIGsuaWQgPT09IGtleTtcbiAgICAgICAgICB9KSkgPj0gMCkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMudXAuc3BsaWNlKGlkeCwgMSwgcmVwbCk7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgICB9XG4gICAgICAgIH0gZWxzZSBpZiAodHlwZW9mIGtleSA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgICAgIHRoaXMucHJlc3MgPSB0aGlzLnByZXNzLmZpbHRlcihmdW5jdGlvbiAoaykge1xuICAgICAgICAgICAgcmV0dXJuIGsua2V5ICE9PSBrZXk7XG4gICAgICAgICAgfSk7XG4gICAgICAgICAgdGhpcy5kb3duID0gdGhpcy5kb3duLmZpbHRlcihmdW5jdGlvbiAoaykge1xuICAgICAgICAgICAgcmV0dXJuIGsua2V5ICE9PSBrZXk7XG4gICAgICAgICAgfSk7XG4gICAgICAgICAgdGhpcy51cCA9IHRoaXMudXAuZmlsdGVyKGZ1bmN0aW9uIChrKSB7XG4gICAgICAgICAgICByZXR1cm4gay5rZXkgIT09IGtleTtcbiAgICAgICAgICB9KTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICByZXR1cm4gdGhpc1trZXkudHlwZV0uc3BsaWNlKHRoaXNba2V5LnR5cGVdLmZpbmRJbmRleChmdW5jdGlvbiAoaykge1xuICAgICAgICAgICAgcmV0dXJuIGsuaWQgPT09IGtleS5pZDtcbiAgICAgICAgICB9KSwgMSwgcmVwbCk7XG4gICAgICAgIH1cbiAgICAgIH0gLy91bnJlZ2lzdGVyXG5cbiAgICB9XSwgW3tcbiAgICAgIGtleTogXCJhcnJvd01vdmVcIixcbiAgICAgIHZhbHVlOiBmdW5jdGlvbiBhcnJvd01vdmUoZXZlbnQsIHR5cGUpIHtcbiAgICAgICAgaWYgKHR5cGUgPT09IFwia2V5ZG93blwiKSB7XG4gICAgICAgICAgZXZlbnQudGFyZ2V0W1wiX2NjX1wiXS50cmFuc2xhdGUodGhpcy5hcnJvd01vdmVTcGVlZCAqIHRoaXMuYXJyb3dCaW5kaW5nc1tldmVudC5rZXldWzBdLCB0aGlzLmFycm93TW92ZVNwZWVkICogdGhpcy5hcnJvd0JpbmRpbmdzW2V2ZW50LmtleV1bMV0pO1xuICAgICAgICAgIGlmICh0aGlzLmFycm93TW92ZVNwZWVkdXBFbmFibGVkKSB0aGlzLmFycm93TW92ZVNwZWVkID0gYm91bmQodGhpcy5hcnJvd01vdmVTcGVlZCArIHRoaXMuYXJyb3dNb3ZlU3BlZWR1cCwgMCwgdGhpcy5hcnJvd01vdmVTcGVlZE1heCk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgdGhpcy5hcnJvd01vdmVTcGVlZCA9IEtleUJpbmQuYXJyb3dNb3ZlU3BlZWQ7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICB9XG4gICAgfV0pO1xuXG4gICAgcmV0dXJuIEtleUJpbmQ7XG4gIH0oKTsgLy9LZXlCaW5kXG5cblxuICBLZXlCaW5kLl9pZGNudHIgPSAwO1xuICBLZXlCaW5kLmFycm93TW92ZVNwZWVkID0gNTtcbiAgS2V5QmluZC5hcnJvd01vdmVTcGVlZHVwID0gLjU7XG4gIEtleUJpbmQuYXJyb3dNb3ZlU3BlZWRNYXggPSAyMDtcbiAgS2V5QmluZC5hcnJvd0JpbmRpbmdzID0ge1xuICAgIEFycm93VXA6IFswLCAxXSxcbiAgICBBcnJvd0Rvd246IFswLCAtMV0sXG4gICAgQXJyb3dMZWZ0OiBbMSwgMF0sXG4gICAgQXJyb3dSaWdodDogWy0xLCAwXVxuICB9O1xuICBDYW52YXNDb250cm9scy5LZXlCaW5kID0gS2V5QmluZDtcbiAgLyoqXHJcbiAgICogQSB3aWRnZXQtbWFraW5nIGNsYXNzIGZvciBjYW52YXNcclxuICAgKiBAbWVtYmVyb2YgQ29udHJvbGxhYmxlQ2FudmFzXHJcbiAgICogQHByb3Age251bWJlcn0geCAtIHggY29vcmRpbmF0ZVxyXG4gICAqIEBwcm9wIHtudW1iZXJ9IHkgLSB5IGNvb3JkaW5hdGVcclxuICAgKiBAcHJvcCB7bnVtYmVyfSBkeCAtIHdpZHRoXHJcbiAgICogQHByb3Age251bWJlcn0gZHkgLSBoZWlnaHRcclxuICAgKiBAcHJvcCB7bnVtYmVyfSBpbmRleCAtIGVxdWl2YWxlbnQgdG8gQ1NTIHotaW5kZXhcclxuICAgKi9cblxuICB2YXIgQ2FudmFzQnV0dG9uID1cbiAgLyojX19QVVJFX18qL1xuICBmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gQ2FudmFzQnV0dG9uKCkge1xuICAgICAgdmFyIG9wdHMgPSBhcmd1bWVudHMubGVuZ3RoID4gMCAmJiBhcmd1bWVudHNbMF0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1swXSA6IENhbnZhc0J1dHRvbi5kZWZhdWx0T3B0cztcblxuICAgICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIENhbnZhc0J1dHRvbik7XG5cbiAgICAgIHRoaXMueCA9IDA7XG4gICAgICB0aGlzLnkgPSAwO1xuICAgICAgdGhpcy5keCA9IDA7XG4gICAgICB0aGlzLmR5ID0gMDtcbiAgICAgIHRoaXMuaW5kZXggPSAtMTtcbiAgICAgIHRoaXMuZW5hYmxlZCA9IHRydWU7XG4gICAgICB0aGlzLnBzdGF0ZSA9IGZhbHNlO1xuICAgICAgdGhpcy5wb3NpdGlvbiA9IDI7XG4gICAgICBpbmhlcml0KG9wdHMsIENhbnZhc0J1dHRvbi5kZWZhdWx0T3B0cyk7XG5cbiAgICAgIGlmIChbb3B0cy54LCBvcHRzLnksIG9wdHMuZHgsIG9wdHMuZHksIG9wdHMucG9zaXRpb24sIG9wdHMuaW5kZXhdLnNvbWUoZnVuY3Rpb24gKG51bSkge1xuICAgICAgICByZXR1cm4gaXNOYU4obnVtKSB8fCBudW0gPT09ICcnO1xuICAgICAgfSkpIHtcbiAgICAgICAgdGhyb3cgRXJyb3JzLkVOT1ROVU07XG4gICAgICB9XG5cbiAgICAgIHRoaXMueCA9IG9wdHMueCAqIDE7XG4gICAgICB0aGlzLnkgPSBvcHRzLnkgKiAxO1xuICAgICAgdGhpcy5keCA9IG9wdHMuZHggKiAxO1xuICAgICAgdGhpcy5keSA9IG9wdHMuZHkgKiAxO1xuICAgICAgdGhpcy5wb3NpdGlvbiA9IG9wdHMucG9zaXRpb24gfCAwO1xuICAgICAgdGhpcy5pbmRleCA9IG9wdHMuaW5kZXggfCAwO1xuICAgICAgdGhpcy5lbmFibGVkID0gISFvcHRzLmVuYWJsZWQ7XG4gICAgICB0aGlzLl9pZCA9IENhbnZhc0J1dHRvbi5faWRjbnRyKys7XG4gICAgfSAvL2N0b3JcbiAgICAvL0BPdmVycmlkZVxuXG4gICAgLyoqXHJcbiAgICAgKiBDaGVja3MgaWYgYnV0dG9uIHdhcyBleGl0ZWQgYW5kIGRlY2lkZXMgd2hldGhlciB0byBwcm9wYWdhdGVcclxuICAgICAqIEBwYXJhbSBhbnlcclxuICAgICAqL1xuXG5cbiAgICBfY3JlYXRlQ2xhc3MoQ2FudmFzQnV0dG9uLCBbe1xuICAgICAga2V5OiBcImJsdXJcIixcbiAgICAgIHZhbHVlOiBmdW5jdGlvbiBibHVyKCkge1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgIH0gLy9ibHVyXG4gICAgICAvL0BPdmVycmlkZVxuXG4gICAgICAvKipcclxuICAgICAgICogQ2hlY2tzIGlmIGJ1dHRvbiB3YXMgZW50ZXJlZCBhbmQgZGVjaWRlcyB3aGV0aGVyIHRvIHByb3BhZ2F0ZVxyXG4gICAgICAgKiBAcGFyYW0gYW55XHJcbiAgICAgICAqL1xuXG4gICAgfSwge1xuICAgICAga2V5OiBcImZvY3VzXCIsXG4gICAgICB2YWx1ZTogZnVuY3Rpb24gZm9jdXMoKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgIH0gLy9mb2N1c1xuICAgICAgLy9AT3ZlcnJpZGVcblxuICAgICAgLyoqXHJcbiAgICAgICAqIENoZWNrcyBpZiBidXR0b24gd2FzIGNsaWNrZWQgYW5kIGRlY2lkZXMgd2hldGhlciB0byBwcm9wYWdhdGVcclxuICAgICAgICogQHBhcmFtIGFueVxyXG4gICAgICAgKi9cblxuICAgIH0sIHtcbiAgICAgIGtleTogXCJjbGlja1wiLFxuICAgICAgdmFsdWU6IGZ1bmN0aW9uIGNsaWNrKCkge1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgIH0gLy9jbGlja1xuXG4gICAgICAvKipcclxuICAgICAgICogQ2hlY2tzIGlmIHBvaW50ZXIgaXMgYWJvdmUgdGhlIHdpZGdldFxyXG4gICAgICAgKiBAcGFyYW0ge251bWJlcltdfSByZWxhdGl2ZUNvb3Jkc1xyXG4gICAgICAgKiBAbWV0aG9kXHJcbiAgICAgICAqL1xuXG4gICAgfSwge1xuICAgICAga2V5OiBcIl9pc09uXCIsXG4gICAgICB2YWx1ZTogZnVuY3Rpb24gX2lzT24ocmVsYXRpdmVDb29yZHMpIHtcbiAgICAgICAgdmFyIHggPSAodGhpcy5wb3NpdGlvbiAmIE9wdHMuUG9zaXRpb24uRklYRUQpID09PSBPcHRzLlBvc2l0aW9uLkZJWEVEID8gKHRoaXMueCAtIHRoaXMucGFyZW50LnRyYW5zWzBdKSAvIHRoaXMucGFyZW50LnNjbFswXSA6IHRoaXMueCxcbiAgICAgICAgICAgIHkgPSAodGhpcy5wb3NpdGlvbiAmIE9wdHMuUG9zaXRpb24uRklYRUQpID09PSBPcHRzLlBvc2l0aW9uLkZJWEVEID8gKHRoaXMueSAtIHRoaXMucGFyZW50LnRyYW5zWzFdKSAvIHRoaXMucGFyZW50LnNjbFsxXSA6IHRoaXMueSxcbiAgICAgICAgICAgIGR4ID0gKHRoaXMucG9zaXRpb24gJiBPcHRzLlBvc2l0aW9uLlVOU0NBTEFCTEUpID09PSBPcHRzLlBvc2l0aW9uLlVOU0NBTEFCTEUgPyB0aGlzLmR4IC8gdGhpcy5wYXJlbnQuc2NsWzBdIDogdGhpcy5keCxcbiAgICAgICAgICAgIGR5ID0gKHRoaXMucG9zaXRpb24gJiBPcHRzLlBvc2l0aW9uLlVOU0NBTEFCTEUpID09PSBPcHRzLlBvc2l0aW9uLlVOU0NBTEFCTEUgPyB0aGlzLmR5IC8gdGhpcy5wYXJlbnQuc2NsWzFdIDogdGhpcy5keSxcbiAgICAgICAgICAgIG91dCA9IGlzV2l0aGluKFt4LCB5LCBkeCwgZHldLCBbcmVsYXRpdmVDb29yZHNbMF0sIHJlbGF0aXZlQ29vcmRzWzFdXSwgQ2FudmFzQnV0dG9uLnNlbnNpdGl2aXR5KTtcblxuICAgICAgICBpZiAoIW91dCAmJiB0aGlzLnBzdGF0ZSkge1xuICAgICAgICAgIHRoaXMuYmx1cihyZWxhdGl2ZUNvb3Jkcyk7XG4gICAgICAgICAgdGhpcy5wc3RhdGUgPSBmYWxzZTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiBvdXQ7XG4gICAgICB9IC8vX2lzT25cblxuICAgIH1dKTtcblxuICAgIHJldHVybiBDYW52YXNCdXR0b247XG4gIH0oKTsgLy9DYW52YXNCdXR0b25cblxuXG4gIENhbnZhc0J1dHRvbi5zZW5zaXRpdml0eSA9IC4zO1xuICBDYW52YXNCdXR0b24uX2lkY250ciA9IDA7XG4gIC8qKlxyXG4gICAqIERlZmF1bHQgb3B0aW9ucyBmb3IgQ2FudmFzQnV0dG9uXHJcbiAgICogQHJlYWRvbmx5XHJcbiAgICogQHN0YXRpY1xyXG4gICAqL1xuXG4gIENhbnZhc0J1dHRvbi5kZWZhdWx0T3B0cyA9IHtcbiAgICB4OiAwLFxuICAgIHk6IDAsXG4gICAgZHg6IDAsXG4gICAgZHk6IDAsXG4gICAgaW5kZXg6IC0xLFxuICAgIHBzdGF0ZTogZmFsc2UsXG4gICAgZW5hYmxlZDogdHJ1ZSxcbiAgICBwb3NpdGlvbjogMixcbiAgICBwYXJlbnQ6IG5ldyBDb250cm9sbGFibGVDYW52YXMoKVxuICB9O1xuICBDYW52YXNDb250cm9scy5DYW52YXNCdXR0b24gPSBDYW52YXNCdXR0b247XG4gIENvbnRyb2xsYWJsZUNhbnZhcy5DYW52YXNCdXR0b24gPSBDYW52YXNCdXR0b247XG4gIC8qKlxyXG4gICAqIEEgY2xhc3Mgb2ZmZXJpbmcgbWF0aGVtYXRpY2FsIFZlY3RvciB1dGlsaXRpZXNcclxuICAgKiBAaW5uZXJcclxuICAgKiBAY2xhc3NcclxuICAgKiBAcHJvcCB7bnVtYmVyW119IHByb3BzIC0gdmVjdG9yIHZlcnRpY2VzXHJcbiAgICovXG5cbiAgdmFyIFZlY3RvciA9XG4gIC8qI19fUFVSRV9fKi9cbiAgZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIFZlY3RvcigpIHtcbiAgICAgIHZhciBwcm9wcyA9IGFyZ3VtZW50cy5sZW5ndGggPiAwICYmIGFyZ3VtZW50c1swXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzBdIDogW107XG5cbiAgICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBWZWN0b3IpO1xuXG4gICAgICB0aGlzLnByb3BzID0gQXJyYXkuZnJvbShwcm9wcy5tYXAoTnVtYmVyKSk7XG4gICAgfSAvL2N0b3JcblxuICAgIC8qKlxyXG4gICAgICogQWRkIGEgdmVjdG9yIG9yIG51bWJlciB0byBjdXJyZW50IHZlY3RvclxyXG4gICAgICogQG1ldGhvZFxyXG4gICAgICogQHBhcmFtIHtWZWN0b3J8bnVtYmVyfSB0YXJnIC0gdGFyZ2V0XHJcbiAgICAgKiBAcGFyYW0ge251bWJlcn0gc3ViIC0gU2V0IHRvIGAtMWAgdG8gc3Vic3RyYWN0IGluc3RlYWRcclxuICAgICAqIEByZXR1cm5zIGB0aGlzYCBmb3IgbWV0aG9kIGNoYWluaW5nXHJcbiAgICAgKi9cblxuXG4gICAgX2NyZWF0ZUNsYXNzKFZlY3RvciwgW3tcbiAgICAgIGtleTogXCJhZGRcIixcbiAgICAgIHZhbHVlOiBmdW5jdGlvbiBhZGQodGFyZykge1xuICAgICAgICB2YXIgX3RoaXM3ID0gdGhpcztcblxuICAgICAgICB2YXIgc3ViID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgJiYgYXJndW1lbnRzWzFdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMV0gOiAxO1xuXG4gICAgICAgIGlmICh0YXJnIGluc3RhbmNlb2YgVmVjdG9yKSB7XG4gICAgICAgICAgdGhpcy5wcm9wcy5mb3JFYWNoKGZ1bmN0aW9uIChwcm9wLCBpZHgpIHtcbiAgICAgICAgICAgIF90aGlzNy5wcm9wc1tpZHhdICs9IHN1YiAqIHRhcmdbaWR4XTtcbiAgICAgICAgICB9KTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB0aGlzLnByb3BzLmZvckVhY2goZnVuY3Rpb24gKHByb3AsIGlkeCkge1xuICAgICAgICAgICAgX3RoaXM3LnByb3BzW2lkeF0gKz0gc3ViICogdGFyZztcbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgICAgfSAvL2FkZFxuXG4gICAgICAvKipcclxuICAgICAgICogTXVsdGlwbHkgYSB2ZWN0b3Igb3IgbnVtYmVyIHRvIGN1cnJlbnQgdmVjdG9yXHJcbiAgICAgICAqIEBtZXRob2RcclxuICAgICAgICogQHBhcmFtIHtWZWN0b3J8bnVtYmVyfSB0YXJnIC0gdGFyZ2V0XHJcbiAgICAgICAqIEBwYXJhbSB7bnVtYmVyfSBkaXYgLSBTZXQgdG8gYC0xYCB0byBkaXZpZGUgaW5zdGVhZFxyXG4gICAgICAgKiBAcmV0dXJucyBgdGhpc2AgZm9yIG1ldGhvZCBjaGFpbmluZ1xyXG4gICAgICAgKi9cblxuICAgIH0sIHtcbiAgICAgIGtleTogXCJtdWx0XCIsXG4gICAgICB2YWx1ZTogZnVuY3Rpb24gbXVsdCh0YXJnKSB7XG4gICAgICAgIHZhciBfdGhpczggPSB0aGlzO1xuXG4gICAgICAgIHZhciBkaXYgPSBhcmd1bWVudHMubGVuZ3RoID4gMSAmJiBhcmd1bWVudHNbMV0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1sxXSA6IDE7XG5cbiAgICAgICAgaWYgKHRhcmcgaW5zdGFuY2VvZiBWZWN0b3IpIHtcbiAgICAgICAgICB0aGlzLnByb3BzLmZvckVhY2goZnVuY3Rpb24gKHByb3AsIGlkeCkge1xuICAgICAgICAgICAgX3RoaXM4LnByb3BzW2lkeF0gKj0gTWF0aC5wb3codGFyZ1tpZHhdLCBkaXYpO1xuICAgICAgICAgIH0pO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHRoaXMucHJvcHMuZm9yRWFjaChmdW5jdGlvbiAocHJvcCwgaWR4KSB7XG4gICAgICAgICAgICBfdGhpczgucHJvcHNbaWR4XSAqPSBNYXRoLnBvdyh0YXJnLCBkaXYpO1xuICAgICAgICAgIH0pO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgICB9IC8vbXVsdFxuXG4gICAgICAvKipcclxuICAgICAgICogRG90IHByb2R1Y3Qgb2YgMiB2ZWN0b3JzXHJcbiAgICAgICAqIEBtZXRob2RcclxuICAgICAgICogQHBhcmFtIHtWZWN0b3J9IHRhcmcgLSB0YXJnZXRcclxuICAgICAgICogQHJldHVybnMgcHJvZHVjdFxyXG4gICAgICAgKi9cblxuICAgIH0sIHtcbiAgICAgIGtleTogXCJkb3RcIixcbiAgICAgIHZhbHVlOiBmdW5jdGlvbiBkb3QodGFyZykge1xuICAgICAgICByZXR1cm4gdGhpcy5wcm9wcy5yZWR1Y2UoZnVuY3Rpb24gKGFjYywgdmFsLCBpZHgpIHtcbiAgICAgICAgICByZXR1cm4gYWNjICsgdmFsICogdGFyZ1tpZHhdO1xuICAgICAgICB9KTtcbiAgICAgIH0gLy9kb3RcblxuICAgIH1dKTtcblxuICAgIHJldHVybiBWZWN0b3I7XG4gIH0oKTsgLy9WZWN0b3JcblxuXG4gIENhbnZhc0NvbnRyb2xzLlZlY3RvciA9IFZlY3RvcjtcbiAgLyoqXHJcbiAgICogQHByb3Age0hUTUxFbGVtZW50W119IHJlc291cmNlcyAtIEFsbCBIVE1MIHJlc291cmNlIGVsZW1lbnRzIHdpdGggXCJsb2FkXCIgbGlzdGVuZXJzIHRoYXQgd2lsbCBiZSBsb2FkZWQuIGxpa2U6IGF1ZGlvL2ltZ1xyXG4gICAqL1xuXG4gIHZhciBSZXNvdXJjZUxvYWRlciA9XG4gIC8qI19fUFVSRV9fKi9cbiAgZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIFJlc291cmNlTG9hZGVyKHJlc291cmNlcywgb25sb2FkKSB7XG4gICAgICB2YXIgYXV0b2JpbmQgPSBhcmd1bWVudHMubGVuZ3RoID4gMiAmJiBhcmd1bWVudHNbMl0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1syXSA6IGZhbHNlO1xuXG4gICAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgUmVzb3VyY2VMb2FkZXIpO1xuXG4gICAgICB0aGlzLnJlc291cmNlcyA9IFtdO1xuICAgICAgdGhpcy5fbG9hZGNudHIgPSAwO1xuICAgICAgdGhpcy5yZXNvdXJjZXMgPSBBcnJheS5mcm9tKHJlc291cmNlcyk7XG4gICAgICB0aGlzLmxvYWQgPSBvbmxvYWQgfHwgdGhpcy5sb2FkO1xuICAgICAgaWYgKGF1dG9iaW5kKSB0aGlzLmJpbmQodGhpcy5sb2FkKTtcbiAgICB9IC8vY3RvclxuXG4gICAgLyoqXHJcbiAgICAgKiBCaW5kIGxvYWQgZXZlbnRzIGFuZCBhd2FpdCBsb2FkZW5kXHJcbiAgICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBvbmxvYWQ/IC0gY29kZSB0byBleGVjdXRlIG9uY2UgbG9hZGVkXHJcbiAgICAgKi9cblxuXG4gICAgX2NyZWF0ZUNsYXNzKFJlc291cmNlTG9hZGVyLCBbe1xuICAgICAga2V5OiBcImJpbmRcIixcbiAgICAgIHZhbHVlOiBmdW5jdGlvbiBiaW5kKG9ubG9hZCkge1xuICAgICAgICB2YXIgX3RoaXM5ID0gdGhpcztcblxuICAgICAgICBpZiAob25sb2FkKSB0aGlzLmxvYWQgPSBvbmxvYWQ7XG4gICAgICAgIHRoaXMucmVzb3VyY2VzLmZvckVhY2goZnVuY3Rpb24gKHJlcykge1xuICAgICAgICAgIHJlcy5hZGRFdmVudExpc3RlbmVyKFwibG9hZFwiLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICBpZiAoKytfdGhpczkuX2xvYWRjbnRyID09PSBfdGhpczkucmVzb3VyY2VzLmxlbmd0aCkge1xuICAgICAgICAgICAgICBfdGhpczkubG9hZChyZXMsIF90aGlzOS5fbG9hZGNudHIpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0pO1xuICAgICAgICB9KTtcbiAgICAgIH0gLy9iaW5kXG4gICAgICAvL0BPdmVycmlkZVxuXG4gICAgfSwge1xuICAgICAga2V5OiBcImxvYWRcIixcbiAgICAgIHZhbHVlOiBmdW5jdGlvbiBsb2FkKHJlcywgX2xvYWQpIHt9IC8vbG9hZFxuXG4gICAgICAvKipcclxuICAgICAgICogTG9hZCBpbWFnZXMgYnkgVVJMc1xyXG4gICAgICAgKiBAbWV0aG9kXHJcbiAgICAgICAqIEBzdGF0aWNcclxuICAgICAgICogQHBhcmFtIHtzdHJpbmdbXX0gdXJsaXN0IC0gbGlzdCBvZiB1cmxzXHJcbiAgICAgICAqIEBwYXJhbSB7RnVuY3Rpb259IG9ubG9hZCAtIGNhbGxiYWNrXHJcbiAgICAgICAqIEBwYXJhbSB7Ym9vbGVhbn0gYXV0b2JpbmQ9dHJ1ZSAtIGF1dG8gYmluZFxyXG4gICAgICAgKiBAcmV0dXJucyB7UmVzb3VyY2VMb2FkZXJ9IHRoZSBsb2FkZXJcclxuICAgICAgICovXG5cbiAgICB9XSwgW3tcbiAgICAgIGtleTogXCJpbWFnZXNcIixcbiAgICAgIHZhbHVlOiBmdW5jdGlvbiBpbWFnZXModXJsaXN0LCBvbmxvYWQpIHtcbiAgICAgICAgdmFyIGF1dG9iaW5kID0gYXJndW1lbnRzLmxlbmd0aCA+IDIgJiYgYXJndW1lbnRzWzJdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMl0gOiB0cnVlO1xuICAgICAgICB2YXIgaW1nbGlzdCA9IFtdO1xuICAgICAgICB2YXIgX2l0ZXJhdG9yTm9ybWFsQ29tcGxldGlvbjggPSB0cnVlO1xuICAgICAgICB2YXIgX2RpZEl0ZXJhdG9yRXJyb3I4ID0gZmFsc2U7XG4gICAgICAgIHZhciBfaXRlcmF0b3JFcnJvcjggPSB1bmRlZmluZWQ7XG5cbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICBmb3IgKHZhciBfaXRlcmF0b3I4ID0gdXJsaXN0W1N5bWJvbC5pdGVyYXRvcl0oKSwgX3N0ZXA4OyAhKF9pdGVyYXRvck5vcm1hbENvbXBsZXRpb244ID0gKF9zdGVwOCA9IF9pdGVyYXRvcjgubmV4dCgpKS5kb25lKTsgX2l0ZXJhdG9yTm9ybWFsQ29tcGxldGlvbjggPSB0cnVlKSB7XG4gICAgICAgICAgICB2YXIgdXJsID0gX3N0ZXA4LnZhbHVlO1xuICAgICAgICAgICAgdmFyIGltZyA9IG5ldyBJbWFnZSgpO1xuICAgICAgICAgICAgaW1nLnNyYyA9IHVybDtcbiAgICAgICAgICAgIGltZ2xpc3QucHVzaChpbWcpO1xuICAgICAgICAgIH1cbiAgICAgICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICAgICAgX2RpZEl0ZXJhdG9yRXJyb3I4ID0gdHJ1ZTtcbiAgICAgICAgICBfaXRlcmF0b3JFcnJvcjggPSBlcnI7XG4gICAgICAgIH0gZmluYWxseSB7XG4gICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGlmICghX2l0ZXJhdG9yTm9ybWFsQ29tcGxldGlvbjggJiYgX2l0ZXJhdG9yOC5yZXR1cm4gIT0gbnVsbCkge1xuICAgICAgICAgICAgICBfaXRlcmF0b3I4LnJldHVybigpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0gZmluYWxseSB7XG4gICAgICAgICAgICBpZiAoX2RpZEl0ZXJhdG9yRXJyb3I4KSB7XG4gICAgICAgICAgICAgIHRocm93IF9pdGVyYXRvckVycm9yODtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gbmV3IFJlc291cmNlTG9hZGVyKGltZ2xpc3QsIG9ubG9hZCwgYXV0b2JpbmQpO1xuICAgICAgfSAvL2ltYWdlc1xuXG4gICAgICAvKipcclxuICAgICAgICogTG9hZCBhdWRpbyBieSBVUkxzXHJcbiAgICAgICAqIEBtZXRob2RcclxuICAgICAgICogQHN0YXRpY1xyXG4gICAgICAgKiBAcGFyYW0ge3N0cmluZ1tdfSB1cmxpc3QgLSBsaXN0IG9mIHVybHNcclxuICAgICAgICogQHBhcmFtIHtGdW5jdGlvbn0gb25sb2FkIC0gY2FsbGJhY2tcclxuICAgICAgICogQHBhcmFtIHtib29sZWFufSBhdXRvYmluZD10cnVlIC0gYXV0byBiaW5kXHJcbiAgICAgICAqIEByZXR1cm5zIHtSZXNvdXJjZUxvYWRlcn0gdGhlIGxvYWRlclxyXG4gICAgICAgKi9cblxuICAgIH0sIHtcbiAgICAgIGtleTogXCJhdWRpb3NcIixcbiAgICAgIHZhbHVlOiBmdW5jdGlvbiBhdWRpb3ModXJsaXN0LCBvbmxvYWQpIHtcbiAgICAgICAgdmFyIGF1dG9iaW5kID0gYXJndW1lbnRzLmxlbmd0aCA+IDIgJiYgYXJndW1lbnRzWzJdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMl0gOiB0cnVlO1xuICAgICAgICB2YXIgYXVkaW9saXN0ID0gW107XG4gICAgICAgIHZhciBfaXRlcmF0b3JOb3JtYWxDb21wbGV0aW9uOSA9IHRydWU7XG4gICAgICAgIHZhciBfZGlkSXRlcmF0b3JFcnJvcjkgPSBmYWxzZTtcbiAgICAgICAgdmFyIF9pdGVyYXRvckVycm9yOSA9IHVuZGVmaW5lZDtcblxuICAgICAgICB0cnkge1xuICAgICAgICAgIGZvciAodmFyIF9pdGVyYXRvcjkgPSB1cmxpc3RbU3ltYm9sLml0ZXJhdG9yXSgpLCBfc3RlcDk7ICEoX2l0ZXJhdG9yTm9ybWFsQ29tcGxldGlvbjkgPSAoX3N0ZXA5ID0gX2l0ZXJhdG9yOS5uZXh0KCkpLmRvbmUpOyBfaXRlcmF0b3JOb3JtYWxDb21wbGV0aW9uOSA9IHRydWUpIHtcbiAgICAgICAgICAgIHZhciB1cmwgPSBfc3RlcDkudmFsdWU7XG4gICAgICAgICAgICB2YXIgYXVkaW8gPSBuZXcgQXVkaW8odXJsKTtcbiAgICAgICAgICAgIGF1ZGlvLmxvYWQoKTtcbiAgICAgICAgICAgIGF1ZGlvbGlzdC5wdXNoKGF1ZGlvKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgICAgIF9kaWRJdGVyYXRvckVycm9yOSA9IHRydWU7XG4gICAgICAgICAgX2l0ZXJhdG9yRXJyb3I5ID0gZXJyO1xuICAgICAgICB9IGZpbmFsbHkge1xuICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICBpZiAoIV9pdGVyYXRvck5vcm1hbENvbXBsZXRpb245ICYmIF9pdGVyYXRvcjkucmV0dXJuICE9IG51bGwpIHtcbiAgICAgICAgICAgICAgX2l0ZXJhdG9yOS5yZXR1cm4oKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9IGZpbmFsbHkge1xuICAgICAgICAgICAgaWYgKF9kaWRJdGVyYXRvckVycm9yOSkge1xuICAgICAgICAgICAgICB0aHJvdyBfaXRlcmF0b3JFcnJvcjk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIG5ldyBSZXNvdXJjZUxvYWRlcihhdWRpb2xpc3QsIG9ubG9hZCwgYXV0b2JpbmQpO1xuICAgICAgfSAvL2F1ZGlvc1xuXG4gICAgfV0pO1xuXG4gICAgcmV0dXJuIFJlc291cmNlTG9hZGVyO1xuICB9KCk7IC8vUmVzb3VyY2VMb2FkZXJcblxuXG4gIENhbnZhc0NvbnRyb2xzLlJlc291cmNlTG9hZGVyID0gUmVzb3VyY2VMb2FkZXI7XG59KShDYW52YXNDb250cm9scyA9IGV4cG9ydHMuQ2FudmFzQ29udHJvbHMgfHwgKGV4cG9ydHMuQ2FudmFzQ29udHJvbHMgPSB7fSkpOyAvL0NhbnZhc0NvbnRyb2xzXG5cblxuZXhwb3J0cy5kZWZhdWx0ID0gQ2FudmFzQ29udHJvbHMuQ29udHJvbGxhYmxlQ2FudmFzOyIsIlwidXNlIHN0cmljdFwiO1xuXG5yZXF1aXJlKFwiY29yZS1qcy9lczZcIik7XG5cbnJlcXVpcmUoXCJjb3JlLWpzL2ZuL2FycmF5L2luY2x1ZGVzXCIpO1xuXG5yZXF1aXJlKFwiY29yZS1qcy9mbi9zdHJpbmcvcGFkLXN0YXJ0XCIpO1xuXG5yZXF1aXJlKFwiY29yZS1qcy9mbi9zdHJpbmcvcGFkLWVuZFwiKTtcblxucmVxdWlyZShcImNvcmUtanMvZm4vc3ltYm9sL2FzeW5jLWl0ZXJhdG9yXCIpO1xuXG5yZXF1aXJlKFwiY29yZS1qcy9mbi9vYmplY3QvZ2V0LW93bi1wcm9wZXJ0eS1kZXNjcmlwdG9yc1wiKTtcblxucmVxdWlyZShcImNvcmUtanMvZm4vb2JqZWN0L3ZhbHVlc1wiKTtcblxucmVxdWlyZShcImNvcmUtanMvZm4vb2JqZWN0L2VudHJpZXNcIik7XG5cbnJlcXVpcmUoXCJjb3JlLWpzL2ZuL3Byb21pc2UvZmluYWxseVwiKTtcblxucmVxdWlyZShcImNvcmUtanMvd2ViXCIpO1xuXG5yZXF1aXJlKFwicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lXCIpO1xuXG5pZiAoZ2xvYmFsLl9iYWJlbFBvbHlmaWxsICYmIHR5cGVvZiBjb25zb2xlICE9PSBcInVuZGVmaW5lZFwiICYmIGNvbnNvbGUud2Fybikge1xuICBjb25zb2xlLndhcm4oXCJAYmFiZWwvcG9seWZpbGwgaXMgbG9hZGVkIG1vcmUgdGhhbiBvbmNlIG9uIHRoaXMgcGFnZS4gVGhpcyBpcyBwcm9iYWJseSBub3QgZGVzaXJhYmxlL2ludGVuZGVkIFwiICsgXCJhbmQgbWF5IGhhdmUgY29uc2VxdWVuY2VzIGlmIGRpZmZlcmVudCB2ZXJzaW9ucyBvZiB0aGUgcG9seWZpbGxzIGFyZSBhcHBsaWVkIHNlcXVlbnRpYWxseS4gXCIgKyBcIklmIHlvdSBkbyBuZWVkIHRvIGxvYWQgdGhlIHBvbHlmaWxsIG1vcmUgdGhhbiBvbmNlLCB1c2UgQGJhYmVsL3BvbHlmaWxsL25vQ29uZmxpY3QgXCIgKyBcImluc3RlYWQgdG8gYnlwYXNzIHRoZSB3YXJuaW5nLlwiKTtcbn1cblxuZ2xvYmFsLl9iYWJlbFBvbHlmaWxsID0gdHJ1ZTsiLCJyZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5zeW1ib2wnKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2Lm9iamVjdC5jcmVhdGUnKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2Lm9iamVjdC5kZWZpbmUtcHJvcGVydHknKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2Lm9iamVjdC5kZWZpbmUtcHJvcGVydGllcycpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYub2JqZWN0LmdldC1vd24tcHJvcGVydHktZGVzY3JpcHRvcicpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYub2JqZWN0LmdldC1wcm90b3R5cGUtb2YnKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2Lm9iamVjdC5rZXlzJyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5vYmplY3QuZ2V0LW93bi1wcm9wZXJ0eS1uYW1lcycpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYub2JqZWN0LmZyZWV6ZScpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYub2JqZWN0LnNlYWwnKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2Lm9iamVjdC5wcmV2ZW50LWV4dGVuc2lvbnMnKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2Lm9iamVjdC5pcy1mcm96ZW4nKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2Lm9iamVjdC5pcy1zZWFsZWQnKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2Lm9iamVjdC5pcy1leHRlbnNpYmxlJyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5vYmplY3QuYXNzaWduJyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5vYmplY3QuaXMnKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2Lm9iamVjdC5zZXQtcHJvdG90eXBlLW9mJyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5vYmplY3QudG8tc3RyaW5nJyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5mdW5jdGlvbi5iaW5kJyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5mdW5jdGlvbi5uYW1lJyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5mdW5jdGlvbi5oYXMtaW5zdGFuY2UnKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2LnBhcnNlLWludCcpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYucGFyc2UtZmxvYXQnKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2Lm51bWJlci5jb25zdHJ1Y3RvcicpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYubnVtYmVyLnRvLWZpeGVkJyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5udW1iZXIudG8tcHJlY2lzaW9uJyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5udW1iZXIuZXBzaWxvbicpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYubnVtYmVyLmlzLWZpbml0ZScpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYubnVtYmVyLmlzLWludGVnZXInKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2Lm51bWJlci5pcy1uYW4nKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2Lm51bWJlci5pcy1zYWZlLWludGVnZXInKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2Lm51bWJlci5tYXgtc2FmZS1pbnRlZ2VyJyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5udW1iZXIubWluLXNhZmUtaW50ZWdlcicpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYubnVtYmVyLnBhcnNlLWZsb2F0Jyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5udW1iZXIucGFyc2UtaW50Jyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5tYXRoLmFjb3NoJyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5tYXRoLmFzaW5oJyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5tYXRoLmF0YW5oJyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5tYXRoLmNicnQnKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2Lm1hdGguY2x6MzInKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2Lm1hdGguY29zaCcpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYubWF0aC5leHBtMScpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYubWF0aC5mcm91bmQnKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2Lm1hdGguaHlwb3QnKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2Lm1hdGguaW11bCcpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYubWF0aC5sb2cxMCcpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYubWF0aC5sb2cxcCcpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYubWF0aC5sb2cyJyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5tYXRoLnNpZ24nKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2Lm1hdGguc2luaCcpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYubWF0aC50YW5oJyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5tYXRoLnRydW5jJyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5zdHJpbmcuZnJvbS1jb2RlLXBvaW50Jyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5zdHJpbmcucmF3Jyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5zdHJpbmcudHJpbScpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYuc3RyaW5nLml0ZXJhdG9yJyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5zdHJpbmcuY29kZS1wb2ludC1hdCcpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYuc3RyaW5nLmVuZHMtd2l0aCcpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYuc3RyaW5nLmluY2x1ZGVzJyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5zdHJpbmcucmVwZWF0Jyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5zdHJpbmcuc3RhcnRzLXdpdGgnKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2LnN0cmluZy5hbmNob3InKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2LnN0cmluZy5iaWcnKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2LnN0cmluZy5ibGluaycpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYuc3RyaW5nLmJvbGQnKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2LnN0cmluZy5maXhlZCcpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYuc3RyaW5nLmZvbnRjb2xvcicpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYuc3RyaW5nLmZvbnRzaXplJyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5zdHJpbmcuaXRhbGljcycpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYuc3RyaW5nLmxpbmsnKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2LnN0cmluZy5zbWFsbCcpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYuc3RyaW5nLnN0cmlrZScpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYuc3RyaW5nLnN1YicpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYuc3RyaW5nLnN1cCcpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYuZGF0ZS5ub3cnKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2LmRhdGUudG8tanNvbicpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYuZGF0ZS50by1pc28tc3RyaW5nJyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5kYXRlLnRvLXN0cmluZycpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYuZGF0ZS50by1wcmltaXRpdmUnKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2LmFycmF5LmlzLWFycmF5Jyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5hcnJheS5mcm9tJyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5hcnJheS5vZicpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYuYXJyYXkuam9pbicpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYuYXJyYXkuc2xpY2UnKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2LmFycmF5LnNvcnQnKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2LmFycmF5LmZvci1lYWNoJyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5hcnJheS5tYXAnKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2LmFycmF5LmZpbHRlcicpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYuYXJyYXkuc29tZScpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYuYXJyYXkuZXZlcnknKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2LmFycmF5LnJlZHVjZScpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYuYXJyYXkucmVkdWNlLXJpZ2h0Jyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5hcnJheS5pbmRleC1vZicpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYuYXJyYXkubGFzdC1pbmRleC1vZicpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYuYXJyYXkuY29weS13aXRoaW4nKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2LmFycmF5LmZpbGwnKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2LmFycmF5LmZpbmQnKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2LmFycmF5LmZpbmQtaW5kZXgnKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2LmFycmF5LnNwZWNpZXMnKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2LmFycmF5Lml0ZXJhdG9yJyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5yZWdleHAuY29uc3RydWN0b3InKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2LnJlZ2V4cC5leGVjJyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5yZWdleHAudG8tc3RyaW5nJyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5yZWdleHAuZmxhZ3MnKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2LnJlZ2V4cC5tYXRjaCcpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYucmVnZXhwLnJlcGxhY2UnKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2LnJlZ2V4cC5zZWFyY2gnKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2LnJlZ2V4cC5zcGxpdCcpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYucHJvbWlzZScpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYubWFwJyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5zZXQnKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2LndlYWstbWFwJyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi53ZWFrLXNldCcpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYudHlwZWQuYXJyYXktYnVmZmVyJyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi50eXBlZC5kYXRhLXZpZXcnKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2LnR5cGVkLmludDgtYXJyYXknKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2LnR5cGVkLnVpbnQ4LWFycmF5Jyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi50eXBlZC51aW50OC1jbGFtcGVkLWFycmF5Jyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi50eXBlZC5pbnQxNi1hcnJheScpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYudHlwZWQudWludDE2LWFycmF5Jyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi50eXBlZC5pbnQzMi1hcnJheScpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYudHlwZWQudWludDMyLWFycmF5Jyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi50eXBlZC5mbG9hdDMyLWFycmF5Jyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi50eXBlZC5mbG9hdDY0LWFycmF5Jyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5yZWZsZWN0LmFwcGx5Jyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5yZWZsZWN0LmNvbnN0cnVjdCcpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYucmVmbGVjdC5kZWZpbmUtcHJvcGVydHknKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2LnJlZmxlY3QuZGVsZXRlLXByb3BlcnR5Jyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5yZWZsZWN0LmVudW1lcmF0ZScpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYucmVmbGVjdC5nZXQnKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2LnJlZmxlY3QuZ2V0LW93bi1wcm9wZXJ0eS1kZXNjcmlwdG9yJyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5yZWZsZWN0LmdldC1wcm90b3R5cGUtb2YnKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2LnJlZmxlY3QuaGFzJyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5yZWZsZWN0LmlzLWV4dGVuc2libGUnKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2LnJlZmxlY3Qub3duLWtleXMnKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2LnJlZmxlY3QucHJldmVudC1leHRlbnNpb25zJyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5yZWZsZWN0LnNldCcpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYucmVmbGVjdC5zZXQtcHJvdG90eXBlLW9mJyk7XG5tb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4uL21vZHVsZXMvX2NvcmUnKTtcbiIsInJlcXVpcmUoJy4uLy4uL21vZHVsZXMvZXM3LmFycmF5LmluY2x1ZGVzJyk7XG5tb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4uLy4uL21vZHVsZXMvX2NvcmUnKS5BcnJheS5pbmNsdWRlcztcbiIsInJlcXVpcmUoJy4uLy4uL21vZHVsZXMvZXM3Lm9iamVjdC5lbnRyaWVzJyk7XG5tb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4uLy4uL21vZHVsZXMvX2NvcmUnKS5PYmplY3QuZW50cmllcztcbiIsInJlcXVpcmUoJy4uLy4uL21vZHVsZXMvZXM3Lm9iamVjdC5nZXQtb3duLXByb3BlcnR5LWRlc2NyaXB0b3JzJyk7XG5tb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4uLy4uL21vZHVsZXMvX2NvcmUnKS5PYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycztcbiIsInJlcXVpcmUoJy4uLy4uL21vZHVsZXMvZXM3Lm9iamVjdC52YWx1ZXMnKTtcbm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi4vLi4vbW9kdWxlcy9fY29yZScpLk9iamVjdC52YWx1ZXM7XG4iLCIndXNlIHN0cmljdCc7XG5yZXF1aXJlKCcuLi8uLi9tb2R1bGVzL2VzNi5wcm9taXNlJyk7XG5yZXF1aXJlKCcuLi8uLi9tb2R1bGVzL2VzNy5wcm9taXNlLmZpbmFsbHknKTtcbm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi4vLi4vbW9kdWxlcy9fY29yZScpLlByb21pc2VbJ2ZpbmFsbHknXTtcbiIsInJlcXVpcmUoJy4uLy4uL21vZHVsZXMvZXM3LnN0cmluZy5wYWQtZW5kJyk7XG5tb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4uLy4uL21vZHVsZXMvX2NvcmUnKS5TdHJpbmcucGFkRW5kO1xuIiwicmVxdWlyZSgnLi4vLi4vbW9kdWxlcy9lczcuc3RyaW5nLnBhZC1zdGFydCcpO1xubW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuLi8uLi9tb2R1bGVzL19jb3JlJykuU3RyaW5nLnBhZFN0YXJ0O1xuIiwicmVxdWlyZSgnLi4vLi4vbW9kdWxlcy9lczcuc3ltYm9sLmFzeW5jLWl0ZXJhdG9yJyk7XG5tb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4uLy4uL21vZHVsZXMvX3drcy1leHQnKS5mKCdhc3luY0l0ZXJhdG9yJyk7XG4iLCJtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdCkge1xuICBpZiAodHlwZW9mIGl0ICE9ICdmdW5jdGlvbicpIHRocm93IFR5cGVFcnJvcihpdCArICcgaXMgbm90IGEgZnVuY3Rpb24hJyk7XG4gIHJldHVybiBpdDtcbn07XG4iLCJ2YXIgY29mID0gcmVxdWlyZSgnLi9fY29mJyk7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdCwgbXNnKSB7XG4gIGlmICh0eXBlb2YgaXQgIT0gJ251bWJlcicgJiYgY29mKGl0KSAhPSAnTnVtYmVyJykgdGhyb3cgVHlwZUVycm9yKG1zZyk7XG4gIHJldHVybiAraXQ7XG59O1xuIiwiLy8gMjIuMS4zLjMxIEFycmF5LnByb3RvdHlwZVtAQHVuc2NvcGFibGVzXVxudmFyIFVOU0NPUEFCTEVTID0gcmVxdWlyZSgnLi9fd2tzJykoJ3Vuc2NvcGFibGVzJyk7XG52YXIgQXJyYXlQcm90byA9IEFycmF5LnByb3RvdHlwZTtcbmlmIChBcnJheVByb3RvW1VOU0NPUEFCTEVTXSA9PSB1bmRlZmluZWQpIHJlcXVpcmUoJy4vX2hpZGUnKShBcnJheVByb3RvLCBVTlNDT1BBQkxFUywge30pO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoa2V5KSB7XG4gIEFycmF5UHJvdG9bVU5TQ09QQUJMRVNdW2tleV0gPSB0cnVlO1xufTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciBhdCA9IHJlcXVpcmUoJy4vX3N0cmluZy1hdCcpKHRydWUpO1xuXG4gLy8gYEFkdmFuY2VTdHJpbmdJbmRleGAgYWJzdHJhY3Qgb3BlcmF0aW9uXG4vLyBodHRwczovL3RjMzkuZ2l0aHViLmlvL2VjbWEyNjIvI3NlYy1hZHZhbmNlc3RyaW5naW5kZXhcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKFMsIGluZGV4LCB1bmljb2RlKSB7XG4gIHJldHVybiBpbmRleCArICh1bmljb2RlID8gYXQoUywgaW5kZXgpLmxlbmd0aCA6IDEpO1xufTtcbiIsIm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0LCBDb25zdHJ1Y3RvciwgbmFtZSwgZm9yYmlkZGVuRmllbGQpIHtcbiAgaWYgKCEoaXQgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikgfHwgKGZvcmJpZGRlbkZpZWxkICE9PSB1bmRlZmluZWQgJiYgZm9yYmlkZGVuRmllbGQgaW4gaXQpKSB7XG4gICAgdGhyb3cgVHlwZUVycm9yKG5hbWUgKyAnOiBpbmNvcnJlY3QgaW52b2NhdGlvbiEnKTtcbiAgfSByZXR1cm4gaXQ7XG59O1xuIiwidmFyIGlzT2JqZWN0ID0gcmVxdWlyZSgnLi9faXMtb2JqZWN0Jyk7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdCkge1xuICBpZiAoIWlzT2JqZWN0KGl0KSkgdGhyb3cgVHlwZUVycm9yKGl0ICsgJyBpcyBub3QgYW4gb2JqZWN0IScpO1xuICByZXR1cm4gaXQ7XG59O1xuIiwiLy8gMjIuMS4zLjMgQXJyYXkucHJvdG90eXBlLmNvcHlXaXRoaW4odGFyZ2V0LCBzdGFydCwgZW5kID0gdGhpcy5sZW5ndGgpXG4ndXNlIHN0cmljdCc7XG52YXIgdG9PYmplY3QgPSByZXF1aXJlKCcuL190by1vYmplY3QnKTtcbnZhciB0b0Fic29sdXRlSW5kZXggPSByZXF1aXJlKCcuL190by1hYnNvbHV0ZS1pbmRleCcpO1xudmFyIHRvTGVuZ3RoID0gcmVxdWlyZSgnLi9fdG8tbGVuZ3RoJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gW10uY29weVdpdGhpbiB8fCBmdW5jdGlvbiBjb3B5V2l0aGluKHRhcmdldCAvKiA9IDAgKi8sIHN0YXJ0IC8qID0gMCwgZW5kID0gQGxlbmd0aCAqLykge1xuICB2YXIgTyA9IHRvT2JqZWN0KHRoaXMpO1xuICB2YXIgbGVuID0gdG9MZW5ndGgoTy5sZW5ndGgpO1xuICB2YXIgdG8gPSB0b0Fic29sdXRlSW5kZXgodGFyZ2V0LCBsZW4pO1xuICB2YXIgZnJvbSA9IHRvQWJzb2x1dGVJbmRleChzdGFydCwgbGVuKTtcbiAgdmFyIGVuZCA9IGFyZ3VtZW50cy5sZW5ndGggPiAyID8gYXJndW1lbnRzWzJdIDogdW5kZWZpbmVkO1xuICB2YXIgY291bnQgPSBNYXRoLm1pbigoZW5kID09PSB1bmRlZmluZWQgPyBsZW4gOiB0b0Fic29sdXRlSW5kZXgoZW5kLCBsZW4pKSAtIGZyb20sIGxlbiAtIHRvKTtcbiAgdmFyIGluYyA9IDE7XG4gIGlmIChmcm9tIDwgdG8gJiYgdG8gPCBmcm9tICsgY291bnQpIHtcbiAgICBpbmMgPSAtMTtcbiAgICBmcm9tICs9IGNvdW50IC0gMTtcbiAgICB0byArPSBjb3VudCAtIDE7XG4gIH1cbiAgd2hpbGUgKGNvdW50LS0gPiAwKSB7XG4gICAgaWYgKGZyb20gaW4gTykgT1t0b10gPSBPW2Zyb21dO1xuICAgIGVsc2UgZGVsZXRlIE9bdG9dO1xuICAgIHRvICs9IGluYztcbiAgICBmcm9tICs9IGluYztcbiAgfSByZXR1cm4gTztcbn07XG4iLCIvLyAyMi4xLjMuNiBBcnJheS5wcm90b3R5cGUuZmlsbCh2YWx1ZSwgc3RhcnQgPSAwLCBlbmQgPSB0aGlzLmxlbmd0aClcbid1c2Ugc3RyaWN0JztcbnZhciB0b09iamVjdCA9IHJlcXVpcmUoJy4vX3RvLW9iamVjdCcpO1xudmFyIHRvQWJzb2x1dGVJbmRleCA9IHJlcXVpcmUoJy4vX3RvLWFic29sdXRlLWluZGV4Jyk7XG52YXIgdG9MZW5ndGggPSByZXF1aXJlKCcuL190by1sZW5ndGgnKTtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gZmlsbCh2YWx1ZSAvKiAsIHN0YXJ0ID0gMCwgZW5kID0gQGxlbmd0aCAqLykge1xuICB2YXIgTyA9IHRvT2JqZWN0KHRoaXMpO1xuICB2YXIgbGVuZ3RoID0gdG9MZW5ndGgoTy5sZW5ndGgpO1xuICB2YXIgYUxlbiA9IGFyZ3VtZW50cy5sZW5ndGg7XG4gIHZhciBpbmRleCA9IHRvQWJzb2x1dGVJbmRleChhTGVuID4gMSA/IGFyZ3VtZW50c1sxXSA6IHVuZGVmaW5lZCwgbGVuZ3RoKTtcbiAgdmFyIGVuZCA9IGFMZW4gPiAyID8gYXJndW1lbnRzWzJdIDogdW5kZWZpbmVkO1xuICB2YXIgZW5kUG9zID0gZW5kID09PSB1bmRlZmluZWQgPyBsZW5ndGggOiB0b0Fic29sdXRlSW5kZXgoZW5kLCBsZW5ndGgpO1xuICB3aGlsZSAoZW5kUG9zID4gaW5kZXgpIE9baW5kZXgrK10gPSB2YWx1ZTtcbiAgcmV0dXJuIE87XG59O1xuIiwiLy8gZmFsc2UgLT4gQXJyYXkjaW5kZXhPZlxuLy8gdHJ1ZSAgLT4gQXJyYXkjaW5jbHVkZXNcbnZhciB0b0lPYmplY3QgPSByZXF1aXJlKCcuL190by1pb2JqZWN0Jyk7XG52YXIgdG9MZW5ndGggPSByZXF1aXJlKCcuL190by1sZW5ndGgnKTtcbnZhciB0b0Fic29sdXRlSW5kZXggPSByZXF1aXJlKCcuL190by1hYnNvbHV0ZS1pbmRleCcpO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoSVNfSU5DTFVERVMpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uICgkdGhpcywgZWwsIGZyb21JbmRleCkge1xuICAgIHZhciBPID0gdG9JT2JqZWN0KCR0aGlzKTtcbiAgICB2YXIgbGVuZ3RoID0gdG9MZW5ndGgoTy5sZW5ndGgpO1xuICAgIHZhciBpbmRleCA9IHRvQWJzb2x1dGVJbmRleChmcm9tSW5kZXgsIGxlbmd0aCk7XG4gICAgdmFyIHZhbHVlO1xuICAgIC8vIEFycmF5I2luY2x1ZGVzIHVzZXMgU2FtZVZhbHVlWmVybyBlcXVhbGl0eSBhbGdvcml0aG1cbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tc2VsZi1jb21wYXJlXG4gICAgaWYgKElTX0lOQ0xVREVTICYmIGVsICE9IGVsKSB3aGlsZSAobGVuZ3RoID4gaW5kZXgpIHtcbiAgICAgIHZhbHVlID0gT1tpbmRleCsrXTtcbiAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1zZWxmLWNvbXBhcmVcbiAgICAgIGlmICh2YWx1ZSAhPSB2YWx1ZSkgcmV0dXJuIHRydWU7XG4gICAgLy8gQXJyYXkjaW5kZXhPZiBpZ25vcmVzIGhvbGVzLCBBcnJheSNpbmNsdWRlcyAtIG5vdFxuICAgIH0gZWxzZSBmb3IgKDtsZW5ndGggPiBpbmRleDsgaW5kZXgrKykgaWYgKElTX0lOQ0xVREVTIHx8IGluZGV4IGluIE8pIHtcbiAgICAgIGlmIChPW2luZGV4XSA9PT0gZWwpIHJldHVybiBJU19JTkNMVURFUyB8fCBpbmRleCB8fCAwO1xuICAgIH0gcmV0dXJuICFJU19JTkNMVURFUyAmJiAtMTtcbiAgfTtcbn07XG4iLCIvLyAwIC0+IEFycmF5I2ZvckVhY2hcbi8vIDEgLT4gQXJyYXkjbWFwXG4vLyAyIC0+IEFycmF5I2ZpbHRlclxuLy8gMyAtPiBBcnJheSNzb21lXG4vLyA0IC0+IEFycmF5I2V2ZXJ5XG4vLyA1IC0+IEFycmF5I2ZpbmRcbi8vIDYgLT4gQXJyYXkjZmluZEluZGV4XG52YXIgY3R4ID0gcmVxdWlyZSgnLi9fY3R4Jyk7XG52YXIgSU9iamVjdCA9IHJlcXVpcmUoJy4vX2lvYmplY3QnKTtcbnZhciB0b09iamVjdCA9IHJlcXVpcmUoJy4vX3RvLW9iamVjdCcpO1xudmFyIHRvTGVuZ3RoID0gcmVxdWlyZSgnLi9fdG8tbGVuZ3RoJyk7XG52YXIgYXNjID0gcmVxdWlyZSgnLi9fYXJyYXktc3BlY2llcy1jcmVhdGUnKTtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKFRZUEUsICRjcmVhdGUpIHtcbiAgdmFyIElTX01BUCA9IFRZUEUgPT0gMTtcbiAgdmFyIElTX0ZJTFRFUiA9IFRZUEUgPT0gMjtcbiAgdmFyIElTX1NPTUUgPSBUWVBFID09IDM7XG4gIHZhciBJU19FVkVSWSA9IFRZUEUgPT0gNDtcbiAgdmFyIElTX0ZJTkRfSU5ERVggPSBUWVBFID09IDY7XG4gIHZhciBOT19IT0xFUyA9IFRZUEUgPT0gNSB8fCBJU19GSU5EX0lOREVYO1xuICB2YXIgY3JlYXRlID0gJGNyZWF0ZSB8fCBhc2M7XG4gIHJldHVybiBmdW5jdGlvbiAoJHRoaXMsIGNhbGxiYWNrZm4sIHRoYXQpIHtcbiAgICB2YXIgTyA9IHRvT2JqZWN0KCR0aGlzKTtcbiAgICB2YXIgc2VsZiA9IElPYmplY3QoTyk7XG4gICAgdmFyIGYgPSBjdHgoY2FsbGJhY2tmbiwgdGhhdCwgMyk7XG4gICAgdmFyIGxlbmd0aCA9IHRvTGVuZ3RoKHNlbGYubGVuZ3RoKTtcbiAgICB2YXIgaW5kZXggPSAwO1xuICAgIHZhciByZXN1bHQgPSBJU19NQVAgPyBjcmVhdGUoJHRoaXMsIGxlbmd0aCkgOiBJU19GSUxURVIgPyBjcmVhdGUoJHRoaXMsIDApIDogdW5kZWZpbmVkO1xuICAgIHZhciB2YWwsIHJlcztcbiAgICBmb3IgKDtsZW5ndGggPiBpbmRleDsgaW5kZXgrKykgaWYgKE5PX0hPTEVTIHx8IGluZGV4IGluIHNlbGYpIHtcbiAgICAgIHZhbCA9IHNlbGZbaW5kZXhdO1xuICAgICAgcmVzID0gZih2YWwsIGluZGV4LCBPKTtcbiAgICAgIGlmIChUWVBFKSB7XG4gICAgICAgIGlmIChJU19NQVApIHJlc3VsdFtpbmRleF0gPSByZXM7ICAgLy8gbWFwXG4gICAgICAgIGVsc2UgaWYgKHJlcykgc3dpdGNoIChUWVBFKSB7XG4gICAgICAgICAgY2FzZSAzOiByZXR1cm4gdHJ1ZTsgICAgICAgICAgICAgLy8gc29tZVxuICAgICAgICAgIGNhc2UgNTogcmV0dXJuIHZhbDsgICAgICAgICAgICAgIC8vIGZpbmRcbiAgICAgICAgICBjYXNlIDY6IHJldHVybiBpbmRleDsgICAgICAgICAgICAvLyBmaW5kSW5kZXhcbiAgICAgICAgICBjYXNlIDI6IHJlc3VsdC5wdXNoKHZhbCk7ICAgICAgICAvLyBmaWx0ZXJcbiAgICAgICAgfSBlbHNlIGlmIChJU19FVkVSWSkgcmV0dXJuIGZhbHNlOyAvLyBldmVyeVxuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gSVNfRklORF9JTkRFWCA/IC0xIDogSVNfU09NRSB8fCBJU19FVkVSWSA/IElTX0VWRVJZIDogcmVzdWx0O1xuICB9O1xufTtcbiIsInZhciBhRnVuY3Rpb24gPSByZXF1aXJlKCcuL19hLWZ1bmN0aW9uJyk7XG52YXIgdG9PYmplY3QgPSByZXF1aXJlKCcuL190by1vYmplY3QnKTtcbnZhciBJT2JqZWN0ID0gcmVxdWlyZSgnLi9faW9iamVjdCcpO1xudmFyIHRvTGVuZ3RoID0gcmVxdWlyZSgnLi9fdG8tbGVuZ3RoJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKHRoYXQsIGNhbGxiYWNrZm4sIGFMZW4sIG1lbW8sIGlzUmlnaHQpIHtcbiAgYUZ1bmN0aW9uKGNhbGxiYWNrZm4pO1xuICB2YXIgTyA9IHRvT2JqZWN0KHRoYXQpO1xuICB2YXIgc2VsZiA9IElPYmplY3QoTyk7XG4gIHZhciBsZW5ndGggPSB0b0xlbmd0aChPLmxlbmd0aCk7XG4gIHZhciBpbmRleCA9IGlzUmlnaHQgPyBsZW5ndGggLSAxIDogMDtcbiAgdmFyIGkgPSBpc1JpZ2h0ID8gLTEgOiAxO1xuICBpZiAoYUxlbiA8IDIpIGZvciAoOzspIHtcbiAgICBpZiAoaW5kZXggaW4gc2VsZikge1xuICAgICAgbWVtbyA9IHNlbGZbaW5kZXhdO1xuICAgICAgaW5kZXggKz0gaTtcbiAgICAgIGJyZWFrO1xuICAgIH1cbiAgICBpbmRleCArPSBpO1xuICAgIGlmIChpc1JpZ2h0ID8gaW5kZXggPCAwIDogbGVuZ3RoIDw9IGluZGV4KSB7XG4gICAgICB0aHJvdyBUeXBlRXJyb3IoJ1JlZHVjZSBvZiBlbXB0eSBhcnJheSB3aXRoIG5vIGluaXRpYWwgdmFsdWUnKTtcbiAgICB9XG4gIH1cbiAgZm9yICg7aXNSaWdodCA/IGluZGV4ID49IDAgOiBsZW5ndGggPiBpbmRleDsgaW5kZXggKz0gaSkgaWYgKGluZGV4IGluIHNlbGYpIHtcbiAgICBtZW1vID0gY2FsbGJhY2tmbihtZW1vLCBzZWxmW2luZGV4XSwgaW5kZXgsIE8pO1xuICB9XG4gIHJldHVybiBtZW1vO1xufTtcbiIsInZhciBpc09iamVjdCA9IHJlcXVpcmUoJy4vX2lzLW9iamVjdCcpO1xudmFyIGlzQXJyYXkgPSByZXF1aXJlKCcuL19pcy1hcnJheScpO1xudmFyIFNQRUNJRVMgPSByZXF1aXJlKCcuL193a3MnKSgnc3BlY2llcycpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChvcmlnaW5hbCkge1xuICB2YXIgQztcbiAgaWYgKGlzQXJyYXkob3JpZ2luYWwpKSB7XG4gICAgQyA9IG9yaWdpbmFsLmNvbnN0cnVjdG9yO1xuICAgIC8vIGNyb3NzLXJlYWxtIGZhbGxiYWNrXG4gICAgaWYgKHR5cGVvZiBDID09ICdmdW5jdGlvbicgJiYgKEMgPT09IEFycmF5IHx8IGlzQXJyYXkoQy5wcm90b3R5cGUpKSkgQyA9IHVuZGVmaW5lZDtcbiAgICBpZiAoaXNPYmplY3QoQykpIHtcbiAgICAgIEMgPSBDW1NQRUNJRVNdO1xuICAgICAgaWYgKEMgPT09IG51bGwpIEMgPSB1bmRlZmluZWQ7XG4gICAgfVxuICB9IHJldHVybiBDID09PSB1bmRlZmluZWQgPyBBcnJheSA6IEM7XG59O1xuIiwiLy8gOS40LjIuMyBBcnJheVNwZWNpZXNDcmVhdGUob3JpZ2luYWxBcnJheSwgbGVuZ3RoKVxudmFyIHNwZWNpZXNDb25zdHJ1Y3RvciA9IHJlcXVpcmUoJy4vX2FycmF5LXNwZWNpZXMtY29uc3RydWN0b3InKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAob3JpZ2luYWwsIGxlbmd0aCkge1xuICByZXR1cm4gbmV3IChzcGVjaWVzQ29uc3RydWN0b3Iob3JpZ2luYWwpKShsZW5ndGgpO1xufTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciBhRnVuY3Rpb24gPSByZXF1aXJlKCcuL19hLWZ1bmN0aW9uJyk7XG52YXIgaXNPYmplY3QgPSByZXF1aXJlKCcuL19pcy1vYmplY3QnKTtcbnZhciBpbnZva2UgPSByZXF1aXJlKCcuL19pbnZva2UnKTtcbnZhciBhcnJheVNsaWNlID0gW10uc2xpY2U7XG52YXIgZmFjdG9yaWVzID0ge307XG5cbnZhciBjb25zdHJ1Y3QgPSBmdW5jdGlvbiAoRiwgbGVuLCBhcmdzKSB7XG4gIGlmICghKGxlbiBpbiBmYWN0b3JpZXMpKSB7XG4gICAgZm9yICh2YXIgbiA9IFtdLCBpID0gMDsgaSA8IGxlbjsgaSsrKSBuW2ldID0gJ2FbJyArIGkgKyAnXSc7XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLW5ldy1mdW5jXG4gICAgZmFjdG9yaWVzW2xlbl0gPSBGdW5jdGlvbignRixhJywgJ3JldHVybiBuZXcgRignICsgbi5qb2luKCcsJykgKyAnKScpO1xuICB9IHJldHVybiBmYWN0b3JpZXNbbGVuXShGLCBhcmdzKTtcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gRnVuY3Rpb24uYmluZCB8fCBmdW5jdGlvbiBiaW5kKHRoYXQgLyogLCAuLi5hcmdzICovKSB7XG4gIHZhciBmbiA9IGFGdW5jdGlvbih0aGlzKTtcbiAgdmFyIHBhcnRBcmdzID0gYXJyYXlTbGljZS5jYWxsKGFyZ3VtZW50cywgMSk7XG4gIHZhciBib3VuZCA9IGZ1bmN0aW9uICgvKiBhcmdzLi4uICovKSB7XG4gICAgdmFyIGFyZ3MgPSBwYXJ0QXJncy5jb25jYXQoYXJyYXlTbGljZS5jYWxsKGFyZ3VtZW50cykpO1xuICAgIHJldHVybiB0aGlzIGluc3RhbmNlb2YgYm91bmQgPyBjb25zdHJ1Y3QoZm4sIGFyZ3MubGVuZ3RoLCBhcmdzKSA6IGludm9rZShmbiwgYXJncywgdGhhdCk7XG4gIH07XG4gIGlmIChpc09iamVjdChmbi5wcm90b3R5cGUpKSBib3VuZC5wcm90b3R5cGUgPSBmbi5wcm90b3R5cGU7XG4gIHJldHVybiBib3VuZDtcbn07XG4iLCIvLyBnZXR0aW5nIHRhZyBmcm9tIDE5LjEuMy42IE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcoKVxudmFyIGNvZiA9IHJlcXVpcmUoJy4vX2NvZicpO1xudmFyIFRBRyA9IHJlcXVpcmUoJy4vX3drcycpKCd0b1N0cmluZ1RhZycpO1xuLy8gRVMzIHdyb25nIGhlcmVcbnZhciBBUkcgPSBjb2YoZnVuY3Rpb24gKCkgeyByZXR1cm4gYXJndW1lbnRzOyB9KCkpID09ICdBcmd1bWVudHMnO1xuXG4vLyBmYWxsYmFjayBmb3IgSUUxMSBTY3JpcHQgQWNjZXNzIERlbmllZCBlcnJvclxudmFyIHRyeUdldCA9IGZ1bmN0aW9uIChpdCwga2V5KSB7XG4gIHRyeSB7XG4gICAgcmV0dXJuIGl0W2tleV07XG4gIH0gY2F0Y2ggKGUpIHsgLyogZW1wdHkgKi8gfVxufTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXQpIHtcbiAgdmFyIE8sIFQsIEI7XG4gIHJldHVybiBpdCA9PT0gdW5kZWZpbmVkID8gJ1VuZGVmaW5lZCcgOiBpdCA9PT0gbnVsbCA/ICdOdWxsJ1xuICAgIC8vIEBAdG9TdHJpbmdUYWcgY2FzZVxuICAgIDogdHlwZW9mIChUID0gdHJ5R2V0KE8gPSBPYmplY3QoaXQpLCBUQUcpKSA9PSAnc3RyaW5nJyA/IFRcbiAgICAvLyBidWlsdGluVGFnIGNhc2VcbiAgICA6IEFSRyA/IGNvZihPKVxuICAgIC8vIEVTMyBhcmd1bWVudHMgZmFsbGJhY2tcbiAgICA6IChCID0gY29mKE8pKSA9PSAnT2JqZWN0JyAmJiB0eXBlb2YgTy5jYWxsZWUgPT0gJ2Z1bmN0aW9uJyA/ICdBcmd1bWVudHMnIDogQjtcbn07XG4iLCJ2YXIgdG9TdHJpbmcgPSB7fS50b1N0cmluZztcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXQpIHtcbiAgcmV0dXJuIHRvU3RyaW5nLmNhbGwoaXQpLnNsaWNlKDgsIC0xKTtcbn07XG4iLCIndXNlIHN0cmljdCc7XG52YXIgZFAgPSByZXF1aXJlKCcuL19vYmplY3QtZHAnKS5mO1xudmFyIGNyZWF0ZSA9IHJlcXVpcmUoJy4vX29iamVjdC1jcmVhdGUnKTtcbnZhciByZWRlZmluZUFsbCA9IHJlcXVpcmUoJy4vX3JlZGVmaW5lLWFsbCcpO1xudmFyIGN0eCA9IHJlcXVpcmUoJy4vX2N0eCcpO1xudmFyIGFuSW5zdGFuY2UgPSByZXF1aXJlKCcuL19hbi1pbnN0YW5jZScpO1xudmFyIGZvck9mID0gcmVxdWlyZSgnLi9fZm9yLW9mJyk7XG52YXIgJGl0ZXJEZWZpbmUgPSByZXF1aXJlKCcuL19pdGVyLWRlZmluZScpO1xudmFyIHN0ZXAgPSByZXF1aXJlKCcuL19pdGVyLXN0ZXAnKTtcbnZhciBzZXRTcGVjaWVzID0gcmVxdWlyZSgnLi9fc2V0LXNwZWNpZXMnKTtcbnZhciBERVNDUklQVE9SUyA9IHJlcXVpcmUoJy4vX2Rlc2NyaXB0b3JzJyk7XG52YXIgZmFzdEtleSA9IHJlcXVpcmUoJy4vX21ldGEnKS5mYXN0S2V5O1xudmFyIHZhbGlkYXRlID0gcmVxdWlyZSgnLi9fdmFsaWRhdGUtY29sbGVjdGlvbicpO1xudmFyIFNJWkUgPSBERVNDUklQVE9SUyA/ICdfcycgOiAnc2l6ZSc7XG5cbnZhciBnZXRFbnRyeSA9IGZ1bmN0aW9uICh0aGF0LCBrZXkpIHtcbiAgLy8gZmFzdCBjYXNlXG4gIHZhciBpbmRleCA9IGZhc3RLZXkoa2V5KTtcbiAgdmFyIGVudHJ5O1xuICBpZiAoaW5kZXggIT09ICdGJykgcmV0dXJuIHRoYXQuX2lbaW5kZXhdO1xuICAvLyBmcm96ZW4gb2JqZWN0IGNhc2VcbiAgZm9yIChlbnRyeSA9IHRoYXQuX2Y7IGVudHJ5OyBlbnRyeSA9IGVudHJ5Lm4pIHtcbiAgICBpZiAoZW50cnkuayA9PSBrZXkpIHJldHVybiBlbnRyeTtcbiAgfVxufTtcblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIGdldENvbnN0cnVjdG9yOiBmdW5jdGlvbiAod3JhcHBlciwgTkFNRSwgSVNfTUFQLCBBRERFUikge1xuICAgIHZhciBDID0gd3JhcHBlcihmdW5jdGlvbiAodGhhdCwgaXRlcmFibGUpIHtcbiAgICAgIGFuSW5zdGFuY2UodGhhdCwgQywgTkFNRSwgJ19pJyk7XG4gICAgICB0aGF0Ll90ID0gTkFNRTsgICAgICAgICAvLyBjb2xsZWN0aW9uIHR5cGVcbiAgICAgIHRoYXQuX2kgPSBjcmVhdGUobnVsbCk7IC8vIGluZGV4XG4gICAgICB0aGF0Ll9mID0gdW5kZWZpbmVkOyAgICAvLyBmaXJzdCBlbnRyeVxuICAgICAgdGhhdC5fbCA9IHVuZGVmaW5lZDsgICAgLy8gbGFzdCBlbnRyeVxuICAgICAgdGhhdFtTSVpFXSA9IDA7ICAgICAgICAgLy8gc2l6ZVxuICAgICAgaWYgKGl0ZXJhYmxlICE9IHVuZGVmaW5lZCkgZm9yT2YoaXRlcmFibGUsIElTX01BUCwgdGhhdFtBRERFUl0sIHRoYXQpO1xuICAgIH0pO1xuICAgIHJlZGVmaW5lQWxsKEMucHJvdG90eXBlLCB7XG4gICAgICAvLyAyMy4xLjMuMSBNYXAucHJvdG90eXBlLmNsZWFyKClcbiAgICAgIC8vIDIzLjIuMy4yIFNldC5wcm90b3R5cGUuY2xlYXIoKVxuICAgICAgY2xlYXI6IGZ1bmN0aW9uIGNsZWFyKCkge1xuICAgICAgICBmb3IgKHZhciB0aGF0ID0gdmFsaWRhdGUodGhpcywgTkFNRSksIGRhdGEgPSB0aGF0Ll9pLCBlbnRyeSA9IHRoYXQuX2Y7IGVudHJ5OyBlbnRyeSA9IGVudHJ5Lm4pIHtcbiAgICAgICAgICBlbnRyeS5yID0gdHJ1ZTtcbiAgICAgICAgICBpZiAoZW50cnkucCkgZW50cnkucCA9IGVudHJ5LnAubiA9IHVuZGVmaW5lZDtcbiAgICAgICAgICBkZWxldGUgZGF0YVtlbnRyeS5pXTtcbiAgICAgICAgfVxuICAgICAgICB0aGF0Ll9mID0gdGhhdC5fbCA9IHVuZGVmaW5lZDtcbiAgICAgICAgdGhhdFtTSVpFXSA9IDA7XG4gICAgICB9LFxuICAgICAgLy8gMjMuMS4zLjMgTWFwLnByb3RvdHlwZS5kZWxldGUoa2V5KVxuICAgICAgLy8gMjMuMi4zLjQgU2V0LnByb3RvdHlwZS5kZWxldGUodmFsdWUpXG4gICAgICAnZGVsZXRlJzogZnVuY3Rpb24gKGtleSkge1xuICAgICAgICB2YXIgdGhhdCA9IHZhbGlkYXRlKHRoaXMsIE5BTUUpO1xuICAgICAgICB2YXIgZW50cnkgPSBnZXRFbnRyeSh0aGF0LCBrZXkpO1xuICAgICAgICBpZiAoZW50cnkpIHtcbiAgICAgICAgICB2YXIgbmV4dCA9IGVudHJ5Lm47XG4gICAgICAgICAgdmFyIHByZXYgPSBlbnRyeS5wO1xuICAgICAgICAgIGRlbGV0ZSB0aGF0Ll9pW2VudHJ5LmldO1xuICAgICAgICAgIGVudHJ5LnIgPSB0cnVlO1xuICAgICAgICAgIGlmIChwcmV2KSBwcmV2Lm4gPSBuZXh0O1xuICAgICAgICAgIGlmIChuZXh0KSBuZXh0LnAgPSBwcmV2O1xuICAgICAgICAgIGlmICh0aGF0Ll9mID09IGVudHJ5KSB0aGF0Ll9mID0gbmV4dDtcbiAgICAgICAgICBpZiAodGhhdC5fbCA9PSBlbnRyeSkgdGhhdC5fbCA9IHByZXY7XG4gICAgICAgICAgdGhhdFtTSVpFXS0tO1xuICAgICAgICB9IHJldHVybiAhIWVudHJ5O1xuICAgICAgfSxcbiAgICAgIC8vIDIzLjIuMy42IFNldC5wcm90b3R5cGUuZm9yRWFjaChjYWxsYmFja2ZuLCB0aGlzQXJnID0gdW5kZWZpbmVkKVxuICAgICAgLy8gMjMuMS4zLjUgTWFwLnByb3RvdHlwZS5mb3JFYWNoKGNhbGxiYWNrZm4sIHRoaXNBcmcgPSB1bmRlZmluZWQpXG4gICAgICBmb3JFYWNoOiBmdW5jdGlvbiBmb3JFYWNoKGNhbGxiYWNrZm4gLyogLCB0aGF0ID0gdW5kZWZpbmVkICovKSB7XG4gICAgICAgIHZhbGlkYXRlKHRoaXMsIE5BTUUpO1xuICAgICAgICB2YXIgZiA9IGN0eChjYWxsYmFja2ZuLCBhcmd1bWVudHMubGVuZ3RoID4gMSA/IGFyZ3VtZW50c1sxXSA6IHVuZGVmaW5lZCwgMyk7XG4gICAgICAgIHZhciBlbnRyeTtcbiAgICAgICAgd2hpbGUgKGVudHJ5ID0gZW50cnkgPyBlbnRyeS5uIDogdGhpcy5fZikge1xuICAgICAgICAgIGYoZW50cnkudiwgZW50cnkuaywgdGhpcyk7XG4gICAgICAgICAgLy8gcmV2ZXJ0IHRvIHRoZSBsYXN0IGV4aXN0aW5nIGVudHJ5XG4gICAgICAgICAgd2hpbGUgKGVudHJ5ICYmIGVudHJ5LnIpIGVudHJ5ID0gZW50cnkucDtcbiAgICAgICAgfVxuICAgICAgfSxcbiAgICAgIC8vIDIzLjEuMy43IE1hcC5wcm90b3R5cGUuaGFzKGtleSlcbiAgICAgIC8vIDIzLjIuMy43IFNldC5wcm90b3R5cGUuaGFzKHZhbHVlKVxuICAgICAgaGFzOiBmdW5jdGlvbiBoYXMoa2V5KSB7XG4gICAgICAgIHJldHVybiAhIWdldEVudHJ5KHZhbGlkYXRlKHRoaXMsIE5BTUUpLCBrZXkpO1xuICAgICAgfVxuICAgIH0pO1xuICAgIGlmIChERVNDUklQVE9SUykgZFAoQy5wcm90b3R5cGUsICdzaXplJywge1xuICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiB2YWxpZGF0ZSh0aGlzLCBOQU1FKVtTSVpFXTtcbiAgICAgIH1cbiAgICB9KTtcbiAgICByZXR1cm4gQztcbiAgfSxcbiAgZGVmOiBmdW5jdGlvbiAodGhhdCwga2V5LCB2YWx1ZSkge1xuICAgIHZhciBlbnRyeSA9IGdldEVudHJ5KHRoYXQsIGtleSk7XG4gICAgdmFyIHByZXYsIGluZGV4O1xuICAgIC8vIGNoYW5nZSBleGlzdGluZyBlbnRyeVxuICAgIGlmIChlbnRyeSkge1xuICAgICAgZW50cnkudiA9IHZhbHVlO1xuICAgIC8vIGNyZWF0ZSBuZXcgZW50cnlcbiAgICB9IGVsc2Uge1xuICAgICAgdGhhdC5fbCA9IGVudHJ5ID0ge1xuICAgICAgICBpOiBpbmRleCA9IGZhc3RLZXkoa2V5LCB0cnVlKSwgLy8gPC0gaW5kZXhcbiAgICAgICAgazoga2V5LCAgICAgICAgICAgICAgICAgICAgICAgIC8vIDwtIGtleVxuICAgICAgICB2OiB2YWx1ZSwgICAgICAgICAgICAgICAgICAgICAgLy8gPC0gdmFsdWVcbiAgICAgICAgcDogcHJldiA9IHRoYXQuX2wsICAgICAgICAgICAgIC8vIDwtIHByZXZpb3VzIGVudHJ5XG4gICAgICAgIG46IHVuZGVmaW5lZCwgICAgICAgICAgICAgICAgICAvLyA8LSBuZXh0IGVudHJ5XG4gICAgICAgIHI6IGZhbHNlICAgICAgICAgICAgICAgICAgICAgICAvLyA8LSByZW1vdmVkXG4gICAgICB9O1xuICAgICAgaWYgKCF0aGF0Ll9mKSB0aGF0Ll9mID0gZW50cnk7XG4gICAgICBpZiAocHJldikgcHJldi5uID0gZW50cnk7XG4gICAgICB0aGF0W1NJWkVdKys7XG4gICAgICAvLyBhZGQgdG8gaW5kZXhcbiAgICAgIGlmIChpbmRleCAhPT0gJ0YnKSB0aGF0Ll9pW2luZGV4XSA9IGVudHJ5O1xuICAgIH0gcmV0dXJuIHRoYXQ7XG4gIH0sXG4gIGdldEVudHJ5OiBnZXRFbnRyeSxcbiAgc2V0U3Ryb25nOiBmdW5jdGlvbiAoQywgTkFNRSwgSVNfTUFQKSB7XG4gICAgLy8gYWRkIC5rZXlzLCAudmFsdWVzLCAuZW50cmllcywgW0BAaXRlcmF0b3JdXG4gICAgLy8gMjMuMS4zLjQsIDIzLjEuMy44LCAyMy4xLjMuMTEsIDIzLjEuMy4xMiwgMjMuMi4zLjUsIDIzLjIuMy44LCAyMy4yLjMuMTAsIDIzLjIuMy4xMVxuICAgICRpdGVyRGVmaW5lKEMsIE5BTUUsIGZ1bmN0aW9uIChpdGVyYXRlZCwga2luZCkge1xuICAgICAgdGhpcy5fdCA9IHZhbGlkYXRlKGl0ZXJhdGVkLCBOQU1FKTsgLy8gdGFyZ2V0XG4gICAgICB0aGlzLl9rID0ga2luZDsgICAgICAgICAgICAgICAgICAgICAvLyBraW5kXG4gICAgICB0aGlzLl9sID0gdW5kZWZpbmVkOyAgICAgICAgICAgICAgICAvLyBwcmV2aW91c1xuICAgIH0sIGZ1bmN0aW9uICgpIHtcbiAgICAgIHZhciB0aGF0ID0gdGhpcztcbiAgICAgIHZhciBraW5kID0gdGhhdC5faztcbiAgICAgIHZhciBlbnRyeSA9IHRoYXQuX2w7XG4gICAgICAvLyByZXZlcnQgdG8gdGhlIGxhc3QgZXhpc3RpbmcgZW50cnlcbiAgICAgIHdoaWxlIChlbnRyeSAmJiBlbnRyeS5yKSBlbnRyeSA9IGVudHJ5LnA7XG4gICAgICAvLyBnZXQgbmV4dCBlbnRyeVxuICAgICAgaWYgKCF0aGF0Ll90IHx8ICEodGhhdC5fbCA9IGVudHJ5ID0gZW50cnkgPyBlbnRyeS5uIDogdGhhdC5fdC5fZikpIHtcbiAgICAgICAgLy8gb3IgZmluaXNoIHRoZSBpdGVyYXRpb25cbiAgICAgICAgdGhhdC5fdCA9IHVuZGVmaW5lZDtcbiAgICAgICAgcmV0dXJuIHN0ZXAoMSk7XG4gICAgICB9XG4gICAgICAvLyByZXR1cm4gc3RlcCBieSBraW5kXG4gICAgICBpZiAoa2luZCA9PSAna2V5cycpIHJldHVybiBzdGVwKDAsIGVudHJ5LmspO1xuICAgICAgaWYgKGtpbmQgPT0gJ3ZhbHVlcycpIHJldHVybiBzdGVwKDAsIGVudHJ5LnYpO1xuICAgICAgcmV0dXJuIHN0ZXAoMCwgW2VudHJ5LmssIGVudHJ5LnZdKTtcbiAgICB9LCBJU19NQVAgPyAnZW50cmllcycgOiAndmFsdWVzJywgIUlTX01BUCwgdHJ1ZSk7XG5cbiAgICAvLyBhZGQgW0BAc3BlY2llc10sIDIzLjEuMi4yLCAyMy4yLjIuMlxuICAgIHNldFNwZWNpZXMoTkFNRSk7XG4gIH1cbn07XG4iLCIndXNlIHN0cmljdCc7XG52YXIgcmVkZWZpbmVBbGwgPSByZXF1aXJlKCcuL19yZWRlZmluZS1hbGwnKTtcbnZhciBnZXRXZWFrID0gcmVxdWlyZSgnLi9fbWV0YScpLmdldFdlYWs7XG52YXIgYW5PYmplY3QgPSByZXF1aXJlKCcuL19hbi1vYmplY3QnKTtcbnZhciBpc09iamVjdCA9IHJlcXVpcmUoJy4vX2lzLW9iamVjdCcpO1xudmFyIGFuSW5zdGFuY2UgPSByZXF1aXJlKCcuL19hbi1pbnN0YW5jZScpO1xudmFyIGZvck9mID0gcmVxdWlyZSgnLi9fZm9yLW9mJyk7XG52YXIgY3JlYXRlQXJyYXlNZXRob2QgPSByZXF1aXJlKCcuL19hcnJheS1tZXRob2RzJyk7XG52YXIgJGhhcyA9IHJlcXVpcmUoJy4vX2hhcycpO1xudmFyIHZhbGlkYXRlID0gcmVxdWlyZSgnLi9fdmFsaWRhdGUtY29sbGVjdGlvbicpO1xudmFyIGFycmF5RmluZCA9IGNyZWF0ZUFycmF5TWV0aG9kKDUpO1xudmFyIGFycmF5RmluZEluZGV4ID0gY3JlYXRlQXJyYXlNZXRob2QoNik7XG52YXIgaWQgPSAwO1xuXG4vLyBmYWxsYmFjayBmb3IgdW5jYXVnaHQgZnJvemVuIGtleXNcbnZhciB1bmNhdWdodEZyb3plblN0b3JlID0gZnVuY3Rpb24gKHRoYXQpIHtcbiAgcmV0dXJuIHRoYXQuX2wgfHwgKHRoYXQuX2wgPSBuZXcgVW5jYXVnaHRGcm96ZW5TdG9yZSgpKTtcbn07XG52YXIgVW5jYXVnaHRGcm96ZW5TdG9yZSA9IGZ1bmN0aW9uICgpIHtcbiAgdGhpcy5hID0gW107XG59O1xudmFyIGZpbmRVbmNhdWdodEZyb3plbiA9IGZ1bmN0aW9uIChzdG9yZSwga2V5KSB7XG4gIHJldHVybiBhcnJheUZpbmQoc3RvcmUuYSwgZnVuY3Rpb24gKGl0KSB7XG4gICAgcmV0dXJuIGl0WzBdID09PSBrZXk7XG4gIH0pO1xufTtcblVuY2F1Z2h0RnJvemVuU3RvcmUucHJvdG90eXBlID0ge1xuICBnZXQ6IGZ1bmN0aW9uIChrZXkpIHtcbiAgICB2YXIgZW50cnkgPSBmaW5kVW5jYXVnaHRGcm96ZW4odGhpcywga2V5KTtcbiAgICBpZiAoZW50cnkpIHJldHVybiBlbnRyeVsxXTtcbiAgfSxcbiAgaGFzOiBmdW5jdGlvbiAoa2V5KSB7XG4gICAgcmV0dXJuICEhZmluZFVuY2F1Z2h0RnJvemVuKHRoaXMsIGtleSk7XG4gIH0sXG4gIHNldDogZnVuY3Rpb24gKGtleSwgdmFsdWUpIHtcbiAgICB2YXIgZW50cnkgPSBmaW5kVW5jYXVnaHRGcm96ZW4odGhpcywga2V5KTtcbiAgICBpZiAoZW50cnkpIGVudHJ5WzFdID0gdmFsdWU7XG4gICAgZWxzZSB0aGlzLmEucHVzaChba2V5LCB2YWx1ZV0pO1xuICB9LFxuICAnZGVsZXRlJzogZnVuY3Rpb24gKGtleSkge1xuICAgIHZhciBpbmRleCA9IGFycmF5RmluZEluZGV4KHRoaXMuYSwgZnVuY3Rpb24gKGl0KSB7XG4gICAgICByZXR1cm4gaXRbMF0gPT09IGtleTtcbiAgICB9KTtcbiAgICBpZiAofmluZGV4KSB0aGlzLmEuc3BsaWNlKGluZGV4LCAxKTtcbiAgICByZXR1cm4gISF+aW5kZXg7XG4gIH1cbn07XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICBnZXRDb25zdHJ1Y3RvcjogZnVuY3Rpb24gKHdyYXBwZXIsIE5BTUUsIElTX01BUCwgQURERVIpIHtcbiAgICB2YXIgQyA9IHdyYXBwZXIoZnVuY3Rpb24gKHRoYXQsIGl0ZXJhYmxlKSB7XG4gICAgICBhbkluc3RhbmNlKHRoYXQsIEMsIE5BTUUsICdfaScpO1xuICAgICAgdGhhdC5fdCA9IE5BTUU7ICAgICAgLy8gY29sbGVjdGlvbiB0eXBlXG4gICAgICB0aGF0Ll9pID0gaWQrKzsgICAgICAvLyBjb2xsZWN0aW9uIGlkXG4gICAgICB0aGF0Ll9sID0gdW5kZWZpbmVkOyAvLyBsZWFrIHN0b3JlIGZvciB1bmNhdWdodCBmcm96ZW4gb2JqZWN0c1xuICAgICAgaWYgKGl0ZXJhYmxlICE9IHVuZGVmaW5lZCkgZm9yT2YoaXRlcmFibGUsIElTX01BUCwgdGhhdFtBRERFUl0sIHRoYXQpO1xuICAgIH0pO1xuICAgIHJlZGVmaW5lQWxsKEMucHJvdG90eXBlLCB7XG4gICAgICAvLyAyMy4zLjMuMiBXZWFrTWFwLnByb3RvdHlwZS5kZWxldGUoa2V5KVxuICAgICAgLy8gMjMuNC4zLjMgV2Vha1NldC5wcm90b3R5cGUuZGVsZXRlKHZhbHVlKVxuICAgICAgJ2RlbGV0ZSc6IGZ1bmN0aW9uIChrZXkpIHtcbiAgICAgICAgaWYgKCFpc09iamVjdChrZXkpKSByZXR1cm4gZmFsc2U7XG4gICAgICAgIHZhciBkYXRhID0gZ2V0V2VhayhrZXkpO1xuICAgICAgICBpZiAoZGF0YSA9PT0gdHJ1ZSkgcmV0dXJuIHVuY2F1Z2h0RnJvemVuU3RvcmUodmFsaWRhdGUodGhpcywgTkFNRSkpWydkZWxldGUnXShrZXkpO1xuICAgICAgICByZXR1cm4gZGF0YSAmJiAkaGFzKGRhdGEsIHRoaXMuX2kpICYmIGRlbGV0ZSBkYXRhW3RoaXMuX2ldO1xuICAgICAgfSxcbiAgICAgIC8vIDIzLjMuMy40IFdlYWtNYXAucHJvdG90eXBlLmhhcyhrZXkpXG4gICAgICAvLyAyMy40LjMuNCBXZWFrU2V0LnByb3RvdHlwZS5oYXModmFsdWUpXG4gICAgICBoYXM6IGZ1bmN0aW9uIGhhcyhrZXkpIHtcbiAgICAgICAgaWYgKCFpc09iamVjdChrZXkpKSByZXR1cm4gZmFsc2U7XG4gICAgICAgIHZhciBkYXRhID0gZ2V0V2VhayhrZXkpO1xuICAgICAgICBpZiAoZGF0YSA9PT0gdHJ1ZSkgcmV0dXJuIHVuY2F1Z2h0RnJvemVuU3RvcmUodmFsaWRhdGUodGhpcywgTkFNRSkpLmhhcyhrZXkpO1xuICAgICAgICByZXR1cm4gZGF0YSAmJiAkaGFzKGRhdGEsIHRoaXMuX2kpO1xuICAgICAgfVxuICAgIH0pO1xuICAgIHJldHVybiBDO1xuICB9LFxuICBkZWY6IGZ1bmN0aW9uICh0aGF0LCBrZXksIHZhbHVlKSB7XG4gICAgdmFyIGRhdGEgPSBnZXRXZWFrKGFuT2JqZWN0KGtleSksIHRydWUpO1xuICAgIGlmIChkYXRhID09PSB0cnVlKSB1bmNhdWdodEZyb3plblN0b3JlKHRoYXQpLnNldChrZXksIHZhbHVlKTtcbiAgICBlbHNlIGRhdGFbdGhhdC5faV0gPSB2YWx1ZTtcbiAgICByZXR1cm4gdGhhdDtcbiAgfSxcbiAgdWZzdG9yZTogdW5jYXVnaHRGcm96ZW5TdG9yZVxufTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciBnbG9iYWwgPSByZXF1aXJlKCcuL19nbG9iYWwnKTtcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgcmVkZWZpbmUgPSByZXF1aXJlKCcuL19yZWRlZmluZScpO1xudmFyIHJlZGVmaW5lQWxsID0gcmVxdWlyZSgnLi9fcmVkZWZpbmUtYWxsJyk7XG52YXIgbWV0YSA9IHJlcXVpcmUoJy4vX21ldGEnKTtcbnZhciBmb3JPZiA9IHJlcXVpcmUoJy4vX2Zvci1vZicpO1xudmFyIGFuSW5zdGFuY2UgPSByZXF1aXJlKCcuL19hbi1pbnN0YW5jZScpO1xudmFyIGlzT2JqZWN0ID0gcmVxdWlyZSgnLi9faXMtb2JqZWN0Jyk7XG52YXIgZmFpbHMgPSByZXF1aXJlKCcuL19mYWlscycpO1xudmFyICRpdGVyRGV0ZWN0ID0gcmVxdWlyZSgnLi9faXRlci1kZXRlY3QnKTtcbnZhciBzZXRUb1N0cmluZ1RhZyA9IHJlcXVpcmUoJy4vX3NldC10by1zdHJpbmctdGFnJyk7XG52YXIgaW5oZXJpdElmUmVxdWlyZWQgPSByZXF1aXJlKCcuL19pbmhlcml0LWlmLXJlcXVpcmVkJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKE5BTUUsIHdyYXBwZXIsIG1ldGhvZHMsIGNvbW1vbiwgSVNfTUFQLCBJU19XRUFLKSB7XG4gIHZhciBCYXNlID0gZ2xvYmFsW05BTUVdO1xuICB2YXIgQyA9IEJhc2U7XG4gIHZhciBBRERFUiA9IElTX01BUCA/ICdzZXQnIDogJ2FkZCc7XG4gIHZhciBwcm90byA9IEMgJiYgQy5wcm90b3R5cGU7XG4gIHZhciBPID0ge307XG4gIHZhciBmaXhNZXRob2QgPSBmdW5jdGlvbiAoS0VZKSB7XG4gICAgdmFyIGZuID0gcHJvdG9bS0VZXTtcbiAgICByZWRlZmluZShwcm90bywgS0VZLFxuICAgICAgS0VZID09ICdkZWxldGUnID8gZnVuY3Rpb24gKGEpIHtcbiAgICAgICAgcmV0dXJuIElTX1dFQUsgJiYgIWlzT2JqZWN0KGEpID8gZmFsc2UgOiBmbi5jYWxsKHRoaXMsIGEgPT09IDAgPyAwIDogYSk7XG4gICAgICB9IDogS0VZID09ICdoYXMnID8gZnVuY3Rpb24gaGFzKGEpIHtcbiAgICAgICAgcmV0dXJuIElTX1dFQUsgJiYgIWlzT2JqZWN0KGEpID8gZmFsc2UgOiBmbi5jYWxsKHRoaXMsIGEgPT09IDAgPyAwIDogYSk7XG4gICAgICB9IDogS0VZID09ICdnZXQnID8gZnVuY3Rpb24gZ2V0KGEpIHtcbiAgICAgICAgcmV0dXJuIElTX1dFQUsgJiYgIWlzT2JqZWN0KGEpID8gdW5kZWZpbmVkIDogZm4uY2FsbCh0aGlzLCBhID09PSAwID8gMCA6IGEpO1xuICAgICAgfSA6IEtFWSA9PSAnYWRkJyA/IGZ1bmN0aW9uIGFkZChhKSB7IGZuLmNhbGwodGhpcywgYSA9PT0gMCA/IDAgOiBhKTsgcmV0dXJuIHRoaXM7IH1cbiAgICAgICAgOiBmdW5jdGlvbiBzZXQoYSwgYikgeyBmbi5jYWxsKHRoaXMsIGEgPT09IDAgPyAwIDogYSwgYik7IHJldHVybiB0aGlzOyB9XG4gICAgKTtcbiAgfTtcbiAgaWYgKHR5cGVvZiBDICE9ICdmdW5jdGlvbicgfHwgIShJU19XRUFLIHx8IHByb3RvLmZvckVhY2ggJiYgIWZhaWxzKGZ1bmN0aW9uICgpIHtcbiAgICBuZXcgQygpLmVudHJpZXMoKS5uZXh0KCk7XG4gIH0pKSkge1xuICAgIC8vIGNyZWF0ZSBjb2xsZWN0aW9uIGNvbnN0cnVjdG9yXG4gICAgQyA9IGNvbW1vbi5nZXRDb25zdHJ1Y3Rvcih3cmFwcGVyLCBOQU1FLCBJU19NQVAsIEFEREVSKTtcbiAgICByZWRlZmluZUFsbChDLnByb3RvdHlwZSwgbWV0aG9kcyk7XG4gICAgbWV0YS5ORUVEID0gdHJ1ZTtcbiAgfSBlbHNlIHtcbiAgICB2YXIgaW5zdGFuY2UgPSBuZXcgQygpO1xuICAgIC8vIGVhcmx5IGltcGxlbWVudGF0aW9ucyBub3Qgc3VwcG9ydHMgY2hhaW5pbmdcbiAgICB2YXIgSEFTTlRfQ0hBSU5JTkcgPSBpbnN0YW5jZVtBRERFUl0oSVNfV0VBSyA/IHt9IDogLTAsIDEpICE9IGluc3RhbmNlO1xuICAgIC8vIFY4IH4gIENocm9taXVtIDQwLSB3ZWFrLWNvbGxlY3Rpb25zIHRocm93cyBvbiBwcmltaXRpdmVzLCBidXQgc2hvdWxkIHJldHVybiBmYWxzZVxuICAgIHZhciBUSFJPV1NfT05fUFJJTUlUSVZFUyA9IGZhaWxzKGZ1bmN0aW9uICgpIHsgaW5zdGFuY2UuaGFzKDEpOyB9KTtcbiAgICAvLyBtb3N0IGVhcmx5IGltcGxlbWVudGF0aW9ucyBkb2Vzbid0IHN1cHBvcnRzIGl0ZXJhYmxlcywgbW9zdCBtb2Rlcm4gLSBub3QgY2xvc2UgaXQgY29ycmVjdGx5XG4gICAgdmFyIEFDQ0VQVF9JVEVSQUJMRVMgPSAkaXRlckRldGVjdChmdW5jdGlvbiAoaXRlcikgeyBuZXcgQyhpdGVyKTsgfSk7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tbmV3XG4gICAgLy8gZm9yIGVhcmx5IGltcGxlbWVudGF0aW9ucyAtMCBhbmQgKzAgbm90IHRoZSBzYW1lXG4gICAgdmFyIEJVR0dZX1pFUk8gPSAhSVNfV0VBSyAmJiBmYWlscyhmdW5jdGlvbiAoKSB7XG4gICAgICAvLyBWOCB+IENocm9taXVtIDQyLSBmYWlscyBvbmx5IHdpdGggNSsgZWxlbWVudHNcbiAgICAgIHZhciAkaW5zdGFuY2UgPSBuZXcgQygpO1xuICAgICAgdmFyIGluZGV4ID0gNTtcbiAgICAgIHdoaWxlIChpbmRleC0tKSAkaW5zdGFuY2VbQURERVJdKGluZGV4LCBpbmRleCk7XG4gICAgICByZXR1cm4gISRpbnN0YW5jZS5oYXMoLTApO1xuICAgIH0pO1xuICAgIGlmICghQUNDRVBUX0lURVJBQkxFUykge1xuICAgICAgQyA9IHdyYXBwZXIoZnVuY3Rpb24gKHRhcmdldCwgaXRlcmFibGUpIHtcbiAgICAgICAgYW5JbnN0YW5jZSh0YXJnZXQsIEMsIE5BTUUpO1xuICAgICAgICB2YXIgdGhhdCA9IGluaGVyaXRJZlJlcXVpcmVkKG5ldyBCYXNlKCksIHRhcmdldCwgQyk7XG4gICAgICAgIGlmIChpdGVyYWJsZSAhPSB1bmRlZmluZWQpIGZvck9mKGl0ZXJhYmxlLCBJU19NQVAsIHRoYXRbQURERVJdLCB0aGF0KTtcbiAgICAgICAgcmV0dXJuIHRoYXQ7XG4gICAgICB9KTtcbiAgICAgIEMucHJvdG90eXBlID0gcHJvdG87XG4gICAgICBwcm90by5jb25zdHJ1Y3RvciA9IEM7XG4gICAgfVxuICAgIGlmIChUSFJPV1NfT05fUFJJTUlUSVZFUyB8fCBCVUdHWV9aRVJPKSB7XG4gICAgICBmaXhNZXRob2QoJ2RlbGV0ZScpO1xuICAgICAgZml4TWV0aG9kKCdoYXMnKTtcbiAgICAgIElTX01BUCAmJiBmaXhNZXRob2QoJ2dldCcpO1xuICAgIH1cbiAgICBpZiAoQlVHR1lfWkVSTyB8fCBIQVNOVF9DSEFJTklORykgZml4TWV0aG9kKEFEREVSKTtcbiAgICAvLyB3ZWFrIGNvbGxlY3Rpb25zIHNob3VsZCBub3QgY29udGFpbnMgLmNsZWFyIG1ldGhvZFxuICAgIGlmIChJU19XRUFLICYmIHByb3RvLmNsZWFyKSBkZWxldGUgcHJvdG8uY2xlYXI7XG4gIH1cblxuICBzZXRUb1N0cmluZ1RhZyhDLCBOQU1FKTtcblxuICBPW05BTUVdID0gQztcbiAgJGV4cG9ydCgkZXhwb3J0LkcgKyAkZXhwb3J0LlcgKyAkZXhwb3J0LkYgKiAoQyAhPSBCYXNlKSwgTyk7XG5cbiAgaWYgKCFJU19XRUFLKSBjb21tb24uc2V0U3Ryb25nKEMsIE5BTUUsIElTX01BUCk7XG5cbiAgcmV0dXJuIEM7XG59O1xuIiwidmFyIGNvcmUgPSBtb2R1bGUuZXhwb3J0cyA9IHsgdmVyc2lvbjogJzIuNi4xJyB9O1xuaWYgKHR5cGVvZiBfX2UgPT0gJ251bWJlcicpIF9fZSA9IGNvcmU7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tdW5kZWZcbiIsIid1c2Ugc3RyaWN0JztcbnZhciAkZGVmaW5lUHJvcGVydHkgPSByZXF1aXJlKCcuL19vYmplY3QtZHAnKTtcbnZhciBjcmVhdGVEZXNjID0gcmVxdWlyZSgnLi9fcHJvcGVydHktZGVzYycpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChvYmplY3QsIGluZGV4LCB2YWx1ZSkge1xuICBpZiAoaW5kZXggaW4gb2JqZWN0KSAkZGVmaW5lUHJvcGVydHkuZihvYmplY3QsIGluZGV4LCBjcmVhdGVEZXNjKDAsIHZhbHVlKSk7XG4gIGVsc2Ugb2JqZWN0W2luZGV4XSA9IHZhbHVlO1xufTtcbiIsIi8vIG9wdGlvbmFsIC8gc2ltcGxlIGNvbnRleHQgYmluZGluZ1xudmFyIGFGdW5jdGlvbiA9IHJlcXVpcmUoJy4vX2EtZnVuY3Rpb24nKTtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGZuLCB0aGF0LCBsZW5ndGgpIHtcbiAgYUZ1bmN0aW9uKGZuKTtcbiAgaWYgKHRoYXQgPT09IHVuZGVmaW5lZCkgcmV0dXJuIGZuO1xuICBzd2l0Y2ggKGxlbmd0aCkge1xuICAgIGNhc2UgMTogcmV0dXJuIGZ1bmN0aW9uIChhKSB7XG4gICAgICByZXR1cm4gZm4uY2FsbCh0aGF0LCBhKTtcbiAgICB9O1xuICAgIGNhc2UgMjogcmV0dXJuIGZ1bmN0aW9uIChhLCBiKSB7XG4gICAgICByZXR1cm4gZm4uY2FsbCh0aGF0LCBhLCBiKTtcbiAgICB9O1xuICAgIGNhc2UgMzogcmV0dXJuIGZ1bmN0aW9uIChhLCBiLCBjKSB7XG4gICAgICByZXR1cm4gZm4uY2FsbCh0aGF0LCBhLCBiLCBjKTtcbiAgICB9O1xuICB9XG4gIHJldHVybiBmdW5jdGlvbiAoLyogLi4uYXJncyAqLykge1xuICAgIHJldHVybiBmbi5hcHBseSh0aGF0LCBhcmd1bWVudHMpO1xuICB9O1xufTtcbiIsIid1c2Ugc3RyaWN0Jztcbi8vIDIwLjMuNC4zNiAvIDE1LjkuNS40MyBEYXRlLnByb3RvdHlwZS50b0lTT1N0cmluZygpXG52YXIgZmFpbHMgPSByZXF1aXJlKCcuL19mYWlscycpO1xudmFyIGdldFRpbWUgPSBEYXRlLnByb3RvdHlwZS5nZXRUaW1lO1xudmFyICR0b0lTT1N0cmluZyA9IERhdGUucHJvdG90eXBlLnRvSVNPU3RyaW5nO1xuXG52YXIgbHogPSBmdW5jdGlvbiAobnVtKSB7XG4gIHJldHVybiBudW0gPiA5ID8gbnVtIDogJzAnICsgbnVtO1xufTtcblxuLy8gUGhhbnRvbUpTIC8gb2xkIFdlYktpdCBoYXMgYSBicm9rZW4gaW1wbGVtZW50YXRpb25zXG5tb2R1bGUuZXhwb3J0cyA9IChmYWlscyhmdW5jdGlvbiAoKSB7XG4gIHJldHVybiAkdG9JU09TdHJpbmcuY2FsbChuZXcgRGF0ZSgtNWUxMyAtIDEpKSAhPSAnMDM4NS0wNy0yNVQwNzowNjozOS45OTlaJztcbn0pIHx8ICFmYWlscyhmdW5jdGlvbiAoKSB7XG4gICR0b0lTT1N0cmluZy5jYWxsKG5ldyBEYXRlKE5hTikpO1xufSkpID8gZnVuY3Rpb24gdG9JU09TdHJpbmcoKSB7XG4gIGlmICghaXNGaW5pdGUoZ2V0VGltZS5jYWxsKHRoaXMpKSkgdGhyb3cgUmFuZ2VFcnJvcignSW52YWxpZCB0aW1lIHZhbHVlJyk7XG4gIHZhciBkID0gdGhpcztcbiAgdmFyIHkgPSBkLmdldFVUQ0Z1bGxZZWFyKCk7XG4gIHZhciBtID0gZC5nZXRVVENNaWxsaXNlY29uZHMoKTtcbiAgdmFyIHMgPSB5IDwgMCA/ICctJyA6IHkgPiA5OTk5ID8gJysnIDogJyc7XG4gIHJldHVybiBzICsgKCcwMDAwMCcgKyBNYXRoLmFicyh5KSkuc2xpY2UocyA/IC02IDogLTQpICtcbiAgICAnLScgKyBseihkLmdldFVUQ01vbnRoKCkgKyAxKSArICctJyArIGx6KGQuZ2V0VVRDRGF0ZSgpKSArXG4gICAgJ1QnICsgbHooZC5nZXRVVENIb3VycygpKSArICc6JyArIGx6KGQuZ2V0VVRDTWludXRlcygpKSArXG4gICAgJzonICsgbHooZC5nZXRVVENTZWNvbmRzKCkpICsgJy4nICsgKG0gPiA5OSA/IG0gOiAnMCcgKyBseihtKSkgKyAnWic7XG59IDogJHRvSVNPU3RyaW5nO1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIGFuT2JqZWN0ID0gcmVxdWlyZSgnLi9fYW4tb2JqZWN0Jyk7XG52YXIgdG9QcmltaXRpdmUgPSByZXF1aXJlKCcuL190by1wcmltaXRpdmUnKTtcbnZhciBOVU1CRVIgPSAnbnVtYmVyJztcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaGludCkge1xuICBpZiAoaGludCAhPT0gJ3N0cmluZycgJiYgaGludCAhPT0gTlVNQkVSICYmIGhpbnQgIT09ICdkZWZhdWx0JykgdGhyb3cgVHlwZUVycm9yKCdJbmNvcnJlY3QgaGludCcpO1xuICByZXR1cm4gdG9QcmltaXRpdmUoYW5PYmplY3QodGhpcyksIGhpbnQgIT0gTlVNQkVSKTtcbn07XG4iLCIvLyA3LjIuMSBSZXF1aXJlT2JqZWN0Q29lcmNpYmxlKGFyZ3VtZW50KVxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXQpIHtcbiAgaWYgKGl0ID09IHVuZGVmaW5lZCkgdGhyb3cgVHlwZUVycm9yKFwiQ2FuJ3QgY2FsbCBtZXRob2Qgb24gIFwiICsgaXQpO1xuICByZXR1cm4gaXQ7XG59O1xuIiwiLy8gVGhhbmsncyBJRTggZm9yIGhpcyBmdW5ueSBkZWZpbmVQcm9wZXJ0eVxubW9kdWxlLmV4cG9ydHMgPSAhcmVxdWlyZSgnLi9fZmFpbHMnKShmdW5jdGlvbiAoKSB7XG4gIHJldHVybiBPYmplY3QuZGVmaW5lUHJvcGVydHkoe30sICdhJywgeyBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIDc7IH0gfSkuYSAhPSA3O1xufSk7XG4iLCJ2YXIgaXNPYmplY3QgPSByZXF1aXJlKCcuL19pcy1vYmplY3QnKTtcbnZhciBkb2N1bWVudCA9IHJlcXVpcmUoJy4vX2dsb2JhbCcpLmRvY3VtZW50O1xuLy8gdHlwZW9mIGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQgaXMgJ29iamVjdCcgaW4gb2xkIElFXG52YXIgaXMgPSBpc09iamVjdChkb2N1bWVudCkgJiYgaXNPYmplY3QoZG9jdW1lbnQuY3JlYXRlRWxlbWVudCk7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdCkge1xuICByZXR1cm4gaXMgPyBkb2N1bWVudC5jcmVhdGVFbGVtZW50KGl0KSA6IHt9O1xufTtcbiIsIi8vIElFIDgtIGRvbid0IGVudW0gYnVnIGtleXNcbm1vZHVsZS5leHBvcnRzID0gKFxuICAnY29uc3RydWN0b3IsaGFzT3duUHJvcGVydHksaXNQcm90b3R5cGVPZixwcm9wZXJ0eUlzRW51bWVyYWJsZSx0b0xvY2FsZVN0cmluZyx0b1N0cmluZyx2YWx1ZU9mJ1xuKS5zcGxpdCgnLCcpO1xuIiwiLy8gYWxsIGVudW1lcmFibGUgb2JqZWN0IGtleXMsIGluY2x1ZGVzIHN5bWJvbHNcbnZhciBnZXRLZXlzID0gcmVxdWlyZSgnLi9fb2JqZWN0LWtleXMnKTtcbnZhciBnT1BTID0gcmVxdWlyZSgnLi9fb2JqZWN0LWdvcHMnKTtcbnZhciBwSUUgPSByZXF1aXJlKCcuL19vYmplY3QtcGllJyk7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdCkge1xuICB2YXIgcmVzdWx0ID0gZ2V0S2V5cyhpdCk7XG4gIHZhciBnZXRTeW1ib2xzID0gZ09QUy5mO1xuICBpZiAoZ2V0U3ltYm9scykge1xuICAgIHZhciBzeW1ib2xzID0gZ2V0U3ltYm9scyhpdCk7XG4gICAgdmFyIGlzRW51bSA9IHBJRS5mO1xuICAgIHZhciBpID0gMDtcbiAgICB2YXIga2V5O1xuICAgIHdoaWxlIChzeW1ib2xzLmxlbmd0aCA+IGkpIGlmIChpc0VudW0uY2FsbChpdCwga2V5ID0gc3ltYm9sc1tpKytdKSkgcmVzdWx0LnB1c2goa2V5KTtcbiAgfSByZXR1cm4gcmVzdWx0O1xufTtcbiIsInZhciBnbG9iYWwgPSByZXF1aXJlKCcuL19nbG9iYWwnKTtcbnZhciBjb3JlID0gcmVxdWlyZSgnLi9fY29yZScpO1xudmFyIGhpZGUgPSByZXF1aXJlKCcuL19oaWRlJyk7XG52YXIgcmVkZWZpbmUgPSByZXF1aXJlKCcuL19yZWRlZmluZScpO1xudmFyIGN0eCA9IHJlcXVpcmUoJy4vX2N0eCcpO1xudmFyIFBST1RPVFlQRSA9ICdwcm90b3R5cGUnO1xuXG52YXIgJGV4cG9ydCA9IGZ1bmN0aW9uICh0eXBlLCBuYW1lLCBzb3VyY2UpIHtcbiAgdmFyIElTX0ZPUkNFRCA9IHR5cGUgJiAkZXhwb3J0LkY7XG4gIHZhciBJU19HTE9CQUwgPSB0eXBlICYgJGV4cG9ydC5HO1xuICB2YXIgSVNfU1RBVElDID0gdHlwZSAmICRleHBvcnQuUztcbiAgdmFyIElTX1BST1RPID0gdHlwZSAmICRleHBvcnQuUDtcbiAgdmFyIElTX0JJTkQgPSB0eXBlICYgJGV4cG9ydC5CO1xuICB2YXIgdGFyZ2V0ID0gSVNfR0xPQkFMID8gZ2xvYmFsIDogSVNfU1RBVElDID8gZ2xvYmFsW25hbWVdIHx8IChnbG9iYWxbbmFtZV0gPSB7fSkgOiAoZ2xvYmFsW25hbWVdIHx8IHt9KVtQUk9UT1RZUEVdO1xuICB2YXIgZXhwb3J0cyA9IElTX0dMT0JBTCA/IGNvcmUgOiBjb3JlW25hbWVdIHx8IChjb3JlW25hbWVdID0ge30pO1xuICB2YXIgZXhwUHJvdG8gPSBleHBvcnRzW1BST1RPVFlQRV0gfHwgKGV4cG9ydHNbUFJPVE9UWVBFXSA9IHt9KTtcbiAgdmFyIGtleSwgb3duLCBvdXQsIGV4cDtcbiAgaWYgKElTX0dMT0JBTCkgc291cmNlID0gbmFtZTtcbiAgZm9yIChrZXkgaW4gc291cmNlKSB7XG4gICAgLy8gY29udGFpbnMgaW4gbmF0aXZlXG4gICAgb3duID0gIUlTX0ZPUkNFRCAmJiB0YXJnZXQgJiYgdGFyZ2V0W2tleV0gIT09IHVuZGVmaW5lZDtcbiAgICAvLyBleHBvcnQgbmF0aXZlIG9yIHBhc3NlZFxuICAgIG91dCA9IChvd24gPyB0YXJnZXQgOiBzb3VyY2UpW2tleV07XG4gICAgLy8gYmluZCB0aW1lcnMgdG8gZ2xvYmFsIGZvciBjYWxsIGZyb20gZXhwb3J0IGNvbnRleHRcbiAgICBleHAgPSBJU19CSU5EICYmIG93biA/IGN0eChvdXQsIGdsb2JhbCkgOiBJU19QUk9UTyAmJiB0eXBlb2Ygb3V0ID09ICdmdW5jdGlvbicgPyBjdHgoRnVuY3Rpb24uY2FsbCwgb3V0KSA6IG91dDtcbiAgICAvLyBleHRlbmQgZ2xvYmFsXG4gICAgaWYgKHRhcmdldCkgcmVkZWZpbmUodGFyZ2V0LCBrZXksIG91dCwgdHlwZSAmICRleHBvcnQuVSk7XG4gICAgLy8gZXhwb3J0XG4gICAgaWYgKGV4cG9ydHNba2V5XSAhPSBvdXQpIGhpZGUoZXhwb3J0cywga2V5LCBleHApO1xuICAgIGlmIChJU19QUk9UTyAmJiBleHBQcm90b1trZXldICE9IG91dCkgZXhwUHJvdG9ba2V5XSA9IG91dDtcbiAgfVxufTtcbmdsb2JhbC5jb3JlID0gY29yZTtcbi8vIHR5cGUgYml0bWFwXG4kZXhwb3J0LkYgPSAxOyAgIC8vIGZvcmNlZFxuJGV4cG9ydC5HID0gMjsgICAvLyBnbG9iYWxcbiRleHBvcnQuUyA9IDQ7ICAgLy8gc3RhdGljXG4kZXhwb3J0LlAgPSA4OyAgIC8vIHByb3RvXG4kZXhwb3J0LkIgPSAxNjsgIC8vIGJpbmRcbiRleHBvcnQuVyA9IDMyOyAgLy8gd3JhcFxuJGV4cG9ydC5VID0gNjQ7ICAvLyBzYWZlXG4kZXhwb3J0LlIgPSAxMjg7IC8vIHJlYWwgcHJvdG8gbWV0aG9kIGZvciBgbGlicmFyeWBcbm1vZHVsZS5leHBvcnRzID0gJGV4cG9ydDtcbiIsInZhciBNQVRDSCA9IHJlcXVpcmUoJy4vX3drcycpKCdtYXRjaCcpO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoS0VZKSB7XG4gIHZhciByZSA9IC8uLztcbiAgdHJ5IHtcbiAgICAnLy4vJ1tLRVldKHJlKTtcbiAgfSBjYXRjaCAoZSkge1xuICAgIHRyeSB7XG4gICAgICByZVtNQVRDSF0gPSBmYWxzZTtcbiAgICAgIHJldHVybiAhJy8uLydbS0VZXShyZSk7XG4gICAgfSBjYXRjaCAoZikgeyAvKiBlbXB0eSAqLyB9XG4gIH0gcmV0dXJuIHRydWU7XG59O1xuIiwibW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoZXhlYykge1xuICB0cnkge1xuICAgIHJldHVybiAhIWV4ZWMoKTtcbiAgfSBjYXRjaCAoZSkge1xuICAgIHJldHVybiB0cnVlO1xuICB9XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xucmVxdWlyZSgnLi9lczYucmVnZXhwLmV4ZWMnKTtcbnZhciByZWRlZmluZSA9IHJlcXVpcmUoJy4vX3JlZGVmaW5lJyk7XG52YXIgaGlkZSA9IHJlcXVpcmUoJy4vX2hpZGUnKTtcbnZhciBmYWlscyA9IHJlcXVpcmUoJy4vX2ZhaWxzJyk7XG52YXIgZGVmaW5lZCA9IHJlcXVpcmUoJy4vX2RlZmluZWQnKTtcbnZhciB3a3MgPSByZXF1aXJlKCcuL193a3MnKTtcbnZhciByZWdleHBFeGVjID0gcmVxdWlyZSgnLi9fcmVnZXhwLWV4ZWMnKTtcblxudmFyIFNQRUNJRVMgPSB3a3MoJ3NwZWNpZXMnKTtcblxudmFyIFJFUExBQ0VfU1VQUE9SVFNfTkFNRURfR1JPVVBTID0gIWZhaWxzKGZ1bmN0aW9uICgpIHtcbiAgLy8gI3JlcGxhY2UgbmVlZHMgYnVpbHQtaW4gc3VwcG9ydCBmb3IgbmFtZWQgZ3JvdXBzLlxuICAvLyAjbWF0Y2ggd29ya3MgZmluZSBiZWNhdXNlIGl0IGp1c3QgcmV0dXJuIHRoZSBleGVjIHJlc3VsdHMsIGV2ZW4gaWYgaXQgaGFzXG4gIC8vIGEgXCJncm9wc1wiIHByb3BlcnR5LlxuICB2YXIgcmUgPSAvLi87XG4gIHJlLmV4ZWMgPSBmdW5jdGlvbiAoKSB7XG4gICAgdmFyIHJlc3VsdCA9IFtdO1xuICAgIHJlc3VsdC5ncm91cHMgPSB7IGE6ICc3JyB9O1xuICAgIHJldHVybiByZXN1bHQ7XG4gIH07XG4gIHJldHVybiAnJy5yZXBsYWNlKHJlLCAnJDxhPicpICE9PSAnNyc7XG59KTtcblxudmFyIFNQTElUX1dPUktTX1dJVEhfT1ZFUldSSVRURU5fRVhFQyA9IChmdW5jdGlvbiAoKSB7XG4gIC8vIENocm9tZSA1MSBoYXMgYSBidWdneSBcInNwbGl0XCIgaW1wbGVtZW50YXRpb24gd2hlbiBSZWdFeHAjZXhlYyAhPT0gbmF0aXZlRXhlY1xuICB2YXIgcmUgPSAvKD86KS87XG4gIHZhciBvcmlnaW5hbEV4ZWMgPSByZS5leGVjO1xuICByZS5leGVjID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gb3JpZ2luYWxFeGVjLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7IH07XG4gIHZhciByZXN1bHQgPSAnYWInLnNwbGl0KHJlKTtcbiAgcmV0dXJuIHJlc3VsdC5sZW5ndGggPT09IDIgJiYgcmVzdWx0WzBdID09PSAnYScgJiYgcmVzdWx0WzFdID09PSAnYic7XG59KSgpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChLRVksIGxlbmd0aCwgZXhlYykge1xuICB2YXIgU1lNQk9MID0gd2tzKEtFWSk7XG5cbiAgdmFyIERFTEVHQVRFU19UT19TWU1CT0wgPSAhZmFpbHMoZnVuY3Rpb24gKCkge1xuICAgIC8vIFN0cmluZyBtZXRob2RzIGNhbGwgc3ltYm9sLW5hbWVkIFJlZ0VwIG1ldGhvZHNcbiAgICB2YXIgTyA9IHt9O1xuICAgIE9bU1lNQk9MXSA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIDc7IH07XG4gICAgcmV0dXJuICcnW0tFWV0oTykgIT0gNztcbiAgfSk7XG5cbiAgdmFyIERFTEVHQVRFU19UT19FWEVDID0gREVMRUdBVEVTX1RPX1NZTUJPTCA/ICFmYWlscyhmdW5jdGlvbiAoKSB7XG4gICAgLy8gU3ltYm9sLW5hbWVkIFJlZ0V4cCBtZXRob2RzIGNhbGwgLmV4ZWNcbiAgICB2YXIgZXhlY0NhbGxlZCA9IGZhbHNlO1xuICAgIHZhciByZSA9IC9hLztcbiAgICByZS5leGVjID0gZnVuY3Rpb24gKCkgeyBleGVjQ2FsbGVkID0gdHJ1ZTsgcmV0dXJuIG51bGw7IH07XG4gICAgaWYgKEtFWSA9PT0gJ3NwbGl0Jykge1xuICAgICAgLy8gUmVnRXhwW0BAc3BsaXRdIGRvZXNuJ3QgY2FsbCB0aGUgcmVnZXgncyBleGVjIG1ldGhvZCwgYnV0IGZpcnN0IGNyZWF0ZXNcbiAgICAgIC8vIGEgbmV3IG9uZS4gV2UgbmVlZCB0byByZXR1cm4gdGhlIHBhdGNoZWQgcmVnZXggd2hlbiBjcmVhdGluZyB0aGUgbmV3IG9uZS5cbiAgICAgIHJlLmNvbnN0cnVjdG9yID0ge307XG4gICAgICByZS5jb25zdHJ1Y3RvcltTUEVDSUVTXSA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHJlOyB9O1xuICAgIH1cbiAgICByZVtTWU1CT0xdKCcnKTtcbiAgICByZXR1cm4gIWV4ZWNDYWxsZWQ7XG4gIH0pIDogdW5kZWZpbmVkO1xuXG4gIGlmIChcbiAgICAhREVMRUdBVEVTX1RPX1NZTUJPTCB8fFxuICAgICFERUxFR0FURVNfVE9fRVhFQyB8fFxuICAgIChLRVkgPT09ICdyZXBsYWNlJyAmJiAhUkVQTEFDRV9TVVBQT1JUU19OQU1FRF9HUk9VUFMpIHx8XG4gICAgKEtFWSA9PT0gJ3NwbGl0JyAmJiAhU1BMSVRfV09SS1NfV0lUSF9PVkVSV1JJVFRFTl9FWEVDKVxuICApIHtcbiAgICB2YXIgbmF0aXZlUmVnRXhwTWV0aG9kID0gLy4vW1NZTUJPTF07XG4gICAgdmFyIGZucyA9IGV4ZWMoXG4gICAgICBkZWZpbmVkLFxuICAgICAgU1lNQk9MLFxuICAgICAgJydbS0VZXSxcbiAgICAgIGZ1bmN0aW9uIG1heWJlQ2FsbE5hdGl2ZShuYXRpdmVNZXRob2QsIHJlZ2V4cCwgc3RyLCBhcmcyLCBmb3JjZVN0cmluZ01ldGhvZCkge1xuICAgICAgICBpZiAocmVnZXhwLmV4ZWMgPT09IHJlZ2V4cEV4ZWMpIHtcbiAgICAgICAgICBpZiAoREVMRUdBVEVTX1RPX1NZTUJPTCAmJiAhZm9yY2VTdHJpbmdNZXRob2QpIHtcbiAgICAgICAgICAgIC8vIFRoZSBuYXRpdmUgU3RyaW5nIG1ldGhvZCBhbHJlYWR5IGRlbGVnYXRlcyB0byBAQG1ldGhvZCAodGhpc1xuICAgICAgICAgICAgLy8gcG9seWZpbGxlZCBmdW5jdGlvbiksIGxlYXNpbmcgdG8gaW5maW5pdGUgcmVjdXJzaW9uLlxuICAgICAgICAgICAgLy8gV2UgYXZvaWQgaXQgYnkgZGlyZWN0bHkgY2FsbGluZyB0aGUgbmF0aXZlIEBAbWV0aG9kIG1ldGhvZC5cbiAgICAgICAgICAgIHJldHVybiB7IGRvbmU6IHRydWUsIHZhbHVlOiBuYXRpdmVSZWdFeHBNZXRob2QuY2FsbChyZWdleHAsIHN0ciwgYXJnMikgfTtcbiAgICAgICAgICB9XG4gICAgICAgICAgcmV0dXJuIHsgZG9uZTogdHJ1ZSwgdmFsdWU6IG5hdGl2ZU1ldGhvZC5jYWxsKHN0ciwgcmVnZXhwLCBhcmcyKSB9O1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB7IGRvbmU6IGZhbHNlIH07XG4gICAgICB9XG4gICAgKTtcbiAgICB2YXIgc3RyZm4gPSBmbnNbMF07XG4gICAgdmFyIHJ4Zm4gPSBmbnNbMV07XG5cbiAgICByZWRlZmluZShTdHJpbmcucHJvdG90eXBlLCBLRVksIHN0cmZuKTtcbiAgICBoaWRlKFJlZ0V4cC5wcm90b3R5cGUsIFNZTUJPTCwgbGVuZ3RoID09IDJcbiAgICAgIC8vIDIxLjIuNS44IFJlZ0V4cC5wcm90b3R5cGVbQEByZXBsYWNlXShzdHJpbmcsIHJlcGxhY2VWYWx1ZSlcbiAgICAgIC8vIDIxLjIuNS4xMSBSZWdFeHAucHJvdG90eXBlW0BAc3BsaXRdKHN0cmluZywgbGltaXQpXG4gICAgICA/IGZ1bmN0aW9uIChzdHJpbmcsIGFyZykgeyByZXR1cm4gcnhmbi5jYWxsKHN0cmluZywgdGhpcywgYXJnKTsgfVxuICAgICAgLy8gMjEuMi41LjYgUmVnRXhwLnByb3RvdHlwZVtAQG1hdGNoXShzdHJpbmcpXG4gICAgICAvLyAyMS4yLjUuOSBSZWdFeHAucHJvdG90eXBlW0BAc2VhcmNoXShzdHJpbmcpXG4gICAgICA6IGZ1bmN0aW9uIChzdHJpbmcpIHsgcmV0dXJuIHJ4Zm4uY2FsbChzdHJpbmcsIHRoaXMpOyB9XG4gICAgKTtcbiAgfVxufTtcbiIsIid1c2Ugc3RyaWN0Jztcbi8vIDIxLjIuNS4zIGdldCBSZWdFeHAucHJvdG90eXBlLmZsYWdzXG52YXIgYW5PYmplY3QgPSByZXF1aXJlKCcuL19hbi1vYmplY3QnKTtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKCkge1xuICB2YXIgdGhhdCA9IGFuT2JqZWN0KHRoaXMpO1xuICB2YXIgcmVzdWx0ID0gJyc7XG4gIGlmICh0aGF0Lmdsb2JhbCkgcmVzdWx0ICs9ICdnJztcbiAgaWYgKHRoYXQuaWdub3JlQ2FzZSkgcmVzdWx0ICs9ICdpJztcbiAgaWYgKHRoYXQubXVsdGlsaW5lKSByZXN1bHQgKz0gJ20nO1xuICBpZiAodGhhdC51bmljb2RlKSByZXN1bHQgKz0gJ3UnO1xuICBpZiAodGhhdC5zdGlja3kpIHJlc3VsdCArPSAneSc7XG4gIHJldHVybiByZXN1bHQ7XG59O1xuIiwidmFyIGN0eCA9IHJlcXVpcmUoJy4vX2N0eCcpO1xudmFyIGNhbGwgPSByZXF1aXJlKCcuL19pdGVyLWNhbGwnKTtcbnZhciBpc0FycmF5SXRlciA9IHJlcXVpcmUoJy4vX2lzLWFycmF5LWl0ZXInKTtcbnZhciBhbk9iamVjdCA9IHJlcXVpcmUoJy4vX2FuLW9iamVjdCcpO1xudmFyIHRvTGVuZ3RoID0gcmVxdWlyZSgnLi9fdG8tbGVuZ3RoJyk7XG52YXIgZ2V0SXRlckZuID0gcmVxdWlyZSgnLi9jb3JlLmdldC1pdGVyYXRvci1tZXRob2QnKTtcbnZhciBCUkVBSyA9IHt9O1xudmFyIFJFVFVSTiA9IHt9O1xudmFyIGV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdGVyYWJsZSwgZW50cmllcywgZm4sIHRoYXQsIElURVJBVE9SKSB7XG4gIHZhciBpdGVyRm4gPSBJVEVSQVRPUiA/IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGl0ZXJhYmxlOyB9IDogZ2V0SXRlckZuKGl0ZXJhYmxlKTtcbiAgdmFyIGYgPSBjdHgoZm4sIHRoYXQsIGVudHJpZXMgPyAyIDogMSk7XG4gIHZhciBpbmRleCA9IDA7XG4gIHZhciBsZW5ndGgsIHN0ZXAsIGl0ZXJhdG9yLCByZXN1bHQ7XG4gIGlmICh0eXBlb2YgaXRlckZuICE9ICdmdW5jdGlvbicpIHRocm93IFR5cGVFcnJvcihpdGVyYWJsZSArICcgaXMgbm90IGl0ZXJhYmxlIScpO1xuICAvLyBmYXN0IGNhc2UgZm9yIGFycmF5cyB3aXRoIGRlZmF1bHQgaXRlcmF0b3JcbiAgaWYgKGlzQXJyYXlJdGVyKGl0ZXJGbikpIGZvciAobGVuZ3RoID0gdG9MZW5ndGgoaXRlcmFibGUubGVuZ3RoKTsgbGVuZ3RoID4gaW5kZXg7IGluZGV4KyspIHtcbiAgICByZXN1bHQgPSBlbnRyaWVzID8gZihhbk9iamVjdChzdGVwID0gaXRlcmFibGVbaW5kZXhdKVswXSwgc3RlcFsxXSkgOiBmKGl0ZXJhYmxlW2luZGV4XSk7XG4gICAgaWYgKHJlc3VsdCA9PT0gQlJFQUsgfHwgcmVzdWx0ID09PSBSRVRVUk4pIHJldHVybiByZXN1bHQ7XG4gIH0gZWxzZSBmb3IgKGl0ZXJhdG9yID0gaXRlckZuLmNhbGwoaXRlcmFibGUpOyAhKHN0ZXAgPSBpdGVyYXRvci5uZXh0KCkpLmRvbmU7KSB7XG4gICAgcmVzdWx0ID0gY2FsbChpdGVyYXRvciwgZiwgc3RlcC52YWx1ZSwgZW50cmllcyk7XG4gICAgaWYgKHJlc3VsdCA9PT0gQlJFQUsgfHwgcmVzdWx0ID09PSBSRVRVUk4pIHJldHVybiByZXN1bHQ7XG4gIH1cbn07XG5leHBvcnRzLkJSRUFLID0gQlJFQUs7XG5leHBvcnRzLlJFVFVSTiA9IFJFVFVSTjtcbiIsIi8vIGh0dHBzOi8vZ2l0aHViLmNvbS96bG9pcm9jay9jb3JlLWpzL2lzc3Vlcy84NiNpc3N1ZWNvbW1lbnQtMTE1NzU5MDI4XG52YXIgZ2xvYmFsID0gbW9kdWxlLmV4cG9ydHMgPSB0eXBlb2Ygd2luZG93ICE9ICd1bmRlZmluZWQnICYmIHdpbmRvdy5NYXRoID09IE1hdGhcbiAgPyB3aW5kb3cgOiB0eXBlb2Ygc2VsZiAhPSAndW5kZWZpbmVkJyAmJiBzZWxmLk1hdGggPT0gTWF0aCA/IHNlbGZcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLW5ldy1mdW5jXG4gIDogRnVuY3Rpb24oJ3JldHVybiB0aGlzJykoKTtcbmlmICh0eXBlb2YgX19nID09ICdudW1iZXInKSBfX2cgPSBnbG9iYWw7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tdW5kZWZcbiIsInZhciBoYXNPd25Qcm9wZXJ0eSA9IHt9Lmhhc093blByb3BlcnR5O1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXQsIGtleSkge1xuICByZXR1cm4gaGFzT3duUHJvcGVydHkuY2FsbChpdCwga2V5KTtcbn07XG4iLCJ2YXIgZFAgPSByZXF1aXJlKCcuL19vYmplY3QtZHAnKTtcbnZhciBjcmVhdGVEZXNjID0gcmVxdWlyZSgnLi9fcHJvcGVydHktZGVzYycpO1xubW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL19kZXNjcmlwdG9ycycpID8gZnVuY3Rpb24gKG9iamVjdCwga2V5LCB2YWx1ZSkge1xuICByZXR1cm4gZFAuZihvYmplY3QsIGtleSwgY3JlYXRlRGVzYygxLCB2YWx1ZSkpO1xufSA6IGZ1bmN0aW9uIChvYmplY3QsIGtleSwgdmFsdWUpIHtcbiAgb2JqZWN0W2tleV0gPSB2YWx1ZTtcbiAgcmV0dXJuIG9iamVjdDtcbn07XG4iLCJ2YXIgZG9jdW1lbnQgPSByZXF1aXJlKCcuL19nbG9iYWwnKS5kb2N1bWVudDtcbm1vZHVsZS5leHBvcnRzID0gZG9jdW1lbnQgJiYgZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50O1xuIiwibW9kdWxlLmV4cG9ydHMgPSAhcmVxdWlyZSgnLi9fZGVzY3JpcHRvcnMnKSAmJiAhcmVxdWlyZSgnLi9fZmFpbHMnKShmdW5jdGlvbiAoKSB7XG4gIHJldHVybiBPYmplY3QuZGVmaW5lUHJvcGVydHkocmVxdWlyZSgnLi9fZG9tLWNyZWF0ZScpKCdkaXYnKSwgJ2EnLCB7IGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gNzsgfSB9KS5hICE9IDc7XG59KTtcbiIsInZhciBpc09iamVjdCA9IHJlcXVpcmUoJy4vX2lzLW9iamVjdCcpO1xudmFyIHNldFByb3RvdHlwZU9mID0gcmVxdWlyZSgnLi9fc2V0LXByb3RvJykuc2V0O1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAodGhhdCwgdGFyZ2V0LCBDKSB7XG4gIHZhciBTID0gdGFyZ2V0LmNvbnN0cnVjdG9yO1xuICB2YXIgUDtcbiAgaWYgKFMgIT09IEMgJiYgdHlwZW9mIFMgPT0gJ2Z1bmN0aW9uJyAmJiAoUCA9IFMucHJvdG90eXBlKSAhPT0gQy5wcm90b3R5cGUgJiYgaXNPYmplY3QoUCkgJiYgc2V0UHJvdG90eXBlT2YpIHtcbiAgICBzZXRQcm90b3R5cGVPZih0aGF0LCBQKTtcbiAgfSByZXR1cm4gdGhhdDtcbn07XG4iLCIvLyBmYXN0IGFwcGx5LCBodHRwOi8vanNwZXJmLmxua2l0LmNvbS9mYXN0LWFwcGx5LzVcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGZuLCBhcmdzLCB0aGF0KSB7XG4gIHZhciB1biA9IHRoYXQgPT09IHVuZGVmaW5lZDtcbiAgc3dpdGNoIChhcmdzLmxlbmd0aCkge1xuICAgIGNhc2UgMDogcmV0dXJuIHVuID8gZm4oKVxuICAgICAgICAgICAgICAgICAgICAgIDogZm4uY2FsbCh0aGF0KTtcbiAgICBjYXNlIDE6IHJldHVybiB1biA/IGZuKGFyZ3NbMF0pXG4gICAgICAgICAgICAgICAgICAgICAgOiBmbi5jYWxsKHRoYXQsIGFyZ3NbMF0pO1xuICAgIGNhc2UgMjogcmV0dXJuIHVuID8gZm4oYXJnc1swXSwgYXJnc1sxXSlcbiAgICAgICAgICAgICAgICAgICAgICA6IGZuLmNhbGwodGhhdCwgYXJnc1swXSwgYXJnc1sxXSk7XG4gICAgY2FzZSAzOiByZXR1cm4gdW4gPyBmbihhcmdzWzBdLCBhcmdzWzFdLCBhcmdzWzJdKVxuICAgICAgICAgICAgICAgICAgICAgIDogZm4uY2FsbCh0aGF0LCBhcmdzWzBdLCBhcmdzWzFdLCBhcmdzWzJdKTtcbiAgICBjYXNlIDQ6IHJldHVybiB1biA/IGZuKGFyZ3NbMF0sIGFyZ3NbMV0sIGFyZ3NbMl0sIGFyZ3NbM10pXG4gICAgICAgICAgICAgICAgICAgICAgOiBmbi5jYWxsKHRoYXQsIGFyZ3NbMF0sIGFyZ3NbMV0sIGFyZ3NbMl0sIGFyZ3NbM10pO1xuICB9IHJldHVybiBmbi5hcHBseSh0aGF0LCBhcmdzKTtcbn07XG4iLCIvLyBmYWxsYmFjayBmb3Igbm9uLWFycmF5LWxpa2UgRVMzIGFuZCBub24tZW51bWVyYWJsZSBvbGQgVjggc3RyaW5nc1xudmFyIGNvZiA9IHJlcXVpcmUoJy4vX2NvZicpO1xuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXByb3RvdHlwZS1idWlsdGluc1xubW9kdWxlLmV4cG9ydHMgPSBPYmplY3QoJ3onKS5wcm9wZXJ0eUlzRW51bWVyYWJsZSgwKSA/IE9iamVjdCA6IGZ1bmN0aW9uIChpdCkge1xuICByZXR1cm4gY29mKGl0KSA9PSAnU3RyaW5nJyA/IGl0LnNwbGl0KCcnKSA6IE9iamVjdChpdCk7XG59O1xuIiwiLy8gY2hlY2sgb24gZGVmYXVsdCBBcnJheSBpdGVyYXRvclxudmFyIEl0ZXJhdG9ycyA9IHJlcXVpcmUoJy4vX2l0ZXJhdG9ycycpO1xudmFyIElURVJBVE9SID0gcmVxdWlyZSgnLi9fd2tzJykoJ2l0ZXJhdG9yJyk7XG52YXIgQXJyYXlQcm90byA9IEFycmF5LnByb3RvdHlwZTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXQpIHtcbiAgcmV0dXJuIGl0ICE9PSB1bmRlZmluZWQgJiYgKEl0ZXJhdG9ycy5BcnJheSA9PT0gaXQgfHwgQXJyYXlQcm90b1tJVEVSQVRPUl0gPT09IGl0KTtcbn07XG4iLCIvLyA3LjIuMiBJc0FycmF5KGFyZ3VtZW50KVxudmFyIGNvZiA9IHJlcXVpcmUoJy4vX2NvZicpO1xubW9kdWxlLmV4cG9ydHMgPSBBcnJheS5pc0FycmF5IHx8IGZ1bmN0aW9uIGlzQXJyYXkoYXJnKSB7XG4gIHJldHVybiBjb2YoYXJnKSA9PSAnQXJyYXknO1xufTtcbiIsIi8vIDIwLjEuMi4zIE51bWJlci5pc0ludGVnZXIobnVtYmVyKVxudmFyIGlzT2JqZWN0ID0gcmVxdWlyZSgnLi9faXMtb2JqZWN0Jyk7XG52YXIgZmxvb3IgPSBNYXRoLmZsb29yO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBpc0ludGVnZXIoaXQpIHtcbiAgcmV0dXJuICFpc09iamVjdChpdCkgJiYgaXNGaW5pdGUoaXQpICYmIGZsb29yKGl0KSA9PT0gaXQ7XG59O1xuIiwibW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXQpIHtcbiAgcmV0dXJuIHR5cGVvZiBpdCA9PT0gJ29iamVjdCcgPyBpdCAhPT0gbnVsbCA6IHR5cGVvZiBpdCA9PT0gJ2Z1bmN0aW9uJztcbn07XG4iLCIvLyA3LjIuOCBJc1JlZ0V4cChhcmd1bWVudClcbnZhciBpc09iamVjdCA9IHJlcXVpcmUoJy4vX2lzLW9iamVjdCcpO1xudmFyIGNvZiA9IHJlcXVpcmUoJy4vX2NvZicpO1xudmFyIE1BVENIID0gcmVxdWlyZSgnLi9fd2tzJykoJ21hdGNoJyk7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdCkge1xuICB2YXIgaXNSZWdFeHA7XG4gIHJldHVybiBpc09iamVjdChpdCkgJiYgKChpc1JlZ0V4cCA9IGl0W01BVENIXSkgIT09IHVuZGVmaW5lZCA/ICEhaXNSZWdFeHAgOiBjb2YoaXQpID09ICdSZWdFeHAnKTtcbn07XG4iLCIvLyBjYWxsIHNvbWV0aGluZyBvbiBpdGVyYXRvciBzdGVwIHdpdGggc2FmZSBjbG9zaW5nIG9uIGVycm9yXG52YXIgYW5PYmplY3QgPSByZXF1aXJlKCcuL19hbi1vYmplY3QnKTtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0ZXJhdG9yLCBmbiwgdmFsdWUsIGVudHJpZXMpIHtcbiAgdHJ5IHtcbiAgICByZXR1cm4gZW50cmllcyA/IGZuKGFuT2JqZWN0KHZhbHVlKVswXSwgdmFsdWVbMV0pIDogZm4odmFsdWUpO1xuICAvLyA3LjQuNiBJdGVyYXRvckNsb3NlKGl0ZXJhdG9yLCBjb21wbGV0aW9uKVxuICB9IGNhdGNoIChlKSB7XG4gICAgdmFyIHJldCA9IGl0ZXJhdG9yWydyZXR1cm4nXTtcbiAgICBpZiAocmV0ICE9PSB1bmRlZmluZWQpIGFuT2JqZWN0KHJldC5jYWxsKGl0ZXJhdG9yKSk7XG4gICAgdGhyb3cgZTtcbiAgfVxufTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciBjcmVhdGUgPSByZXF1aXJlKCcuL19vYmplY3QtY3JlYXRlJyk7XG52YXIgZGVzY3JpcHRvciA9IHJlcXVpcmUoJy4vX3Byb3BlcnR5LWRlc2MnKTtcbnZhciBzZXRUb1N0cmluZ1RhZyA9IHJlcXVpcmUoJy4vX3NldC10by1zdHJpbmctdGFnJyk7XG52YXIgSXRlcmF0b3JQcm90b3R5cGUgPSB7fTtcblxuLy8gMjUuMS4yLjEuMSAlSXRlcmF0b3JQcm90b3R5cGUlW0BAaXRlcmF0b3JdKClcbnJlcXVpcmUoJy4vX2hpZGUnKShJdGVyYXRvclByb3RvdHlwZSwgcmVxdWlyZSgnLi9fd2tzJykoJ2l0ZXJhdG9yJyksIGZ1bmN0aW9uICgpIHsgcmV0dXJuIHRoaXM7IH0pO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChDb25zdHJ1Y3RvciwgTkFNRSwgbmV4dCkge1xuICBDb25zdHJ1Y3Rvci5wcm90b3R5cGUgPSBjcmVhdGUoSXRlcmF0b3JQcm90b3R5cGUsIHsgbmV4dDogZGVzY3JpcHRvcigxLCBuZXh0KSB9KTtcbiAgc2V0VG9TdHJpbmdUYWcoQ29uc3RydWN0b3IsIE5BTUUgKyAnIEl0ZXJhdG9yJyk7XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIExJQlJBUlkgPSByZXF1aXJlKCcuL19saWJyYXJ5Jyk7XG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyIHJlZGVmaW5lID0gcmVxdWlyZSgnLi9fcmVkZWZpbmUnKTtcbnZhciBoaWRlID0gcmVxdWlyZSgnLi9faGlkZScpO1xudmFyIEl0ZXJhdG9ycyA9IHJlcXVpcmUoJy4vX2l0ZXJhdG9ycycpO1xudmFyICRpdGVyQ3JlYXRlID0gcmVxdWlyZSgnLi9faXRlci1jcmVhdGUnKTtcbnZhciBzZXRUb1N0cmluZ1RhZyA9IHJlcXVpcmUoJy4vX3NldC10by1zdHJpbmctdGFnJyk7XG52YXIgZ2V0UHJvdG90eXBlT2YgPSByZXF1aXJlKCcuL19vYmplY3QtZ3BvJyk7XG52YXIgSVRFUkFUT1IgPSByZXF1aXJlKCcuL193a3MnKSgnaXRlcmF0b3InKTtcbnZhciBCVUdHWSA9ICEoW10ua2V5cyAmJiAnbmV4dCcgaW4gW10ua2V5cygpKTsgLy8gU2FmYXJpIGhhcyBidWdneSBpdGVyYXRvcnMgdy9vIGBuZXh0YFxudmFyIEZGX0lURVJBVE9SID0gJ0BAaXRlcmF0b3InO1xudmFyIEtFWVMgPSAna2V5cyc7XG52YXIgVkFMVUVTID0gJ3ZhbHVlcyc7XG5cbnZhciByZXR1cm5UaGlzID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gdGhpczsgfTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoQmFzZSwgTkFNRSwgQ29uc3RydWN0b3IsIG5leHQsIERFRkFVTFQsIElTX1NFVCwgRk9SQ0VEKSB7XG4gICRpdGVyQ3JlYXRlKENvbnN0cnVjdG9yLCBOQU1FLCBuZXh0KTtcbiAgdmFyIGdldE1ldGhvZCA9IGZ1bmN0aW9uIChraW5kKSB7XG4gICAgaWYgKCFCVUdHWSAmJiBraW5kIGluIHByb3RvKSByZXR1cm4gcHJvdG9ba2luZF07XG4gICAgc3dpdGNoIChraW5kKSB7XG4gICAgICBjYXNlIEtFWVM6IHJldHVybiBmdW5jdGlvbiBrZXlzKCkgeyByZXR1cm4gbmV3IENvbnN0cnVjdG9yKHRoaXMsIGtpbmQpOyB9O1xuICAgICAgY2FzZSBWQUxVRVM6IHJldHVybiBmdW5jdGlvbiB2YWx1ZXMoKSB7IHJldHVybiBuZXcgQ29uc3RydWN0b3IodGhpcywga2luZCk7IH07XG4gICAgfSByZXR1cm4gZnVuY3Rpb24gZW50cmllcygpIHsgcmV0dXJuIG5ldyBDb25zdHJ1Y3Rvcih0aGlzLCBraW5kKTsgfTtcbiAgfTtcbiAgdmFyIFRBRyA9IE5BTUUgKyAnIEl0ZXJhdG9yJztcbiAgdmFyIERFRl9WQUxVRVMgPSBERUZBVUxUID09IFZBTFVFUztcbiAgdmFyIFZBTFVFU19CVUcgPSBmYWxzZTtcbiAgdmFyIHByb3RvID0gQmFzZS5wcm90b3R5cGU7XG4gIHZhciAkbmF0aXZlID0gcHJvdG9bSVRFUkFUT1JdIHx8IHByb3RvW0ZGX0lURVJBVE9SXSB8fCBERUZBVUxUICYmIHByb3RvW0RFRkFVTFRdO1xuICB2YXIgJGRlZmF1bHQgPSAkbmF0aXZlIHx8IGdldE1ldGhvZChERUZBVUxUKTtcbiAgdmFyICRlbnRyaWVzID0gREVGQVVMVCA/ICFERUZfVkFMVUVTID8gJGRlZmF1bHQgOiBnZXRNZXRob2QoJ2VudHJpZXMnKSA6IHVuZGVmaW5lZDtcbiAgdmFyICRhbnlOYXRpdmUgPSBOQU1FID09ICdBcnJheScgPyBwcm90by5lbnRyaWVzIHx8ICRuYXRpdmUgOiAkbmF0aXZlO1xuICB2YXIgbWV0aG9kcywga2V5LCBJdGVyYXRvclByb3RvdHlwZTtcbiAgLy8gRml4IG5hdGl2ZVxuICBpZiAoJGFueU5hdGl2ZSkge1xuICAgIEl0ZXJhdG9yUHJvdG90eXBlID0gZ2V0UHJvdG90eXBlT2YoJGFueU5hdGl2ZS5jYWxsKG5ldyBCYXNlKCkpKTtcbiAgICBpZiAoSXRlcmF0b3JQcm90b3R5cGUgIT09IE9iamVjdC5wcm90b3R5cGUgJiYgSXRlcmF0b3JQcm90b3R5cGUubmV4dCkge1xuICAgICAgLy8gU2V0IEBAdG9TdHJpbmdUYWcgdG8gbmF0aXZlIGl0ZXJhdG9yc1xuICAgICAgc2V0VG9TdHJpbmdUYWcoSXRlcmF0b3JQcm90b3R5cGUsIFRBRywgdHJ1ZSk7XG4gICAgICAvLyBmaXggZm9yIHNvbWUgb2xkIGVuZ2luZXNcbiAgICAgIGlmICghTElCUkFSWSAmJiB0eXBlb2YgSXRlcmF0b3JQcm90b3R5cGVbSVRFUkFUT1JdICE9ICdmdW5jdGlvbicpIGhpZGUoSXRlcmF0b3JQcm90b3R5cGUsIElURVJBVE9SLCByZXR1cm5UaGlzKTtcbiAgICB9XG4gIH1cbiAgLy8gZml4IEFycmF5I3t2YWx1ZXMsIEBAaXRlcmF0b3J9Lm5hbWUgaW4gVjggLyBGRlxuICBpZiAoREVGX1ZBTFVFUyAmJiAkbmF0aXZlICYmICRuYXRpdmUubmFtZSAhPT0gVkFMVUVTKSB7XG4gICAgVkFMVUVTX0JVRyA9IHRydWU7XG4gICAgJGRlZmF1bHQgPSBmdW5jdGlvbiB2YWx1ZXMoKSB7IHJldHVybiAkbmF0aXZlLmNhbGwodGhpcyk7IH07XG4gIH1cbiAgLy8gRGVmaW5lIGl0ZXJhdG9yXG4gIGlmICgoIUxJQlJBUlkgfHwgRk9SQ0VEKSAmJiAoQlVHR1kgfHwgVkFMVUVTX0JVRyB8fCAhcHJvdG9bSVRFUkFUT1JdKSkge1xuICAgIGhpZGUocHJvdG8sIElURVJBVE9SLCAkZGVmYXVsdCk7XG4gIH1cbiAgLy8gUGx1ZyBmb3IgbGlicmFyeVxuICBJdGVyYXRvcnNbTkFNRV0gPSAkZGVmYXVsdDtcbiAgSXRlcmF0b3JzW1RBR10gPSByZXR1cm5UaGlzO1xuICBpZiAoREVGQVVMVCkge1xuICAgIG1ldGhvZHMgPSB7XG4gICAgICB2YWx1ZXM6IERFRl9WQUxVRVMgPyAkZGVmYXVsdCA6IGdldE1ldGhvZChWQUxVRVMpLFxuICAgICAga2V5czogSVNfU0VUID8gJGRlZmF1bHQgOiBnZXRNZXRob2QoS0VZUyksXG4gICAgICBlbnRyaWVzOiAkZW50cmllc1xuICAgIH07XG4gICAgaWYgKEZPUkNFRCkgZm9yIChrZXkgaW4gbWV0aG9kcykge1xuICAgICAgaWYgKCEoa2V5IGluIHByb3RvKSkgcmVkZWZpbmUocHJvdG8sIGtleSwgbWV0aG9kc1trZXldKTtcbiAgICB9IGVsc2UgJGV4cG9ydCgkZXhwb3J0LlAgKyAkZXhwb3J0LkYgKiAoQlVHR1kgfHwgVkFMVUVTX0JVRyksIE5BTUUsIG1ldGhvZHMpO1xuICB9XG4gIHJldHVybiBtZXRob2RzO1xufTtcbiIsInZhciBJVEVSQVRPUiA9IHJlcXVpcmUoJy4vX3drcycpKCdpdGVyYXRvcicpO1xudmFyIFNBRkVfQ0xPU0lORyA9IGZhbHNlO1xuXG50cnkge1xuICB2YXIgcml0ZXIgPSBbN11bSVRFUkFUT1JdKCk7XG4gIHJpdGVyWydyZXR1cm4nXSA9IGZ1bmN0aW9uICgpIHsgU0FGRV9DTE9TSU5HID0gdHJ1ZTsgfTtcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXRocm93LWxpdGVyYWxcbiAgQXJyYXkuZnJvbShyaXRlciwgZnVuY3Rpb24gKCkgeyB0aHJvdyAyOyB9KTtcbn0gY2F0Y2ggKGUpIHsgLyogZW1wdHkgKi8gfVxuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChleGVjLCBza2lwQ2xvc2luZykge1xuICBpZiAoIXNraXBDbG9zaW5nICYmICFTQUZFX0NMT1NJTkcpIHJldHVybiBmYWxzZTtcbiAgdmFyIHNhZmUgPSBmYWxzZTtcbiAgdHJ5IHtcbiAgICB2YXIgYXJyID0gWzddO1xuICAgIHZhciBpdGVyID0gYXJyW0lURVJBVE9SXSgpO1xuICAgIGl0ZXIubmV4dCA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHsgZG9uZTogc2FmZSA9IHRydWUgfTsgfTtcbiAgICBhcnJbSVRFUkFUT1JdID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gaXRlcjsgfTtcbiAgICBleGVjKGFycik7XG4gIH0gY2F0Y2ggKGUpIHsgLyogZW1wdHkgKi8gfVxuICByZXR1cm4gc2FmZTtcbn07XG4iLCJtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChkb25lLCB2YWx1ZSkge1xuICByZXR1cm4geyB2YWx1ZTogdmFsdWUsIGRvbmU6ICEhZG9uZSB9O1xufTtcbiIsIm1vZHVsZS5leHBvcnRzID0ge307XG4iLCJtb2R1bGUuZXhwb3J0cyA9IGZhbHNlO1xuIiwiLy8gMjAuMi4yLjE0IE1hdGguZXhwbTEoeClcbnZhciAkZXhwbTEgPSBNYXRoLmV4cG0xO1xubW9kdWxlLmV4cG9ydHMgPSAoISRleHBtMVxuICAvLyBPbGQgRkYgYnVnXG4gIHx8ICRleHBtMSgxMCkgPiAyMjAyNS40NjU3OTQ4MDY3MTkgfHwgJGV4cG0xKDEwKSA8IDIyMDI1LjQ2NTc5NDgwNjcxNjUxNjhcbiAgLy8gVG9yIEJyb3dzZXIgYnVnXG4gIHx8ICRleHBtMSgtMmUtMTcpICE9IC0yZS0xN1xuKSA/IGZ1bmN0aW9uIGV4cG0xKHgpIHtcbiAgcmV0dXJuICh4ID0gK3gpID09IDAgPyB4IDogeCA+IC0xZS02ICYmIHggPCAxZS02ID8geCArIHggKiB4IC8gMiA6IE1hdGguZXhwKHgpIC0gMTtcbn0gOiAkZXhwbTE7XG4iLCIvLyAyMC4yLjIuMTYgTWF0aC5mcm91bmQoeClcbnZhciBzaWduID0gcmVxdWlyZSgnLi9fbWF0aC1zaWduJyk7XG52YXIgcG93ID0gTWF0aC5wb3c7XG52YXIgRVBTSUxPTiA9IHBvdygyLCAtNTIpO1xudmFyIEVQU0lMT04zMiA9IHBvdygyLCAtMjMpO1xudmFyIE1BWDMyID0gcG93KDIsIDEyNykgKiAoMiAtIEVQU0lMT04zMik7XG52YXIgTUlOMzIgPSBwb3coMiwgLTEyNik7XG5cbnZhciByb3VuZFRpZXNUb0V2ZW4gPSBmdW5jdGlvbiAobikge1xuICByZXR1cm4gbiArIDEgLyBFUFNJTE9OIC0gMSAvIEVQU0lMT047XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IE1hdGguZnJvdW5kIHx8IGZ1bmN0aW9uIGZyb3VuZCh4KSB7XG4gIHZhciAkYWJzID0gTWF0aC5hYnMoeCk7XG4gIHZhciAkc2lnbiA9IHNpZ24oeCk7XG4gIHZhciBhLCByZXN1bHQ7XG4gIGlmICgkYWJzIDwgTUlOMzIpIHJldHVybiAkc2lnbiAqIHJvdW5kVGllc1RvRXZlbigkYWJzIC8gTUlOMzIgLyBFUFNJTE9OMzIpICogTUlOMzIgKiBFUFNJTE9OMzI7XG4gIGEgPSAoMSArIEVQU0lMT04zMiAvIEVQU0lMT04pICogJGFicztcbiAgcmVzdWx0ID0gYSAtIChhIC0gJGFicyk7XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1zZWxmLWNvbXBhcmVcbiAgaWYgKHJlc3VsdCA+IE1BWDMyIHx8IHJlc3VsdCAhPSByZXN1bHQpIHJldHVybiAkc2lnbiAqIEluZmluaXR5O1xuICByZXR1cm4gJHNpZ24gKiByZXN1bHQ7XG59O1xuIiwiLy8gMjAuMi4yLjIwIE1hdGgubG9nMXAoeClcbm1vZHVsZS5leHBvcnRzID0gTWF0aC5sb2cxcCB8fCBmdW5jdGlvbiBsb2cxcCh4KSB7XG4gIHJldHVybiAoeCA9ICt4KSA+IC0xZS04ICYmIHggPCAxZS04ID8geCAtIHggKiB4IC8gMiA6IE1hdGgubG9nKDEgKyB4KTtcbn07XG4iLCIvLyAyMC4yLjIuMjggTWF0aC5zaWduKHgpXG5tb2R1bGUuZXhwb3J0cyA9IE1hdGguc2lnbiB8fCBmdW5jdGlvbiBzaWduKHgpIHtcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXNlbGYtY29tcGFyZVxuICByZXR1cm4gKHggPSAreCkgPT0gMCB8fCB4ICE9IHggPyB4IDogeCA8IDAgPyAtMSA6IDE7XG59O1xuIiwidmFyIE1FVEEgPSByZXF1aXJlKCcuL191aWQnKSgnbWV0YScpO1xudmFyIGlzT2JqZWN0ID0gcmVxdWlyZSgnLi9faXMtb2JqZWN0Jyk7XG52YXIgaGFzID0gcmVxdWlyZSgnLi9faGFzJyk7XG52YXIgc2V0RGVzYyA9IHJlcXVpcmUoJy4vX29iamVjdC1kcCcpLmY7XG52YXIgaWQgPSAwO1xudmFyIGlzRXh0ZW5zaWJsZSA9IE9iamVjdC5pc0V4dGVuc2libGUgfHwgZnVuY3Rpb24gKCkge1xuICByZXR1cm4gdHJ1ZTtcbn07XG52YXIgRlJFRVpFID0gIXJlcXVpcmUoJy4vX2ZhaWxzJykoZnVuY3Rpb24gKCkge1xuICByZXR1cm4gaXNFeHRlbnNpYmxlKE9iamVjdC5wcmV2ZW50RXh0ZW5zaW9ucyh7fSkpO1xufSk7XG52YXIgc2V0TWV0YSA9IGZ1bmN0aW9uIChpdCkge1xuICBzZXREZXNjKGl0LCBNRVRBLCB7IHZhbHVlOiB7XG4gICAgaTogJ08nICsgKytpZCwgLy8gb2JqZWN0IElEXG4gICAgdzoge30gICAgICAgICAgLy8gd2VhayBjb2xsZWN0aW9ucyBJRHNcbiAgfSB9KTtcbn07XG52YXIgZmFzdEtleSA9IGZ1bmN0aW9uIChpdCwgY3JlYXRlKSB7XG4gIC8vIHJldHVybiBwcmltaXRpdmUgd2l0aCBwcmVmaXhcbiAgaWYgKCFpc09iamVjdChpdCkpIHJldHVybiB0eXBlb2YgaXQgPT0gJ3N5bWJvbCcgPyBpdCA6ICh0eXBlb2YgaXQgPT0gJ3N0cmluZycgPyAnUycgOiAnUCcpICsgaXQ7XG4gIGlmICghaGFzKGl0LCBNRVRBKSkge1xuICAgIC8vIGNhbid0IHNldCBtZXRhZGF0YSB0byB1bmNhdWdodCBmcm96ZW4gb2JqZWN0XG4gICAgaWYgKCFpc0V4dGVuc2libGUoaXQpKSByZXR1cm4gJ0YnO1xuICAgIC8vIG5vdCBuZWNlc3NhcnkgdG8gYWRkIG1ldGFkYXRhXG4gICAgaWYgKCFjcmVhdGUpIHJldHVybiAnRSc7XG4gICAgLy8gYWRkIG1pc3NpbmcgbWV0YWRhdGFcbiAgICBzZXRNZXRhKGl0KTtcbiAgLy8gcmV0dXJuIG9iamVjdCBJRFxuICB9IHJldHVybiBpdFtNRVRBXS5pO1xufTtcbnZhciBnZXRXZWFrID0gZnVuY3Rpb24gKGl0LCBjcmVhdGUpIHtcbiAgaWYgKCFoYXMoaXQsIE1FVEEpKSB7XG4gICAgLy8gY2FuJ3Qgc2V0IG1ldGFkYXRhIHRvIHVuY2F1Z2h0IGZyb3plbiBvYmplY3RcbiAgICBpZiAoIWlzRXh0ZW5zaWJsZShpdCkpIHJldHVybiB0cnVlO1xuICAgIC8vIG5vdCBuZWNlc3NhcnkgdG8gYWRkIG1ldGFkYXRhXG4gICAgaWYgKCFjcmVhdGUpIHJldHVybiBmYWxzZTtcbiAgICAvLyBhZGQgbWlzc2luZyBtZXRhZGF0YVxuICAgIHNldE1ldGEoaXQpO1xuICAvLyByZXR1cm4gaGFzaCB3ZWFrIGNvbGxlY3Rpb25zIElEc1xuICB9IHJldHVybiBpdFtNRVRBXS53O1xufTtcbi8vIGFkZCBtZXRhZGF0YSBvbiBmcmVlemUtZmFtaWx5IG1ldGhvZHMgY2FsbGluZ1xudmFyIG9uRnJlZXplID0gZnVuY3Rpb24gKGl0KSB7XG4gIGlmIChGUkVFWkUgJiYgbWV0YS5ORUVEICYmIGlzRXh0ZW5zaWJsZShpdCkgJiYgIWhhcyhpdCwgTUVUQSkpIHNldE1ldGEoaXQpO1xuICByZXR1cm4gaXQ7XG59O1xudmFyIG1ldGEgPSBtb2R1bGUuZXhwb3J0cyA9IHtcbiAgS0VZOiBNRVRBLFxuICBORUVEOiBmYWxzZSxcbiAgZmFzdEtleTogZmFzdEtleSxcbiAgZ2V0V2VhazogZ2V0V2VhayxcbiAgb25GcmVlemU6IG9uRnJlZXplXG59O1xuIiwidmFyIGdsb2JhbCA9IHJlcXVpcmUoJy4vX2dsb2JhbCcpO1xudmFyIG1hY3JvdGFzayA9IHJlcXVpcmUoJy4vX3Rhc2snKS5zZXQ7XG52YXIgT2JzZXJ2ZXIgPSBnbG9iYWwuTXV0YXRpb25PYnNlcnZlciB8fCBnbG9iYWwuV2ViS2l0TXV0YXRpb25PYnNlcnZlcjtcbnZhciBwcm9jZXNzID0gZ2xvYmFsLnByb2Nlc3M7XG52YXIgUHJvbWlzZSA9IGdsb2JhbC5Qcm9taXNlO1xudmFyIGlzTm9kZSA9IHJlcXVpcmUoJy4vX2NvZicpKHByb2Nlc3MpID09ICdwcm9jZXNzJztcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoKSB7XG4gIHZhciBoZWFkLCBsYXN0LCBub3RpZnk7XG5cbiAgdmFyIGZsdXNoID0gZnVuY3Rpb24gKCkge1xuICAgIHZhciBwYXJlbnQsIGZuO1xuICAgIGlmIChpc05vZGUgJiYgKHBhcmVudCA9IHByb2Nlc3MuZG9tYWluKSkgcGFyZW50LmV4aXQoKTtcbiAgICB3aGlsZSAoaGVhZCkge1xuICAgICAgZm4gPSBoZWFkLmZuO1xuICAgICAgaGVhZCA9IGhlYWQubmV4dDtcbiAgICAgIHRyeSB7XG4gICAgICAgIGZuKCk7XG4gICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIGlmIChoZWFkKSBub3RpZnkoKTtcbiAgICAgICAgZWxzZSBsYXN0ID0gdW5kZWZpbmVkO1xuICAgICAgICB0aHJvdyBlO1xuICAgICAgfVxuICAgIH0gbGFzdCA9IHVuZGVmaW5lZDtcbiAgICBpZiAocGFyZW50KSBwYXJlbnQuZW50ZXIoKTtcbiAgfTtcblxuICAvLyBOb2RlLmpzXG4gIGlmIChpc05vZGUpIHtcbiAgICBub3RpZnkgPSBmdW5jdGlvbiAoKSB7XG4gICAgICBwcm9jZXNzLm5leHRUaWNrKGZsdXNoKTtcbiAgICB9O1xuICAvLyBicm93c2VycyB3aXRoIE11dGF0aW9uT2JzZXJ2ZXIsIGV4Y2VwdCBpT1MgU2FmYXJpIC0gaHR0cHM6Ly9naXRodWIuY29tL3psb2lyb2NrL2NvcmUtanMvaXNzdWVzLzMzOVxuICB9IGVsc2UgaWYgKE9ic2VydmVyICYmICEoZ2xvYmFsLm5hdmlnYXRvciAmJiBnbG9iYWwubmF2aWdhdG9yLnN0YW5kYWxvbmUpKSB7XG4gICAgdmFyIHRvZ2dsZSA9IHRydWU7XG4gICAgdmFyIG5vZGUgPSBkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZSgnJyk7XG4gICAgbmV3IE9ic2VydmVyKGZsdXNoKS5vYnNlcnZlKG5vZGUsIHsgY2hhcmFjdGVyRGF0YTogdHJ1ZSB9KTsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby1uZXdcbiAgICBub3RpZnkgPSBmdW5jdGlvbiAoKSB7XG4gICAgICBub2RlLmRhdGEgPSB0b2dnbGUgPSAhdG9nZ2xlO1xuICAgIH07XG4gIC8vIGVudmlyb25tZW50cyB3aXRoIG1heWJlIG5vbi1jb21wbGV0ZWx5IGNvcnJlY3QsIGJ1dCBleGlzdGVudCBQcm9taXNlXG4gIH0gZWxzZSBpZiAoUHJvbWlzZSAmJiBQcm9taXNlLnJlc29sdmUpIHtcbiAgICAvLyBQcm9taXNlLnJlc29sdmUgd2l0aG91dCBhbiBhcmd1bWVudCB0aHJvd3MgYW4gZXJyb3IgaW4gTEcgV2ViT1MgMlxuICAgIHZhciBwcm9taXNlID0gUHJvbWlzZS5yZXNvbHZlKHVuZGVmaW5lZCk7XG4gICAgbm90aWZ5ID0gZnVuY3Rpb24gKCkge1xuICAgICAgcHJvbWlzZS50aGVuKGZsdXNoKTtcbiAgICB9O1xuICAvLyBmb3Igb3RoZXIgZW52aXJvbm1lbnRzIC0gbWFjcm90YXNrIGJhc2VkIG9uOlxuICAvLyAtIHNldEltbWVkaWF0ZVxuICAvLyAtIE1lc3NhZ2VDaGFubmVsXG4gIC8vIC0gd2luZG93LnBvc3RNZXNzYWdcbiAgLy8gLSBvbnJlYWR5c3RhdGVjaGFuZ2VcbiAgLy8gLSBzZXRUaW1lb3V0XG4gIH0gZWxzZSB7XG4gICAgbm90aWZ5ID0gZnVuY3Rpb24gKCkge1xuICAgICAgLy8gc3RyYW5nZSBJRSArIHdlYnBhY2sgZGV2IHNlcnZlciBidWcgLSB1c2UgLmNhbGwoZ2xvYmFsKVxuICAgICAgbWFjcm90YXNrLmNhbGwoZ2xvYmFsLCBmbHVzaCk7XG4gICAgfTtcbiAgfVxuXG4gIHJldHVybiBmdW5jdGlvbiAoZm4pIHtcbiAgICB2YXIgdGFzayA9IHsgZm46IGZuLCBuZXh0OiB1bmRlZmluZWQgfTtcbiAgICBpZiAobGFzdCkgbGFzdC5uZXh0ID0gdGFzaztcbiAgICBpZiAoIWhlYWQpIHtcbiAgICAgIGhlYWQgPSB0YXNrO1xuICAgICAgbm90aWZ5KCk7XG4gICAgfSBsYXN0ID0gdGFzaztcbiAgfTtcbn07XG4iLCIndXNlIHN0cmljdCc7XG4vLyAyNS40LjEuNSBOZXdQcm9taXNlQ2FwYWJpbGl0eShDKVxudmFyIGFGdW5jdGlvbiA9IHJlcXVpcmUoJy4vX2EtZnVuY3Rpb24nKTtcblxuZnVuY3Rpb24gUHJvbWlzZUNhcGFiaWxpdHkoQykge1xuICB2YXIgcmVzb2x2ZSwgcmVqZWN0O1xuICB0aGlzLnByb21pc2UgPSBuZXcgQyhmdW5jdGlvbiAoJCRyZXNvbHZlLCAkJHJlamVjdCkge1xuICAgIGlmIChyZXNvbHZlICE9PSB1bmRlZmluZWQgfHwgcmVqZWN0ICE9PSB1bmRlZmluZWQpIHRocm93IFR5cGVFcnJvcignQmFkIFByb21pc2UgY29uc3RydWN0b3InKTtcbiAgICByZXNvbHZlID0gJCRyZXNvbHZlO1xuICAgIHJlamVjdCA9ICQkcmVqZWN0O1xuICB9KTtcbiAgdGhpcy5yZXNvbHZlID0gYUZ1bmN0aW9uKHJlc29sdmUpO1xuICB0aGlzLnJlamVjdCA9IGFGdW5jdGlvbihyZWplY3QpO1xufVxuXG5tb2R1bGUuZXhwb3J0cy5mID0gZnVuY3Rpb24gKEMpIHtcbiAgcmV0dXJuIG5ldyBQcm9taXNlQ2FwYWJpbGl0eShDKTtcbn07XG4iLCIndXNlIHN0cmljdCc7XG4vLyAxOS4xLjIuMSBPYmplY3QuYXNzaWduKHRhcmdldCwgc291cmNlLCAuLi4pXG52YXIgZ2V0S2V5cyA9IHJlcXVpcmUoJy4vX29iamVjdC1rZXlzJyk7XG52YXIgZ09QUyA9IHJlcXVpcmUoJy4vX29iamVjdC1nb3BzJyk7XG52YXIgcElFID0gcmVxdWlyZSgnLi9fb2JqZWN0LXBpZScpO1xudmFyIHRvT2JqZWN0ID0gcmVxdWlyZSgnLi9fdG8tb2JqZWN0Jyk7XG52YXIgSU9iamVjdCA9IHJlcXVpcmUoJy4vX2lvYmplY3QnKTtcbnZhciAkYXNzaWduID0gT2JqZWN0LmFzc2lnbjtcblxuLy8gc2hvdWxkIHdvcmsgd2l0aCBzeW1ib2xzIGFuZCBzaG91bGQgaGF2ZSBkZXRlcm1pbmlzdGljIHByb3BlcnR5IG9yZGVyIChWOCBidWcpXG5tb2R1bGUuZXhwb3J0cyA9ICEkYXNzaWduIHx8IHJlcXVpcmUoJy4vX2ZhaWxzJykoZnVuY3Rpb24gKCkge1xuICB2YXIgQSA9IHt9O1xuICB2YXIgQiA9IHt9O1xuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW5kZWZcbiAgdmFyIFMgPSBTeW1ib2woKTtcbiAgdmFyIEsgPSAnYWJjZGVmZ2hpamtsbW5vcHFyc3QnO1xuICBBW1NdID0gNztcbiAgSy5zcGxpdCgnJykuZm9yRWFjaChmdW5jdGlvbiAoaykgeyBCW2tdID0gazsgfSk7XG4gIHJldHVybiAkYXNzaWduKHt9LCBBKVtTXSAhPSA3IHx8IE9iamVjdC5rZXlzKCRhc3NpZ24oe30sIEIpKS5qb2luKCcnKSAhPSBLO1xufSkgPyBmdW5jdGlvbiBhc3NpZ24odGFyZ2V0LCBzb3VyY2UpIHsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby11bnVzZWQtdmFyc1xuICB2YXIgVCA9IHRvT2JqZWN0KHRhcmdldCk7XG4gIHZhciBhTGVuID0gYXJndW1lbnRzLmxlbmd0aDtcbiAgdmFyIGluZGV4ID0gMTtcbiAgdmFyIGdldFN5bWJvbHMgPSBnT1BTLmY7XG4gIHZhciBpc0VudW0gPSBwSUUuZjtcbiAgd2hpbGUgKGFMZW4gPiBpbmRleCkge1xuICAgIHZhciBTID0gSU9iamVjdChhcmd1bWVudHNbaW5kZXgrK10pO1xuICAgIHZhciBrZXlzID0gZ2V0U3ltYm9scyA/IGdldEtleXMoUykuY29uY2F0KGdldFN5bWJvbHMoUykpIDogZ2V0S2V5cyhTKTtcbiAgICB2YXIgbGVuZ3RoID0ga2V5cy5sZW5ndGg7XG4gICAgdmFyIGogPSAwO1xuICAgIHZhciBrZXk7XG4gICAgd2hpbGUgKGxlbmd0aCA+IGopIGlmIChpc0VudW0uY2FsbChTLCBrZXkgPSBrZXlzW2orK10pKSBUW2tleV0gPSBTW2tleV07XG4gIH0gcmV0dXJuIFQ7XG59IDogJGFzc2lnbjtcbiIsIi8vIDE5LjEuMi4yIC8gMTUuMi4zLjUgT2JqZWN0LmNyZWF0ZShPIFssIFByb3BlcnRpZXNdKVxudmFyIGFuT2JqZWN0ID0gcmVxdWlyZSgnLi9fYW4tb2JqZWN0Jyk7XG52YXIgZFBzID0gcmVxdWlyZSgnLi9fb2JqZWN0LWRwcycpO1xudmFyIGVudW1CdWdLZXlzID0gcmVxdWlyZSgnLi9fZW51bS1idWcta2V5cycpO1xudmFyIElFX1BST1RPID0gcmVxdWlyZSgnLi9fc2hhcmVkLWtleScpKCdJRV9QUk9UTycpO1xudmFyIEVtcHR5ID0gZnVuY3Rpb24gKCkgeyAvKiBlbXB0eSAqLyB9O1xudmFyIFBST1RPVFlQRSA9ICdwcm90b3R5cGUnO1xuXG4vLyBDcmVhdGUgb2JqZWN0IHdpdGggZmFrZSBgbnVsbGAgcHJvdG90eXBlOiB1c2UgaWZyYW1lIE9iamVjdCB3aXRoIGNsZWFyZWQgcHJvdG90eXBlXG52YXIgY3JlYXRlRGljdCA9IGZ1bmN0aW9uICgpIHtcbiAgLy8gVGhyYXNoLCB3YXN0ZSBhbmQgc29kb215OiBJRSBHQyBidWdcbiAgdmFyIGlmcmFtZSA9IHJlcXVpcmUoJy4vX2RvbS1jcmVhdGUnKSgnaWZyYW1lJyk7XG4gIHZhciBpID0gZW51bUJ1Z0tleXMubGVuZ3RoO1xuICB2YXIgbHQgPSAnPCc7XG4gIHZhciBndCA9ICc+JztcbiAgdmFyIGlmcmFtZURvY3VtZW50O1xuICBpZnJhbWUuc3R5bGUuZGlzcGxheSA9ICdub25lJztcbiAgcmVxdWlyZSgnLi9faHRtbCcpLmFwcGVuZENoaWxkKGlmcmFtZSk7XG4gIGlmcmFtZS5zcmMgPSAnamF2YXNjcmlwdDonOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLXNjcmlwdC11cmxcbiAgLy8gY3JlYXRlRGljdCA9IGlmcmFtZS5jb250ZW50V2luZG93Lk9iamVjdDtcbiAgLy8gaHRtbC5yZW1vdmVDaGlsZChpZnJhbWUpO1xuICBpZnJhbWVEb2N1bWVudCA9IGlmcmFtZS5jb250ZW50V2luZG93LmRvY3VtZW50O1xuICBpZnJhbWVEb2N1bWVudC5vcGVuKCk7XG4gIGlmcmFtZURvY3VtZW50LndyaXRlKGx0ICsgJ3NjcmlwdCcgKyBndCArICdkb2N1bWVudC5GPU9iamVjdCcgKyBsdCArICcvc2NyaXB0JyArIGd0KTtcbiAgaWZyYW1lRG9jdW1lbnQuY2xvc2UoKTtcbiAgY3JlYXRlRGljdCA9IGlmcmFtZURvY3VtZW50LkY7XG4gIHdoaWxlIChpLS0pIGRlbGV0ZSBjcmVhdGVEaWN0W1BST1RPVFlQRV1bZW51bUJ1Z0tleXNbaV1dO1xuICByZXR1cm4gY3JlYXRlRGljdCgpO1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSBPYmplY3QuY3JlYXRlIHx8IGZ1bmN0aW9uIGNyZWF0ZShPLCBQcm9wZXJ0aWVzKSB7XG4gIHZhciByZXN1bHQ7XG4gIGlmIChPICE9PSBudWxsKSB7XG4gICAgRW1wdHlbUFJPVE9UWVBFXSA9IGFuT2JqZWN0KE8pO1xuICAgIHJlc3VsdCA9IG5ldyBFbXB0eSgpO1xuICAgIEVtcHR5W1BST1RPVFlQRV0gPSBudWxsO1xuICAgIC8vIGFkZCBcIl9fcHJvdG9fX1wiIGZvciBPYmplY3QuZ2V0UHJvdG90eXBlT2YgcG9seWZpbGxcbiAgICByZXN1bHRbSUVfUFJPVE9dID0gTztcbiAgfSBlbHNlIHJlc3VsdCA9IGNyZWF0ZURpY3QoKTtcbiAgcmV0dXJuIFByb3BlcnRpZXMgPT09IHVuZGVmaW5lZCA/IHJlc3VsdCA6IGRQcyhyZXN1bHQsIFByb3BlcnRpZXMpO1xufTtcbiIsInZhciBhbk9iamVjdCA9IHJlcXVpcmUoJy4vX2FuLW9iamVjdCcpO1xudmFyIElFOF9ET01fREVGSU5FID0gcmVxdWlyZSgnLi9faWU4LWRvbS1kZWZpbmUnKTtcbnZhciB0b1ByaW1pdGl2ZSA9IHJlcXVpcmUoJy4vX3RvLXByaW1pdGl2ZScpO1xudmFyIGRQID0gT2JqZWN0LmRlZmluZVByb3BlcnR5O1xuXG5leHBvcnRzLmYgPSByZXF1aXJlKCcuL19kZXNjcmlwdG9ycycpID8gT2JqZWN0LmRlZmluZVByb3BlcnR5IDogZnVuY3Rpb24gZGVmaW5lUHJvcGVydHkoTywgUCwgQXR0cmlidXRlcykge1xuICBhbk9iamVjdChPKTtcbiAgUCA9IHRvUHJpbWl0aXZlKFAsIHRydWUpO1xuICBhbk9iamVjdChBdHRyaWJ1dGVzKTtcbiAgaWYgKElFOF9ET01fREVGSU5FKSB0cnkge1xuICAgIHJldHVybiBkUChPLCBQLCBBdHRyaWJ1dGVzKTtcbiAgfSBjYXRjaCAoZSkgeyAvKiBlbXB0eSAqLyB9XG4gIGlmICgnZ2V0JyBpbiBBdHRyaWJ1dGVzIHx8ICdzZXQnIGluIEF0dHJpYnV0ZXMpIHRocm93IFR5cGVFcnJvcignQWNjZXNzb3JzIG5vdCBzdXBwb3J0ZWQhJyk7XG4gIGlmICgndmFsdWUnIGluIEF0dHJpYnV0ZXMpIE9bUF0gPSBBdHRyaWJ1dGVzLnZhbHVlO1xuICByZXR1cm4gTztcbn07XG4iLCJ2YXIgZFAgPSByZXF1aXJlKCcuL19vYmplY3QtZHAnKTtcbnZhciBhbk9iamVjdCA9IHJlcXVpcmUoJy4vX2FuLW9iamVjdCcpO1xudmFyIGdldEtleXMgPSByZXF1aXJlKCcuL19vYmplY3Qta2V5cycpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vX2Rlc2NyaXB0b3JzJykgPyBPYmplY3QuZGVmaW5lUHJvcGVydGllcyA6IGZ1bmN0aW9uIGRlZmluZVByb3BlcnRpZXMoTywgUHJvcGVydGllcykge1xuICBhbk9iamVjdChPKTtcbiAgdmFyIGtleXMgPSBnZXRLZXlzKFByb3BlcnRpZXMpO1xuICB2YXIgbGVuZ3RoID0ga2V5cy5sZW5ndGg7XG4gIHZhciBpID0gMDtcbiAgdmFyIFA7XG4gIHdoaWxlIChsZW5ndGggPiBpKSBkUC5mKE8sIFAgPSBrZXlzW2krK10sIFByb3BlcnRpZXNbUF0pO1xuICByZXR1cm4gTztcbn07XG4iLCJ2YXIgcElFID0gcmVxdWlyZSgnLi9fb2JqZWN0LXBpZScpO1xudmFyIGNyZWF0ZURlc2MgPSByZXF1aXJlKCcuL19wcm9wZXJ0eS1kZXNjJyk7XG52YXIgdG9JT2JqZWN0ID0gcmVxdWlyZSgnLi9fdG8taW9iamVjdCcpO1xudmFyIHRvUHJpbWl0aXZlID0gcmVxdWlyZSgnLi9fdG8tcHJpbWl0aXZlJyk7XG52YXIgaGFzID0gcmVxdWlyZSgnLi9faGFzJyk7XG52YXIgSUU4X0RPTV9ERUZJTkUgPSByZXF1aXJlKCcuL19pZTgtZG9tLWRlZmluZScpO1xudmFyIGdPUEQgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yO1xuXG5leHBvcnRzLmYgPSByZXF1aXJlKCcuL19kZXNjcmlwdG9ycycpID8gZ09QRCA6IGZ1bmN0aW9uIGdldE93blByb3BlcnR5RGVzY3JpcHRvcihPLCBQKSB7XG4gIE8gPSB0b0lPYmplY3QoTyk7XG4gIFAgPSB0b1ByaW1pdGl2ZShQLCB0cnVlKTtcbiAgaWYgKElFOF9ET01fREVGSU5FKSB0cnkge1xuICAgIHJldHVybiBnT1BEKE8sIFApO1xuICB9IGNhdGNoIChlKSB7IC8qIGVtcHR5ICovIH1cbiAgaWYgKGhhcyhPLCBQKSkgcmV0dXJuIGNyZWF0ZURlc2MoIXBJRS5mLmNhbGwoTywgUCksIE9bUF0pO1xufTtcbiIsIi8vIGZhbGxiYWNrIGZvciBJRTExIGJ1Z2d5IE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzIHdpdGggaWZyYW1lIGFuZCB3aW5kb3dcbnZhciB0b0lPYmplY3QgPSByZXF1aXJlKCcuL190by1pb2JqZWN0Jyk7XG52YXIgZ09QTiA9IHJlcXVpcmUoJy4vX29iamVjdC1nb3BuJykuZjtcbnZhciB0b1N0cmluZyA9IHt9LnRvU3RyaW5nO1xuXG52YXIgd2luZG93TmFtZXMgPSB0eXBlb2Ygd2luZG93ID09ICdvYmplY3QnICYmIHdpbmRvdyAmJiBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lc1xuICA/IE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKHdpbmRvdykgOiBbXTtcblxudmFyIGdldFdpbmRvd05hbWVzID0gZnVuY3Rpb24gKGl0KSB7XG4gIHRyeSB7XG4gICAgcmV0dXJuIGdPUE4oaXQpO1xuICB9IGNhdGNoIChlKSB7XG4gICAgcmV0dXJuIHdpbmRvd05hbWVzLnNsaWNlKCk7XG4gIH1cbn07XG5cbm1vZHVsZS5leHBvcnRzLmYgPSBmdW5jdGlvbiBnZXRPd25Qcm9wZXJ0eU5hbWVzKGl0KSB7XG4gIHJldHVybiB3aW5kb3dOYW1lcyAmJiB0b1N0cmluZy5jYWxsKGl0KSA9PSAnW29iamVjdCBXaW5kb3ddJyA/IGdldFdpbmRvd05hbWVzKGl0KSA6IGdPUE4odG9JT2JqZWN0KGl0KSk7XG59O1xuIiwiLy8gMTkuMS4yLjcgLyAxNS4yLjMuNCBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyhPKVxudmFyICRrZXlzID0gcmVxdWlyZSgnLi9fb2JqZWN0LWtleXMtaW50ZXJuYWwnKTtcbnZhciBoaWRkZW5LZXlzID0gcmVxdWlyZSgnLi9fZW51bS1idWcta2V5cycpLmNvbmNhdCgnbGVuZ3RoJywgJ3Byb3RvdHlwZScpO1xuXG5leHBvcnRzLmYgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyB8fCBmdW5jdGlvbiBnZXRPd25Qcm9wZXJ0eU5hbWVzKE8pIHtcbiAgcmV0dXJuICRrZXlzKE8sIGhpZGRlbktleXMpO1xufTtcbiIsImV4cG9ydHMuZiA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHM7XG4iLCIvLyAxOS4xLjIuOSAvIDE1LjIuMy4yIE9iamVjdC5nZXRQcm90b3R5cGVPZihPKVxudmFyIGhhcyA9IHJlcXVpcmUoJy4vX2hhcycpO1xudmFyIHRvT2JqZWN0ID0gcmVxdWlyZSgnLi9fdG8tb2JqZWN0Jyk7XG52YXIgSUVfUFJPVE8gPSByZXF1aXJlKCcuL19zaGFyZWQta2V5JykoJ0lFX1BST1RPJyk7XG52YXIgT2JqZWN0UHJvdG8gPSBPYmplY3QucHJvdG90eXBlO1xuXG5tb2R1bGUuZXhwb3J0cyA9IE9iamVjdC5nZXRQcm90b3R5cGVPZiB8fCBmdW5jdGlvbiAoTykge1xuICBPID0gdG9PYmplY3QoTyk7XG4gIGlmIChoYXMoTywgSUVfUFJPVE8pKSByZXR1cm4gT1tJRV9QUk9UT107XG4gIGlmICh0eXBlb2YgTy5jb25zdHJ1Y3RvciA9PSAnZnVuY3Rpb24nICYmIE8gaW5zdGFuY2VvZiBPLmNvbnN0cnVjdG9yKSB7XG4gICAgcmV0dXJuIE8uY29uc3RydWN0b3IucHJvdG90eXBlO1xuICB9IHJldHVybiBPIGluc3RhbmNlb2YgT2JqZWN0ID8gT2JqZWN0UHJvdG8gOiBudWxsO1xufTtcbiIsInZhciBoYXMgPSByZXF1aXJlKCcuL19oYXMnKTtcbnZhciB0b0lPYmplY3QgPSByZXF1aXJlKCcuL190by1pb2JqZWN0Jyk7XG52YXIgYXJyYXlJbmRleE9mID0gcmVxdWlyZSgnLi9fYXJyYXktaW5jbHVkZXMnKShmYWxzZSk7XG52YXIgSUVfUFJPVE8gPSByZXF1aXJlKCcuL19zaGFyZWQta2V5JykoJ0lFX1BST1RPJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKG9iamVjdCwgbmFtZXMpIHtcbiAgdmFyIE8gPSB0b0lPYmplY3Qob2JqZWN0KTtcbiAgdmFyIGkgPSAwO1xuICB2YXIgcmVzdWx0ID0gW107XG4gIHZhciBrZXk7XG4gIGZvciAoa2V5IGluIE8pIGlmIChrZXkgIT0gSUVfUFJPVE8pIGhhcyhPLCBrZXkpICYmIHJlc3VsdC5wdXNoKGtleSk7XG4gIC8vIERvbid0IGVudW0gYnVnICYgaGlkZGVuIGtleXNcbiAgd2hpbGUgKG5hbWVzLmxlbmd0aCA+IGkpIGlmIChoYXMoTywga2V5ID0gbmFtZXNbaSsrXSkpIHtcbiAgICB+YXJyYXlJbmRleE9mKHJlc3VsdCwga2V5KSB8fCByZXN1bHQucHVzaChrZXkpO1xuICB9XG4gIHJldHVybiByZXN1bHQ7XG59O1xuIiwiLy8gMTkuMS4yLjE0IC8gMTUuMi4zLjE0IE9iamVjdC5rZXlzKE8pXG52YXIgJGtleXMgPSByZXF1aXJlKCcuL19vYmplY3Qta2V5cy1pbnRlcm5hbCcpO1xudmFyIGVudW1CdWdLZXlzID0gcmVxdWlyZSgnLi9fZW51bS1idWcta2V5cycpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IE9iamVjdC5rZXlzIHx8IGZ1bmN0aW9uIGtleXMoTykge1xuICByZXR1cm4gJGtleXMoTywgZW51bUJ1Z0tleXMpO1xufTtcbiIsImV4cG9ydHMuZiA9IHt9LnByb3BlcnR5SXNFbnVtZXJhYmxlO1xuIiwiLy8gbW9zdCBPYmplY3QgbWV0aG9kcyBieSBFUzYgc2hvdWxkIGFjY2VwdCBwcmltaXRpdmVzXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyIGNvcmUgPSByZXF1aXJlKCcuL19jb3JlJyk7XG52YXIgZmFpbHMgPSByZXF1aXJlKCcuL19mYWlscycpO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoS0VZLCBleGVjKSB7XG4gIHZhciBmbiA9IChjb3JlLk9iamVjdCB8fCB7fSlbS0VZXSB8fCBPYmplY3RbS0VZXTtcbiAgdmFyIGV4cCA9IHt9O1xuICBleHBbS0VZXSA9IGV4ZWMoZm4pO1xuICAkZXhwb3J0KCRleHBvcnQuUyArICRleHBvcnQuRiAqIGZhaWxzKGZ1bmN0aW9uICgpIHsgZm4oMSk7IH0pLCAnT2JqZWN0JywgZXhwKTtcbn07XG4iLCJ2YXIgZ2V0S2V5cyA9IHJlcXVpcmUoJy4vX29iamVjdC1rZXlzJyk7XG52YXIgdG9JT2JqZWN0ID0gcmVxdWlyZSgnLi9fdG8taW9iamVjdCcpO1xudmFyIGlzRW51bSA9IHJlcXVpcmUoJy4vX29iamVjdC1waWUnKS5mO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXNFbnRyaWVzKSB7XG4gIHJldHVybiBmdW5jdGlvbiAoaXQpIHtcbiAgICB2YXIgTyA9IHRvSU9iamVjdChpdCk7XG4gICAgdmFyIGtleXMgPSBnZXRLZXlzKE8pO1xuICAgIHZhciBsZW5ndGggPSBrZXlzLmxlbmd0aDtcbiAgICB2YXIgaSA9IDA7XG4gICAgdmFyIHJlc3VsdCA9IFtdO1xuICAgIHZhciBrZXk7XG4gICAgd2hpbGUgKGxlbmd0aCA+IGkpIGlmIChpc0VudW0uY2FsbChPLCBrZXkgPSBrZXlzW2krK10pKSB7XG4gICAgICByZXN1bHQucHVzaChpc0VudHJpZXMgPyBba2V5LCBPW2tleV1dIDogT1trZXldKTtcbiAgICB9IHJldHVybiByZXN1bHQ7XG4gIH07XG59O1xuIiwiLy8gYWxsIG9iamVjdCBrZXlzLCBpbmNsdWRlcyBub24tZW51bWVyYWJsZSBhbmQgc3ltYm9sc1xudmFyIGdPUE4gPSByZXF1aXJlKCcuL19vYmplY3QtZ29wbicpO1xudmFyIGdPUFMgPSByZXF1aXJlKCcuL19vYmplY3QtZ29wcycpO1xudmFyIGFuT2JqZWN0ID0gcmVxdWlyZSgnLi9fYW4tb2JqZWN0Jyk7XG52YXIgUmVmbGVjdCA9IHJlcXVpcmUoJy4vX2dsb2JhbCcpLlJlZmxlY3Q7XG5tb2R1bGUuZXhwb3J0cyA9IFJlZmxlY3QgJiYgUmVmbGVjdC5vd25LZXlzIHx8IGZ1bmN0aW9uIG93bktleXMoaXQpIHtcbiAgdmFyIGtleXMgPSBnT1BOLmYoYW5PYmplY3QoaXQpKTtcbiAgdmFyIGdldFN5bWJvbHMgPSBnT1BTLmY7XG4gIHJldHVybiBnZXRTeW1ib2xzID8ga2V5cy5jb25jYXQoZ2V0U3ltYm9scyhpdCkpIDoga2V5cztcbn07XG4iLCJ2YXIgJHBhcnNlRmxvYXQgPSByZXF1aXJlKCcuL19nbG9iYWwnKS5wYXJzZUZsb2F0O1xudmFyICR0cmltID0gcmVxdWlyZSgnLi9fc3RyaW5nLXRyaW0nKS50cmltO1xuXG5tb2R1bGUuZXhwb3J0cyA9IDEgLyAkcGFyc2VGbG9hdChyZXF1aXJlKCcuL19zdHJpbmctd3MnKSArICctMCcpICE9PSAtSW5maW5pdHkgPyBmdW5jdGlvbiBwYXJzZUZsb2F0KHN0cikge1xuICB2YXIgc3RyaW5nID0gJHRyaW0oU3RyaW5nKHN0ciksIDMpO1xuICB2YXIgcmVzdWx0ID0gJHBhcnNlRmxvYXQoc3RyaW5nKTtcbiAgcmV0dXJuIHJlc3VsdCA9PT0gMCAmJiBzdHJpbmcuY2hhckF0KDApID09ICctJyA/IC0wIDogcmVzdWx0O1xufSA6ICRwYXJzZUZsb2F0O1xuIiwidmFyICRwYXJzZUludCA9IHJlcXVpcmUoJy4vX2dsb2JhbCcpLnBhcnNlSW50O1xudmFyICR0cmltID0gcmVxdWlyZSgnLi9fc3RyaW5nLXRyaW0nKS50cmltO1xudmFyIHdzID0gcmVxdWlyZSgnLi9fc3RyaW5nLXdzJyk7XG52YXIgaGV4ID0gL15bLStdPzBbeFhdLztcblxubW9kdWxlLmV4cG9ydHMgPSAkcGFyc2VJbnQod3MgKyAnMDgnKSAhPT0gOCB8fCAkcGFyc2VJbnQod3MgKyAnMHgxNicpICE9PSAyMiA/IGZ1bmN0aW9uIHBhcnNlSW50KHN0ciwgcmFkaXgpIHtcbiAgdmFyIHN0cmluZyA9ICR0cmltKFN0cmluZyhzdHIpLCAzKTtcbiAgcmV0dXJuICRwYXJzZUludChzdHJpbmcsIChyYWRpeCA+Pj4gMCkgfHwgKGhleC50ZXN0KHN0cmluZykgPyAxNiA6IDEwKSk7XG59IDogJHBhcnNlSW50O1xuIiwibW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoZXhlYykge1xuICB0cnkge1xuICAgIHJldHVybiB7IGU6IGZhbHNlLCB2OiBleGVjKCkgfTtcbiAgfSBjYXRjaCAoZSkge1xuICAgIHJldHVybiB7IGU6IHRydWUsIHY6IGUgfTtcbiAgfVxufTtcbiIsInZhciBhbk9iamVjdCA9IHJlcXVpcmUoJy4vX2FuLW9iamVjdCcpO1xudmFyIGlzT2JqZWN0ID0gcmVxdWlyZSgnLi9faXMtb2JqZWN0Jyk7XG52YXIgbmV3UHJvbWlzZUNhcGFiaWxpdHkgPSByZXF1aXJlKCcuL19uZXctcHJvbWlzZS1jYXBhYmlsaXR5Jyk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKEMsIHgpIHtcbiAgYW5PYmplY3QoQyk7XG4gIGlmIChpc09iamVjdCh4KSAmJiB4LmNvbnN0cnVjdG9yID09PSBDKSByZXR1cm4geDtcbiAgdmFyIHByb21pc2VDYXBhYmlsaXR5ID0gbmV3UHJvbWlzZUNhcGFiaWxpdHkuZihDKTtcbiAgdmFyIHJlc29sdmUgPSBwcm9taXNlQ2FwYWJpbGl0eS5yZXNvbHZlO1xuICByZXNvbHZlKHgpO1xuICByZXR1cm4gcHJvbWlzZUNhcGFiaWxpdHkucHJvbWlzZTtcbn07XG4iLCJtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChiaXRtYXAsIHZhbHVlKSB7XG4gIHJldHVybiB7XG4gICAgZW51bWVyYWJsZTogIShiaXRtYXAgJiAxKSxcbiAgICBjb25maWd1cmFibGU6ICEoYml0bWFwICYgMiksXG4gICAgd3JpdGFibGU6ICEoYml0bWFwICYgNCksXG4gICAgdmFsdWU6IHZhbHVlXG4gIH07XG59O1xuIiwidmFyIHJlZGVmaW5lID0gcmVxdWlyZSgnLi9fcmVkZWZpbmUnKTtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKHRhcmdldCwgc3JjLCBzYWZlKSB7XG4gIGZvciAodmFyIGtleSBpbiBzcmMpIHJlZGVmaW5lKHRhcmdldCwga2V5LCBzcmNba2V5XSwgc2FmZSk7XG4gIHJldHVybiB0YXJnZXQ7XG59O1xuIiwidmFyIGdsb2JhbCA9IHJlcXVpcmUoJy4vX2dsb2JhbCcpO1xudmFyIGhpZGUgPSByZXF1aXJlKCcuL19oaWRlJyk7XG52YXIgaGFzID0gcmVxdWlyZSgnLi9faGFzJyk7XG52YXIgU1JDID0gcmVxdWlyZSgnLi9fdWlkJykoJ3NyYycpO1xudmFyIFRPX1NUUklORyA9ICd0b1N0cmluZyc7XG52YXIgJHRvU3RyaW5nID0gRnVuY3Rpb25bVE9fU1RSSU5HXTtcbnZhciBUUEwgPSAoJycgKyAkdG9TdHJpbmcpLnNwbGl0KFRPX1NUUklORyk7XG5cbnJlcXVpcmUoJy4vX2NvcmUnKS5pbnNwZWN0U291cmNlID0gZnVuY3Rpb24gKGl0KSB7XG4gIHJldHVybiAkdG9TdHJpbmcuY2FsbChpdCk7XG59O1xuXG4obW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoTywga2V5LCB2YWwsIHNhZmUpIHtcbiAgdmFyIGlzRnVuY3Rpb24gPSB0eXBlb2YgdmFsID09ICdmdW5jdGlvbic7XG4gIGlmIChpc0Z1bmN0aW9uKSBoYXModmFsLCAnbmFtZScpIHx8IGhpZGUodmFsLCAnbmFtZScsIGtleSk7XG4gIGlmIChPW2tleV0gPT09IHZhbCkgcmV0dXJuO1xuICBpZiAoaXNGdW5jdGlvbikgaGFzKHZhbCwgU1JDKSB8fCBoaWRlKHZhbCwgU1JDLCBPW2tleV0gPyAnJyArIE9ba2V5XSA6IFRQTC5qb2luKFN0cmluZyhrZXkpKSk7XG4gIGlmIChPID09PSBnbG9iYWwpIHtcbiAgICBPW2tleV0gPSB2YWw7XG4gIH0gZWxzZSBpZiAoIXNhZmUpIHtcbiAgICBkZWxldGUgT1trZXldO1xuICAgIGhpZGUoTywga2V5LCB2YWwpO1xuICB9IGVsc2UgaWYgKE9ba2V5XSkge1xuICAgIE9ba2V5XSA9IHZhbDtcbiAgfSBlbHNlIHtcbiAgICBoaWRlKE8sIGtleSwgdmFsKTtcbiAgfVxuLy8gYWRkIGZha2UgRnVuY3Rpb24jdG9TdHJpbmcgZm9yIGNvcnJlY3Qgd29yayB3cmFwcGVkIG1ldGhvZHMgLyBjb25zdHJ1Y3RvcnMgd2l0aCBtZXRob2RzIGxpa2UgTG9EYXNoIGlzTmF0aXZlXG59KShGdW5jdGlvbi5wcm90b3R5cGUsIFRPX1NUUklORywgZnVuY3Rpb24gdG9TdHJpbmcoKSB7XG4gIHJldHVybiB0eXBlb2YgdGhpcyA9PSAnZnVuY3Rpb24nICYmIHRoaXNbU1JDXSB8fCAkdG9TdHJpbmcuY2FsbCh0aGlzKTtcbn0pO1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgY2xhc3NvZiA9IHJlcXVpcmUoJy4vX2NsYXNzb2YnKTtcbnZhciBidWlsdGluRXhlYyA9IFJlZ0V4cC5wcm90b3R5cGUuZXhlYztcblxuIC8vIGBSZWdFeHBFeGVjYCBhYnN0cmFjdCBvcGVyYXRpb25cbi8vIGh0dHBzOi8vdGMzOS5naXRodWIuaW8vZWNtYTI2Mi8jc2VjLXJlZ2V4cGV4ZWNcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKFIsIFMpIHtcbiAgdmFyIGV4ZWMgPSBSLmV4ZWM7XG4gIGlmICh0eXBlb2YgZXhlYyA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIHZhciByZXN1bHQgPSBleGVjLmNhbGwoUiwgUyk7XG4gICAgaWYgKHR5cGVvZiByZXN1bHQgIT09ICdvYmplY3QnKSB7XG4gICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdSZWdFeHAgZXhlYyBtZXRob2QgcmV0dXJuZWQgc29tZXRoaW5nIG90aGVyIHRoYW4gYW4gT2JqZWN0IG9yIG51bGwnKTtcbiAgICB9XG4gICAgcmV0dXJuIHJlc3VsdDtcbiAgfVxuICBpZiAoY2xhc3NvZihSKSAhPT0gJ1JlZ0V4cCcpIHtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdSZWdFeHAjZXhlYyBjYWxsZWQgb24gaW5jb21wYXRpYmxlIHJlY2VpdmVyJyk7XG4gIH1cbiAgcmV0dXJuIGJ1aWx0aW5FeGVjLmNhbGwoUiwgUyk7XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgcmVnZXhwRmxhZ3MgPSByZXF1aXJlKCcuL19mbGFncycpO1xuXG52YXIgbmF0aXZlRXhlYyA9IFJlZ0V4cC5wcm90b3R5cGUuZXhlYztcbi8vIFRoaXMgYWx3YXlzIHJlZmVycyB0byB0aGUgbmF0aXZlIGltcGxlbWVudGF0aW9uLCBiZWNhdXNlIHRoZVxuLy8gU3RyaW5nI3JlcGxhY2UgcG9seWZpbGwgdXNlcyAuL2ZpeC1yZWdleHAtd2VsbC1rbm93bi1zeW1ib2wtbG9naWMuanMsXG4vLyB3aGljaCBsb2FkcyB0aGlzIGZpbGUgYmVmb3JlIHBhdGNoaW5nIHRoZSBtZXRob2QuXG52YXIgbmF0aXZlUmVwbGFjZSA9IFN0cmluZy5wcm90b3R5cGUucmVwbGFjZTtcblxudmFyIHBhdGNoZWRFeGVjID0gbmF0aXZlRXhlYztcblxudmFyIExBU1RfSU5ERVggPSAnbGFzdEluZGV4JztcblxudmFyIFVQREFURVNfTEFTVF9JTkRFWF9XUk9ORyA9IChmdW5jdGlvbiAoKSB7XG4gIHZhciByZTEgPSAvYS8sXG4gICAgICByZTIgPSAvYiovZztcbiAgbmF0aXZlRXhlYy5jYWxsKHJlMSwgJ2EnKTtcbiAgbmF0aXZlRXhlYy5jYWxsKHJlMiwgJ2EnKTtcbiAgcmV0dXJuIHJlMVtMQVNUX0lOREVYXSAhPT0gMCB8fCByZTJbTEFTVF9JTkRFWF0gIT09IDA7XG59KSgpO1xuXG4vLyBub25wYXJ0aWNpcGF0aW5nIGNhcHR1cmluZyBncm91cCwgY29waWVkIGZyb20gZXM1LXNoaW0ncyBTdHJpbmcjc3BsaXQgcGF0Y2guXG52YXIgTlBDR19JTkNMVURFRCA9IC8oKT8/Ly5leGVjKCcnKVsxXSAhPT0gdW5kZWZpbmVkO1xuXG52YXIgUEFUQ0ggPSBVUERBVEVTX0xBU1RfSU5ERVhfV1JPTkcgfHwgTlBDR19JTkNMVURFRDtcblxuaWYgKFBBVENIKSB7XG4gIHBhdGNoZWRFeGVjID0gZnVuY3Rpb24gZXhlYyhzdHIpIHtcbiAgICB2YXIgcmUgPSB0aGlzO1xuICAgIHZhciBsYXN0SW5kZXgsIHJlQ29weSwgbWF0Y2gsIGk7XG5cbiAgICBpZiAoTlBDR19JTkNMVURFRCkge1xuICAgICAgcmVDb3B5ID0gbmV3IFJlZ0V4cCgnXicgKyByZS5zb3VyY2UgKyAnJCg/IVxcXFxzKScsIHJlZ2V4cEZsYWdzLmNhbGwocmUpKTtcbiAgICB9XG4gICAgaWYgKFVQREFURVNfTEFTVF9JTkRFWF9XUk9ORykgbGFzdEluZGV4ID0gcmVbTEFTVF9JTkRFWF07XG5cbiAgICBtYXRjaCA9IG5hdGl2ZUV4ZWMuY2FsbChyZSwgc3RyKTtcblxuICAgIGlmIChVUERBVEVTX0xBU1RfSU5ERVhfV1JPTkcgJiYgbWF0Y2gpIHtcbiAgICAgIHJlW0xBU1RfSU5ERVhdID0gcmUuZ2xvYmFsID8gbWF0Y2guaW5kZXggKyBtYXRjaFswXS5sZW5ndGggOiBsYXN0SW5kZXg7XG4gICAgfVxuICAgIGlmIChOUENHX0lOQ0xVREVEICYmIG1hdGNoICYmIG1hdGNoLmxlbmd0aCA+IDEpIHtcbiAgICAgIC8vIEZpeCBicm93c2VycyB3aG9zZSBgZXhlY2AgbWV0aG9kcyBkb24ndCBjb25zaXN0ZW50bHkgcmV0dXJuIGB1bmRlZmluZWRgXG4gICAgICAvLyBmb3IgTlBDRywgbGlrZSBJRTguIE5PVEU6IFRoaXMgZG9lc24nIHdvcmsgZm9yIC8oLj8pPy9cbiAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1sb29wLWZ1bmNcbiAgICAgIG5hdGl2ZVJlcGxhY2UuY2FsbChtYXRjaFswXSwgcmVDb3B5LCBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGZvciAoaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoIC0gMjsgaSsrKSB7XG4gICAgICAgICAgaWYgKGFyZ3VtZW50c1tpXSA9PT0gdW5kZWZpbmVkKSBtYXRjaFtpXSA9IHVuZGVmaW5lZDtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfVxuXG4gICAgcmV0dXJuIG1hdGNoO1xuICB9O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHBhdGNoZWRFeGVjO1xuIiwiLy8gNy4yLjkgU2FtZVZhbHVlKHgsIHkpXG5tb2R1bGUuZXhwb3J0cyA9IE9iamVjdC5pcyB8fCBmdW5jdGlvbiBpcyh4LCB5KSB7XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1zZWxmLWNvbXBhcmVcbiAgcmV0dXJuIHggPT09IHkgPyB4ICE9PSAwIHx8IDEgLyB4ID09PSAxIC8geSA6IHggIT0geCAmJiB5ICE9IHk7XG59O1xuIiwiLy8gV29ya3Mgd2l0aCBfX3Byb3RvX18gb25seS4gT2xkIHY4IGNhbid0IHdvcmsgd2l0aCBudWxsIHByb3RvIG9iamVjdHMuXG4vKiBlc2xpbnQtZGlzYWJsZSBuby1wcm90byAqL1xudmFyIGlzT2JqZWN0ID0gcmVxdWlyZSgnLi9faXMtb2JqZWN0Jyk7XG52YXIgYW5PYmplY3QgPSByZXF1aXJlKCcuL19hbi1vYmplY3QnKTtcbnZhciBjaGVjayA9IGZ1bmN0aW9uIChPLCBwcm90bykge1xuICBhbk9iamVjdChPKTtcbiAgaWYgKCFpc09iamVjdChwcm90bykgJiYgcHJvdG8gIT09IG51bGwpIHRocm93IFR5cGVFcnJvcihwcm90byArIFwiOiBjYW4ndCBzZXQgYXMgcHJvdG90eXBlIVwiKTtcbn07XG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgc2V0OiBPYmplY3Quc2V0UHJvdG90eXBlT2YgfHwgKCdfX3Byb3RvX18nIGluIHt9ID8gLy8gZXNsaW50LWRpc2FibGUtbGluZVxuICAgIGZ1bmN0aW9uICh0ZXN0LCBidWdneSwgc2V0KSB7XG4gICAgICB0cnkge1xuICAgICAgICBzZXQgPSByZXF1aXJlKCcuL19jdHgnKShGdW5jdGlvbi5jYWxsLCByZXF1aXJlKCcuL19vYmplY3QtZ29wZCcpLmYoT2JqZWN0LnByb3RvdHlwZSwgJ19fcHJvdG9fXycpLnNldCwgMik7XG4gICAgICAgIHNldCh0ZXN0LCBbXSk7XG4gICAgICAgIGJ1Z2d5ID0gISh0ZXN0IGluc3RhbmNlb2YgQXJyYXkpO1xuICAgICAgfSBjYXRjaCAoZSkgeyBidWdneSA9IHRydWU7IH1cbiAgICAgIHJldHVybiBmdW5jdGlvbiBzZXRQcm90b3R5cGVPZihPLCBwcm90bykge1xuICAgICAgICBjaGVjayhPLCBwcm90byk7XG4gICAgICAgIGlmIChidWdneSkgTy5fX3Byb3RvX18gPSBwcm90bztcbiAgICAgICAgZWxzZSBzZXQoTywgcHJvdG8pO1xuICAgICAgICByZXR1cm4gTztcbiAgICAgIH07XG4gICAgfSh7fSwgZmFsc2UpIDogdW5kZWZpbmVkKSxcbiAgY2hlY2s6IGNoZWNrXG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIGdsb2JhbCA9IHJlcXVpcmUoJy4vX2dsb2JhbCcpO1xudmFyIGRQID0gcmVxdWlyZSgnLi9fb2JqZWN0LWRwJyk7XG52YXIgREVTQ1JJUFRPUlMgPSByZXF1aXJlKCcuL19kZXNjcmlwdG9ycycpO1xudmFyIFNQRUNJRVMgPSByZXF1aXJlKCcuL193a3MnKSgnc3BlY2llcycpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChLRVkpIHtcbiAgdmFyIEMgPSBnbG9iYWxbS0VZXTtcbiAgaWYgKERFU0NSSVBUT1JTICYmIEMgJiYgIUNbU1BFQ0lFU10pIGRQLmYoQywgU1BFQ0lFUywge1xuICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHRoaXM7IH1cbiAgfSk7XG59O1xuIiwidmFyIGRlZiA9IHJlcXVpcmUoJy4vX29iamVjdC1kcCcpLmY7XG52YXIgaGFzID0gcmVxdWlyZSgnLi9faGFzJyk7XG52YXIgVEFHID0gcmVxdWlyZSgnLi9fd2tzJykoJ3RvU3RyaW5nVGFnJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0LCB0YWcsIHN0YXQpIHtcbiAgaWYgKGl0ICYmICFoYXMoaXQgPSBzdGF0ID8gaXQgOiBpdC5wcm90b3R5cGUsIFRBRykpIGRlZihpdCwgVEFHLCB7IGNvbmZpZ3VyYWJsZTogdHJ1ZSwgdmFsdWU6IHRhZyB9KTtcbn07XG4iLCJ2YXIgc2hhcmVkID0gcmVxdWlyZSgnLi9fc2hhcmVkJykoJ2tleXMnKTtcbnZhciB1aWQgPSByZXF1aXJlKCcuL191aWQnKTtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGtleSkge1xuICByZXR1cm4gc2hhcmVkW2tleV0gfHwgKHNoYXJlZFtrZXldID0gdWlkKGtleSkpO1xufTtcbiIsInZhciBjb3JlID0gcmVxdWlyZSgnLi9fY29yZScpO1xudmFyIGdsb2JhbCA9IHJlcXVpcmUoJy4vX2dsb2JhbCcpO1xudmFyIFNIQVJFRCA9ICdfX2NvcmUtanNfc2hhcmVkX18nO1xudmFyIHN0b3JlID0gZ2xvYmFsW1NIQVJFRF0gfHwgKGdsb2JhbFtTSEFSRURdID0ge30pO1xuXG4obW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoa2V5LCB2YWx1ZSkge1xuICByZXR1cm4gc3RvcmVba2V5XSB8fCAoc3RvcmVba2V5XSA9IHZhbHVlICE9PSB1bmRlZmluZWQgPyB2YWx1ZSA6IHt9KTtcbn0pKCd2ZXJzaW9ucycsIFtdKS5wdXNoKHtcbiAgdmVyc2lvbjogY29yZS52ZXJzaW9uLFxuICBtb2RlOiByZXF1aXJlKCcuL19saWJyYXJ5JykgPyAncHVyZScgOiAnZ2xvYmFsJyxcbiAgY29weXJpZ2h0OiAnwqkgMjAxOCBEZW5pcyBQdXNoa2FyZXYgKHpsb2lyb2NrLnJ1KSdcbn0pO1xuIiwiLy8gNy4zLjIwIFNwZWNpZXNDb25zdHJ1Y3RvcihPLCBkZWZhdWx0Q29uc3RydWN0b3IpXG52YXIgYW5PYmplY3QgPSByZXF1aXJlKCcuL19hbi1vYmplY3QnKTtcbnZhciBhRnVuY3Rpb24gPSByZXF1aXJlKCcuL19hLWZ1bmN0aW9uJyk7XG52YXIgU1BFQ0lFUyA9IHJlcXVpcmUoJy4vX3drcycpKCdzcGVjaWVzJyk7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChPLCBEKSB7XG4gIHZhciBDID0gYW5PYmplY3QoTykuY29uc3RydWN0b3I7XG4gIHZhciBTO1xuICByZXR1cm4gQyA9PT0gdW5kZWZpbmVkIHx8IChTID0gYW5PYmplY3QoQylbU1BFQ0lFU10pID09IHVuZGVmaW5lZCA/IEQgOiBhRnVuY3Rpb24oUyk7XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIGZhaWxzID0gcmVxdWlyZSgnLi9fZmFpbHMnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAobWV0aG9kLCBhcmcpIHtcbiAgcmV0dXJuICEhbWV0aG9kICYmIGZhaWxzKGZ1bmN0aW9uICgpIHtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdXNlbGVzcy1jYWxsXG4gICAgYXJnID8gbWV0aG9kLmNhbGwobnVsbCwgZnVuY3Rpb24gKCkgeyAvKiBlbXB0eSAqLyB9LCAxKSA6IG1ldGhvZC5jYWxsKG51bGwpO1xuICB9KTtcbn07XG4iLCJ2YXIgdG9JbnRlZ2VyID0gcmVxdWlyZSgnLi9fdG8taW50ZWdlcicpO1xudmFyIGRlZmluZWQgPSByZXF1aXJlKCcuL19kZWZpbmVkJyk7XG4vLyB0cnVlICAtPiBTdHJpbmcjYXRcbi8vIGZhbHNlIC0+IFN0cmluZyNjb2RlUG9pbnRBdFxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoVE9fU1RSSU5HKSB7XG4gIHJldHVybiBmdW5jdGlvbiAodGhhdCwgcG9zKSB7XG4gICAgdmFyIHMgPSBTdHJpbmcoZGVmaW5lZCh0aGF0KSk7XG4gICAgdmFyIGkgPSB0b0ludGVnZXIocG9zKTtcbiAgICB2YXIgbCA9IHMubGVuZ3RoO1xuICAgIHZhciBhLCBiO1xuICAgIGlmIChpIDwgMCB8fCBpID49IGwpIHJldHVybiBUT19TVFJJTkcgPyAnJyA6IHVuZGVmaW5lZDtcbiAgICBhID0gcy5jaGFyQ29kZUF0KGkpO1xuICAgIHJldHVybiBhIDwgMHhkODAwIHx8IGEgPiAweGRiZmYgfHwgaSArIDEgPT09IGwgfHwgKGIgPSBzLmNoYXJDb2RlQXQoaSArIDEpKSA8IDB4ZGMwMCB8fCBiID4gMHhkZmZmXG4gICAgICA/IFRPX1NUUklORyA/IHMuY2hhckF0KGkpIDogYVxuICAgICAgOiBUT19TVFJJTkcgPyBzLnNsaWNlKGksIGkgKyAyKSA6IChhIC0gMHhkODAwIDw8IDEwKSArIChiIC0gMHhkYzAwKSArIDB4MTAwMDA7XG4gIH07XG59O1xuIiwiLy8gaGVscGVyIGZvciBTdHJpbmcje3N0YXJ0c1dpdGgsIGVuZHNXaXRoLCBpbmNsdWRlc31cbnZhciBpc1JlZ0V4cCA9IHJlcXVpcmUoJy4vX2lzLXJlZ2V4cCcpO1xudmFyIGRlZmluZWQgPSByZXF1aXJlKCcuL19kZWZpbmVkJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKHRoYXQsIHNlYXJjaFN0cmluZywgTkFNRSkge1xuICBpZiAoaXNSZWdFeHAoc2VhcmNoU3RyaW5nKSkgdGhyb3cgVHlwZUVycm9yKCdTdHJpbmcjJyArIE5BTUUgKyBcIiBkb2Vzbid0IGFjY2VwdCByZWdleCFcIik7XG4gIHJldHVybiBTdHJpbmcoZGVmaW5lZCh0aGF0KSk7XG59O1xuIiwidmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciBmYWlscyA9IHJlcXVpcmUoJy4vX2ZhaWxzJyk7XG52YXIgZGVmaW5lZCA9IHJlcXVpcmUoJy4vX2RlZmluZWQnKTtcbnZhciBxdW90ID0gL1wiL2c7XG4vLyBCLjIuMy4yLjEgQ3JlYXRlSFRNTChzdHJpbmcsIHRhZywgYXR0cmlidXRlLCB2YWx1ZSlcbnZhciBjcmVhdGVIVE1MID0gZnVuY3Rpb24gKHN0cmluZywgdGFnLCBhdHRyaWJ1dGUsIHZhbHVlKSB7XG4gIHZhciBTID0gU3RyaW5nKGRlZmluZWQoc3RyaW5nKSk7XG4gIHZhciBwMSA9ICc8JyArIHRhZztcbiAgaWYgKGF0dHJpYnV0ZSAhPT0gJycpIHAxICs9ICcgJyArIGF0dHJpYnV0ZSArICc9XCInICsgU3RyaW5nKHZhbHVlKS5yZXBsYWNlKHF1b3QsICcmcXVvdDsnKSArICdcIic7XG4gIHJldHVybiBwMSArICc+JyArIFMgKyAnPC8nICsgdGFnICsgJz4nO1xufTtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKE5BTUUsIGV4ZWMpIHtcbiAgdmFyIE8gPSB7fTtcbiAgT1tOQU1FXSA9IGV4ZWMoY3JlYXRlSFRNTCk7XG4gICRleHBvcnQoJGV4cG9ydC5QICsgJGV4cG9ydC5GICogZmFpbHMoZnVuY3Rpb24gKCkge1xuICAgIHZhciB0ZXN0ID0gJydbTkFNRV0oJ1wiJyk7XG4gICAgcmV0dXJuIHRlc3QgIT09IHRlc3QudG9Mb3dlckNhc2UoKSB8fCB0ZXN0LnNwbGl0KCdcIicpLmxlbmd0aCA+IDM7XG4gIH0pLCAnU3RyaW5nJywgTyk7XG59O1xuIiwiLy8gaHR0cHM6Ly9naXRodWIuY29tL3RjMzkvcHJvcG9zYWwtc3RyaW5nLXBhZC1zdGFydC1lbmRcbnZhciB0b0xlbmd0aCA9IHJlcXVpcmUoJy4vX3RvLWxlbmd0aCcpO1xudmFyIHJlcGVhdCA9IHJlcXVpcmUoJy4vX3N0cmluZy1yZXBlYXQnKTtcbnZhciBkZWZpbmVkID0gcmVxdWlyZSgnLi9fZGVmaW5lZCcpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uICh0aGF0LCBtYXhMZW5ndGgsIGZpbGxTdHJpbmcsIGxlZnQpIHtcbiAgdmFyIFMgPSBTdHJpbmcoZGVmaW5lZCh0aGF0KSk7XG4gIHZhciBzdHJpbmdMZW5ndGggPSBTLmxlbmd0aDtcbiAgdmFyIGZpbGxTdHIgPSBmaWxsU3RyaW5nID09PSB1bmRlZmluZWQgPyAnICcgOiBTdHJpbmcoZmlsbFN0cmluZyk7XG4gIHZhciBpbnRNYXhMZW5ndGggPSB0b0xlbmd0aChtYXhMZW5ndGgpO1xuICBpZiAoaW50TWF4TGVuZ3RoIDw9IHN0cmluZ0xlbmd0aCB8fCBmaWxsU3RyID09ICcnKSByZXR1cm4gUztcbiAgdmFyIGZpbGxMZW4gPSBpbnRNYXhMZW5ndGggLSBzdHJpbmdMZW5ndGg7XG4gIHZhciBzdHJpbmdGaWxsZXIgPSByZXBlYXQuY2FsbChmaWxsU3RyLCBNYXRoLmNlaWwoZmlsbExlbiAvIGZpbGxTdHIubGVuZ3RoKSk7XG4gIGlmIChzdHJpbmdGaWxsZXIubGVuZ3RoID4gZmlsbExlbikgc3RyaW5nRmlsbGVyID0gc3RyaW5nRmlsbGVyLnNsaWNlKDAsIGZpbGxMZW4pO1xuICByZXR1cm4gbGVmdCA/IHN0cmluZ0ZpbGxlciArIFMgOiBTICsgc3RyaW5nRmlsbGVyO1xufTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciB0b0ludGVnZXIgPSByZXF1aXJlKCcuL190by1pbnRlZ2VyJyk7XG52YXIgZGVmaW5lZCA9IHJlcXVpcmUoJy4vX2RlZmluZWQnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiByZXBlYXQoY291bnQpIHtcbiAgdmFyIHN0ciA9IFN0cmluZyhkZWZpbmVkKHRoaXMpKTtcbiAgdmFyIHJlcyA9ICcnO1xuICB2YXIgbiA9IHRvSW50ZWdlcihjb3VudCk7XG4gIGlmIChuIDwgMCB8fCBuID09IEluZmluaXR5KSB0aHJvdyBSYW5nZUVycm9yKFwiQ291bnQgY2FuJ3QgYmUgbmVnYXRpdmVcIik7XG4gIGZvciAoO24gPiAwOyAobiA+Pj49IDEpICYmIChzdHIgKz0gc3RyKSkgaWYgKG4gJiAxKSByZXMgKz0gc3RyO1xuICByZXR1cm4gcmVzO1xufTtcbiIsInZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgZGVmaW5lZCA9IHJlcXVpcmUoJy4vX2RlZmluZWQnKTtcbnZhciBmYWlscyA9IHJlcXVpcmUoJy4vX2ZhaWxzJyk7XG52YXIgc3BhY2VzID0gcmVxdWlyZSgnLi9fc3RyaW5nLXdzJyk7XG52YXIgc3BhY2UgPSAnWycgKyBzcGFjZXMgKyAnXSc7XG52YXIgbm9uID0gJ1xcdTIwMGJcXHUwMDg1JztcbnZhciBsdHJpbSA9IFJlZ0V4cCgnXicgKyBzcGFjZSArIHNwYWNlICsgJyonKTtcbnZhciBydHJpbSA9IFJlZ0V4cChzcGFjZSArIHNwYWNlICsgJyokJyk7XG5cbnZhciBleHBvcnRlciA9IGZ1bmN0aW9uIChLRVksIGV4ZWMsIEFMSUFTKSB7XG4gIHZhciBleHAgPSB7fTtcbiAgdmFyIEZPUkNFID0gZmFpbHMoZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiAhIXNwYWNlc1tLRVldKCkgfHwgbm9uW0tFWV0oKSAhPSBub247XG4gIH0pO1xuICB2YXIgZm4gPSBleHBbS0VZXSA9IEZPUkNFID8gZXhlYyh0cmltKSA6IHNwYWNlc1tLRVldO1xuICBpZiAoQUxJQVMpIGV4cFtBTElBU10gPSBmbjtcbiAgJGV4cG9ydCgkZXhwb3J0LlAgKyAkZXhwb3J0LkYgKiBGT1JDRSwgJ1N0cmluZycsIGV4cCk7XG59O1xuXG4vLyAxIC0+IFN0cmluZyN0cmltTGVmdFxuLy8gMiAtPiBTdHJpbmcjdHJpbVJpZ2h0XG4vLyAzIC0+IFN0cmluZyN0cmltXG52YXIgdHJpbSA9IGV4cG9ydGVyLnRyaW0gPSBmdW5jdGlvbiAoc3RyaW5nLCBUWVBFKSB7XG4gIHN0cmluZyA9IFN0cmluZyhkZWZpbmVkKHN0cmluZykpO1xuICBpZiAoVFlQRSAmIDEpIHN0cmluZyA9IHN0cmluZy5yZXBsYWNlKGx0cmltLCAnJyk7XG4gIGlmIChUWVBFICYgMikgc3RyaW5nID0gc3RyaW5nLnJlcGxhY2UocnRyaW0sICcnKTtcbiAgcmV0dXJuIHN0cmluZztcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0ZXI7XG4iLCJtb2R1bGUuZXhwb3J0cyA9ICdcXHgwOVxceDBBXFx4MEJcXHgwQ1xceDBEXFx4MjBcXHhBMFxcdTE2ODBcXHUxODBFXFx1MjAwMFxcdTIwMDFcXHUyMDAyXFx1MjAwMycgK1xuICAnXFx1MjAwNFxcdTIwMDVcXHUyMDA2XFx1MjAwN1xcdTIwMDhcXHUyMDA5XFx1MjAwQVxcdTIwMkZcXHUyMDVGXFx1MzAwMFxcdTIwMjhcXHUyMDI5XFx1RkVGRic7XG4iLCJ2YXIgY3R4ID0gcmVxdWlyZSgnLi9fY3R4Jyk7XG52YXIgaW52b2tlID0gcmVxdWlyZSgnLi9faW52b2tlJyk7XG52YXIgaHRtbCA9IHJlcXVpcmUoJy4vX2h0bWwnKTtcbnZhciBjZWwgPSByZXF1aXJlKCcuL19kb20tY3JlYXRlJyk7XG52YXIgZ2xvYmFsID0gcmVxdWlyZSgnLi9fZ2xvYmFsJyk7XG52YXIgcHJvY2VzcyA9IGdsb2JhbC5wcm9jZXNzO1xudmFyIHNldFRhc2sgPSBnbG9iYWwuc2V0SW1tZWRpYXRlO1xudmFyIGNsZWFyVGFzayA9IGdsb2JhbC5jbGVhckltbWVkaWF0ZTtcbnZhciBNZXNzYWdlQ2hhbm5lbCA9IGdsb2JhbC5NZXNzYWdlQ2hhbm5lbDtcbnZhciBEaXNwYXRjaCA9IGdsb2JhbC5EaXNwYXRjaDtcbnZhciBjb3VudGVyID0gMDtcbnZhciBxdWV1ZSA9IHt9O1xudmFyIE9OUkVBRFlTVEFURUNIQU5HRSA9ICdvbnJlYWR5c3RhdGVjaGFuZ2UnO1xudmFyIGRlZmVyLCBjaGFubmVsLCBwb3J0O1xudmFyIHJ1biA9IGZ1bmN0aW9uICgpIHtcbiAgdmFyIGlkID0gK3RoaXM7XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1wcm90b3R5cGUtYnVpbHRpbnNcbiAgaWYgKHF1ZXVlLmhhc093blByb3BlcnR5KGlkKSkge1xuICAgIHZhciBmbiA9IHF1ZXVlW2lkXTtcbiAgICBkZWxldGUgcXVldWVbaWRdO1xuICAgIGZuKCk7XG4gIH1cbn07XG52YXIgbGlzdGVuZXIgPSBmdW5jdGlvbiAoZXZlbnQpIHtcbiAgcnVuLmNhbGwoZXZlbnQuZGF0YSk7XG59O1xuLy8gTm9kZS5qcyAwLjkrICYgSUUxMCsgaGFzIHNldEltbWVkaWF0ZSwgb3RoZXJ3aXNlOlxuaWYgKCFzZXRUYXNrIHx8ICFjbGVhclRhc2spIHtcbiAgc2V0VGFzayA9IGZ1bmN0aW9uIHNldEltbWVkaWF0ZShmbikge1xuICAgIHZhciBhcmdzID0gW107XG4gICAgdmFyIGkgPSAxO1xuICAgIHdoaWxlIChhcmd1bWVudHMubGVuZ3RoID4gaSkgYXJncy5wdXNoKGFyZ3VtZW50c1tpKytdKTtcbiAgICBxdWV1ZVsrK2NvdW50ZXJdID0gZnVuY3Rpb24gKCkge1xuICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLW5ldy1mdW5jXG4gICAgICBpbnZva2UodHlwZW9mIGZuID09ICdmdW5jdGlvbicgPyBmbiA6IEZ1bmN0aW9uKGZuKSwgYXJncyk7XG4gICAgfTtcbiAgICBkZWZlcihjb3VudGVyKTtcbiAgICByZXR1cm4gY291bnRlcjtcbiAgfTtcbiAgY2xlYXJUYXNrID0gZnVuY3Rpb24gY2xlYXJJbW1lZGlhdGUoaWQpIHtcbiAgICBkZWxldGUgcXVldWVbaWRdO1xuICB9O1xuICAvLyBOb2RlLmpzIDAuOC1cbiAgaWYgKHJlcXVpcmUoJy4vX2NvZicpKHByb2Nlc3MpID09ICdwcm9jZXNzJykge1xuICAgIGRlZmVyID0gZnVuY3Rpb24gKGlkKSB7XG4gICAgICBwcm9jZXNzLm5leHRUaWNrKGN0eChydW4sIGlkLCAxKSk7XG4gICAgfTtcbiAgLy8gU3BoZXJlIChKUyBnYW1lIGVuZ2luZSkgRGlzcGF0Y2ggQVBJXG4gIH0gZWxzZSBpZiAoRGlzcGF0Y2ggJiYgRGlzcGF0Y2gubm93KSB7XG4gICAgZGVmZXIgPSBmdW5jdGlvbiAoaWQpIHtcbiAgICAgIERpc3BhdGNoLm5vdyhjdHgocnVuLCBpZCwgMSkpO1xuICAgIH07XG4gIC8vIEJyb3dzZXJzIHdpdGggTWVzc2FnZUNoYW5uZWwsIGluY2x1ZGVzIFdlYldvcmtlcnNcbiAgfSBlbHNlIGlmIChNZXNzYWdlQ2hhbm5lbCkge1xuICAgIGNoYW5uZWwgPSBuZXcgTWVzc2FnZUNoYW5uZWwoKTtcbiAgICBwb3J0ID0gY2hhbm5lbC5wb3J0MjtcbiAgICBjaGFubmVsLnBvcnQxLm9ubWVzc2FnZSA9IGxpc3RlbmVyO1xuICAgIGRlZmVyID0gY3R4KHBvcnQucG9zdE1lc3NhZ2UsIHBvcnQsIDEpO1xuICAvLyBCcm93c2VycyB3aXRoIHBvc3RNZXNzYWdlLCBza2lwIFdlYldvcmtlcnNcbiAgLy8gSUU4IGhhcyBwb3N0TWVzc2FnZSwgYnV0IGl0J3Mgc3luYyAmIHR5cGVvZiBpdHMgcG9zdE1lc3NhZ2UgaXMgJ29iamVjdCdcbiAgfSBlbHNlIGlmIChnbG9iYWwuYWRkRXZlbnRMaXN0ZW5lciAmJiB0eXBlb2YgcG9zdE1lc3NhZ2UgPT0gJ2Z1bmN0aW9uJyAmJiAhZ2xvYmFsLmltcG9ydFNjcmlwdHMpIHtcbiAgICBkZWZlciA9IGZ1bmN0aW9uIChpZCkge1xuICAgICAgZ2xvYmFsLnBvc3RNZXNzYWdlKGlkICsgJycsICcqJyk7XG4gICAgfTtcbiAgICBnbG9iYWwuYWRkRXZlbnRMaXN0ZW5lcignbWVzc2FnZScsIGxpc3RlbmVyLCBmYWxzZSk7XG4gIC8vIElFOC1cbiAgfSBlbHNlIGlmIChPTlJFQURZU1RBVEVDSEFOR0UgaW4gY2VsKCdzY3JpcHQnKSkge1xuICAgIGRlZmVyID0gZnVuY3Rpb24gKGlkKSB7XG4gICAgICBodG1sLmFwcGVuZENoaWxkKGNlbCgnc2NyaXB0JykpW09OUkVBRFlTVEFURUNIQU5HRV0gPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGh0bWwucmVtb3ZlQ2hpbGQodGhpcyk7XG4gICAgICAgIHJ1bi5jYWxsKGlkKTtcbiAgICAgIH07XG4gICAgfTtcbiAgLy8gUmVzdCBvbGQgYnJvd3NlcnNcbiAgfSBlbHNlIHtcbiAgICBkZWZlciA9IGZ1bmN0aW9uIChpZCkge1xuICAgICAgc2V0VGltZW91dChjdHgocnVuLCBpZCwgMSksIDApO1xuICAgIH07XG4gIH1cbn1cbm1vZHVsZS5leHBvcnRzID0ge1xuICBzZXQ6IHNldFRhc2ssXG4gIGNsZWFyOiBjbGVhclRhc2tcbn07XG4iLCJ2YXIgdG9JbnRlZ2VyID0gcmVxdWlyZSgnLi9fdG8taW50ZWdlcicpO1xudmFyIG1heCA9IE1hdGgubWF4O1xudmFyIG1pbiA9IE1hdGgubWluO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaW5kZXgsIGxlbmd0aCkge1xuICBpbmRleCA9IHRvSW50ZWdlcihpbmRleCk7XG4gIHJldHVybiBpbmRleCA8IDAgPyBtYXgoaW5kZXggKyBsZW5ndGgsIDApIDogbWluKGluZGV4LCBsZW5ndGgpO1xufTtcbiIsIi8vIGh0dHBzOi8vdGMzOS5naXRodWIuaW8vZWNtYTI2Mi8jc2VjLXRvaW5kZXhcbnZhciB0b0ludGVnZXIgPSByZXF1aXJlKCcuL190by1pbnRlZ2VyJyk7XG52YXIgdG9MZW5ndGggPSByZXF1aXJlKCcuL190by1sZW5ndGgnKTtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0KSB7XG4gIGlmIChpdCA9PT0gdW5kZWZpbmVkKSByZXR1cm4gMDtcbiAgdmFyIG51bWJlciA9IHRvSW50ZWdlcihpdCk7XG4gIHZhciBsZW5ndGggPSB0b0xlbmd0aChudW1iZXIpO1xuICBpZiAobnVtYmVyICE9PSBsZW5ndGgpIHRocm93IFJhbmdlRXJyb3IoJ1dyb25nIGxlbmd0aCEnKTtcbiAgcmV0dXJuIGxlbmd0aDtcbn07XG4iLCIvLyA3LjEuNCBUb0ludGVnZXJcbnZhciBjZWlsID0gTWF0aC5jZWlsO1xudmFyIGZsb29yID0gTWF0aC5mbG9vcjtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0KSB7XG4gIHJldHVybiBpc05hTihpdCA9ICtpdCkgPyAwIDogKGl0ID4gMCA/IGZsb29yIDogY2VpbCkoaXQpO1xufTtcbiIsIi8vIHRvIGluZGV4ZWQgb2JqZWN0LCB0b09iamVjdCB3aXRoIGZhbGxiYWNrIGZvciBub24tYXJyYXktbGlrZSBFUzMgc3RyaW5nc1xudmFyIElPYmplY3QgPSByZXF1aXJlKCcuL19pb2JqZWN0Jyk7XG52YXIgZGVmaW5lZCA9IHJlcXVpcmUoJy4vX2RlZmluZWQnKTtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0KSB7XG4gIHJldHVybiBJT2JqZWN0KGRlZmluZWQoaXQpKTtcbn07XG4iLCIvLyA3LjEuMTUgVG9MZW5ndGhcbnZhciB0b0ludGVnZXIgPSByZXF1aXJlKCcuL190by1pbnRlZ2VyJyk7XG52YXIgbWluID0gTWF0aC5taW47XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdCkge1xuICByZXR1cm4gaXQgPiAwID8gbWluKHRvSW50ZWdlcihpdCksIDB4MWZmZmZmZmZmZmZmZmYpIDogMDsgLy8gcG93KDIsIDUzKSAtIDEgPT0gOTAwNzE5OTI1NDc0MDk5MVxufTtcbiIsIi8vIDcuMS4xMyBUb09iamVjdChhcmd1bWVudClcbnZhciBkZWZpbmVkID0gcmVxdWlyZSgnLi9fZGVmaW5lZCcpO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXQpIHtcbiAgcmV0dXJuIE9iamVjdChkZWZpbmVkKGl0KSk7XG59O1xuIiwiLy8gNy4xLjEgVG9QcmltaXRpdmUoaW5wdXQgWywgUHJlZmVycmVkVHlwZV0pXG52YXIgaXNPYmplY3QgPSByZXF1aXJlKCcuL19pcy1vYmplY3QnKTtcbi8vIGluc3RlYWQgb2YgdGhlIEVTNiBzcGVjIHZlcnNpb24sIHdlIGRpZG4ndCBpbXBsZW1lbnQgQEB0b1ByaW1pdGl2ZSBjYXNlXG4vLyBhbmQgdGhlIHNlY29uZCBhcmd1bWVudCAtIGZsYWcgLSBwcmVmZXJyZWQgdHlwZSBpcyBhIHN0cmluZ1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXQsIFMpIHtcbiAgaWYgKCFpc09iamVjdChpdCkpIHJldHVybiBpdDtcbiAgdmFyIGZuLCB2YWw7XG4gIGlmIChTICYmIHR5cGVvZiAoZm4gPSBpdC50b1N0cmluZykgPT0gJ2Z1bmN0aW9uJyAmJiAhaXNPYmplY3QodmFsID0gZm4uY2FsbChpdCkpKSByZXR1cm4gdmFsO1xuICBpZiAodHlwZW9mIChmbiA9IGl0LnZhbHVlT2YpID09ICdmdW5jdGlvbicgJiYgIWlzT2JqZWN0KHZhbCA9IGZuLmNhbGwoaXQpKSkgcmV0dXJuIHZhbDtcbiAgaWYgKCFTICYmIHR5cGVvZiAoZm4gPSBpdC50b1N0cmluZykgPT0gJ2Z1bmN0aW9uJyAmJiAhaXNPYmplY3QodmFsID0gZm4uY2FsbChpdCkpKSByZXR1cm4gdmFsO1xuICB0aHJvdyBUeXBlRXJyb3IoXCJDYW4ndCBjb252ZXJ0IG9iamVjdCB0byBwcmltaXRpdmUgdmFsdWVcIik7XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xuaWYgKHJlcXVpcmUoJy4vX2Rlc2NyaXB0b3JzJykpIHtcbiAgdmFyIExJQlJBUlkgPSByZXF1aXJlKCcuL19saWJyYXJ5Jyk7XG4gIHZhciBnbG9iYWwgPSByZXF1aXJlKCcuL19nbG9iYWwnKTtcbiAgdmFyIGZhaWxzID0gcmVxdWlyZSgnLi9fZmFpbHMnKTtcbiAgdmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbiAgdmFyICR0eXBlZCA9IHJlcXVpcmUoJy4vX3R5cGVkJyk7XG4gIHZhciAkYnVmZmVyID0gcmVxdWlyZSgnLi9fdHlwZWQtYnVmZmVyJyk7XG4gIHZhciBjdHggPSByZXF1aXJlKCcuL19jdHgnKTtcbiAgdmFyIGFuSW5zdGFuY2UgPSByZXF1aXJlKCcuL19hbi1pbnN0YW5jZScpO1xuICB2YXIgcHJvcGVydHlEZXNjID0gcmVxdWlyZSgnLi9fcHJvcGVydHktZGVzYycpO1xuICB2YXIgaGlkZSA9IHJlcXVpcmUoJy4vX2hpZGUnKTtcbiAgdmFyIHJlZGVmaW5lQWxsID0gcmVxdWlyZSgnLi9fcmVkZWZpbmUtYWxsJyk7XG4gIHZhciB0b0ludGVnZXIgPSByZXF1aXJlKCcuL190by1pbnRlZ2VyJyk7XG4gIHZhciB0b0xlbmd0aCA9IHJlcXVpcmUoJy4vX3RvLWxlbmd0aCcpO1xuICB2YXIgdG9JbmRleCA9IHJlcXVpcmUoJy4vX3RvLWluZGV4Jyk7XG4gIHZhciB0b0Fic29sdXRlSW5kZXggPSByZXF1aXJlKCcuL190by1hYnNvbHV0ZS1pbmRleCcpO1xuICB2YXIgdG9QcmltaXRpdmUgPSByZXF1aXJlKCcuL190by1wcmltaXRpdmUnKTtcbiAgdmFyIGhhcyA9IHJlcXVpcmUoJy4vX2hhcycpO1xuICB2YXIgY2xhc3NvZiA9IHJlcXVpcmUoJy4vX2NsYXNzb2YnKTtcbiAgdmFyIGlzT2JqZWN0ID0gcmVxdWlyZSgnLi9faXMtb2JqZWN0Jyk7XG4gIHZhciB0b09iamVjdCA9IHJlcXVpcmUoJy4vX3RvLW9iamVjdCcpO1xuICB2YXIgaXNBcnJheUl0ZXIgPSByZXF1aXJlKCcuL19pcy1hcnJheS1pdGVyJyk7XG4gIHZhciBjcmVhdGUgPSByZXF1aXJlKCcuL19vYmplY3QtY3JlYXRlJyk7XG4gIHZhciBnZXRQcm90b3R5cGVPZiA9IHJlcXVpcmUoJy4vX29iamVjdC1ncG8nKTtcbiAgdmFyIGdPUE4gPSByZXF1aXJlKCcuL19vYmplY3QtZ29wbicpLmY7XG4gIHZhciBnZXRJdGVyRm4gPSByZXF1aXJlKCcuL2NvcmUuZ2V0LWl0ZXJhdG9yLW1ldGhvZCcpO1xuICB2YXIgdWlkID0gcmVxdWlyZSgnLi9fdWlkJyk7XG4gIHZhciB3a3MgPSByZXF1aXJlKCcuL193a3MnKTtcbiAgdmFyIGNyZWF0ZUFycmF5TWV0aG9kID0gcmVxdWlyZSgnLi9fYXJyYXktbWV0aG9kcycpO1xuICB2YXIgY3JlYXRlQXJyYXlJbmNsdWRlcyA9IHJlcXVpcmUoJy4vX2FycmF5LWluY2x1ZGVzJyk7XG4gIHZhciBzcGVjaWVzQ29uc3RydWN0b3IgPSByZXF1aXJlKCcuL19zcGVjaWVzLWNvbnN0cnVjdG9yJyk7XG4gIHZhciBBcnJheUl0ZXJhdG9ycyA9IHJlcXVpcmUoJy4vZXM2LmFycmF5Lml0ZXJhdG9yJyk7XG4gIHZhciBJdGVyYXRvcnMgPSByZXF1aXJlKCcuL19pdGVyYXRvcnMnKTtcbiAgdmFyICRpdGVyRGV0ZWN0ID0gcmVxdWlyZSgnLi9faXRlci1kZXRlY3QnKTtcbiAgdmFyIHNldFNwZWNpZXMgPSByZXF1aXJlKCcuL19zZXQtc3BlY2llcycpO1xuICB2YXIgYXJyYXlGaWxsID0gcmVxdWlyZSgnLi9fYXJyYXktZmlsbCcpO1xuICB2YXIgYXJyYXlDb3B5V2l0aGluID0gcmVxdWlyZSgnLi9fYXJyYXktY29weS13aXRoaW4nKTtcbiAgdmFyICREUCA9IHJlcXVpcmUoJy4vX29iamVjdC1kcCcpO1xuICB2YXIgJEdPUEQgPSByZXF1aXJlKCcuL19vYmplY3QtZ29wZCcpO1xuICB2YXIgZFAgPSAkRFAuZjtcbiAgdmFyIGdPUEQgPSAkR09QRC5mO1xuICB2YXIgUmFuZ2VFcnJvciA9IGdsb2JhbC5SYW5nZUVycm9yO1xuICB2YXIgVHlwZUVycm9yID0gZ2xvYmFsLlR5cGVFcnJvcjtcbiAgdmFyIFVpbnQ4QXJyYXkgPSBnbG9iYWwuVWludDhBcnJheTtcbiAgdmFyIEFSUkFZX0JVRkZFUiA9ICdBcnJheUJ1ZmZlcic7XG4gIHZhciBTSEFSRURfQlVGRkVSID0gJ1NoYXJlZCcgKyBBUlJBWV9CVUZGRVI7XG4gIHZhciBCWVRFU19QRVJfRUxFTUVOVCA9ICdCWVRFU19QRVJfRUxFTUVOVCc7XG4gIHZhciBQUk9UT1RZUEUgPSAncHJvdG90eXBlJztcbiAgdmFyIEFycmF5UHJvdG8gPSBBcnJheVtQUk9UT1RZUEVdO1xuICB2YXIgJEFycmF5QnVmZmVyID0gJGJ1ZmZlci5BcnJheUJ1ZmZlcjtcbiAgdmFyICREYXRhVmlldyA9ICRidWZmZXIuRGF0YVZpZXc7XG4gIHZhciBhcnJheUZvckVhY2ggPSBjcmVhdGVBcnJheU1ldGhvZCgwKTtcbiAgdmFyIGFycmF5RmlsdGVyID0gY3JlYXRlQXJyYXlNZXRob2QoMik7XG4gIHZhciBhcnJheVNvbWUgPSBjcmVhdGVBcnJheU1ldGhvZCgzKTtcbiAgdmFyIGFycmF5RXZlcnkgPSBjcmVhdGVBcnJheU1ldGhvZCg0KTtcbiAgdmFyIGFycmF5RmluZCA9IGNyZWF0ZUFycmF5TWV0aG9kKDUpO1xuICB2YXIgYXJyYXlGaW5kSW5kZXggPSBjcmVhdGVBcnJheU1ldGhvZCg2KTtcbiAgdmFyIGFycmF5SW5jbHVkZXMgPSBjcmVhdGVBcnJheUluY2x1ZGVzKHRydWUpO1xuICB2YXIgYXJyYXlJbmRleE9mID0gY3JlYXRlQXJyYXlJbmNsdWRlcyhmYWxzZSk7XG4gIHZhciBhcnJheVZhbHVlcyA9IEFycmF5SXRlcmF0b3JzLnZhbHVlcztcbiAgdmFyIGFycmF5S2V5cyA9IEFycmF5SXRlcmF0b3JzLmtleXM7XG4gIHZhciBhcnJheUVudHJpZXMgPSBBcnJheUl0ZXJhdG9ycy5lbnRyaWVzO1xuICB2YXIgYXJyYXlMYXN0SW5kZXhPZiA9IEFycmF5UHJvdG8ubGFzdEluZGV4T2Y7XG4gIHZhciBhcnJheVJlZHVjZSA9IEFycmF5UHJvdG8ucmVkdWNlO1xuICB2YXIgYXJyYXlSZWR1Y2VSaWdodCA9IEFycmF5UHJvdG8ucmVkdWNlUmlnaHQ7XG4gIHZhciBhcnJheUpvaW4gPSBBcnJheVByb3RvLmpvaW47XG4gIHZhciBhcnJheVNvcnQgPSBBcnJheVByb3RvLnNvcnQ7XG4gIHZhciBhcnJheVNsaWNlID0gQXJyYXlQcm90by5zbGljZTtcbiAgdmFyIGFycmF5VG9TdHJpbmcgPSBBcnJheVByb3RvLnRvU3RyaW5nO1xuICB2YXIgYXJyYXlUb0xvY2FsZVN0cmluZyA9IEFycmF5UHJvdG8udG9Mb2NhbGVTdHJpbmc7XG4gIHZhciBJVEVSQVRPUiA9IHdrcygnaXRlcmF0b3InKTtcbiAgdmFyIFRBRyA9IHdrcygndG9TdHJpbmdUYWcnKTtcbiAgdmFyIFRZUEVEX0NPTlNUUlVDVE9SID0gdWlkKCd0eXBlZF9jb25zdHJ1Y3RvcicpO1xuICB2YXIgREVGX0NPTlNUUlVDVE9SID0gdWlkKCdkZWZfY29uc3RydWN0b3InKTtcbiAgdmFyIEFMTF9DT05TVFJVQ1RPUlMgPSAkdHlwZWQuQ09OU1RSO1xuICB2YXIgVFlQRURfQVJSQVkgPSAkdHlwZWQuVFlQRUQ7XG4gIHZhciBWSUVXID0gJHR5cGVkLlZJRVc7XG4gIHZhciBXUk9OR19MRU5HVEggPSAnV3JvbmcgbGVuZ3RoISc7XG5cbiAgdmFyICRtYXAgPSBjcmVhdGVBcnJheU1ldGhvZCgxLCBmdW5jdGlvbiAoTywgbGVuZ3RoKSB7XG4gICAgcmV0dXJuIGFsbG9jYXRlKHNwZWNpZXNDb25zdHJ1Y3RvcihPLCBPW0RFRl9DT05TVFJVQ1RPUl0pLCBsZW5ndGgpO1xuICB9KTtcblxuICB2YXIgTElUVExFX0VORElBTiA9IGZhaWxzKGZ1bmN0aW9uICgpIHtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW5kZWZcbiAgICByZXR1cm4gbmV3IFVpbnQ4QXJyYXkobmV3IFVpbnQxNkFycmF5KFsxXSkuYnVmZmVyKVswXSA9PT0gMTtcbiAgfSk7XG5cbiAgdmFyIEZPUkNFRF9TRVQgPSAhIVVpbnQ4QXJyYXkgJiYgISFVaW50OEFycmF5W1BST1RPVFlQRV0uc2V0ICYmIGZhaWxzKGZ1bmN0aW9uICgpIHtcbiAgICBuZXcgVWludDhBcnJheSgxKS5zZXQoe30pO1xuICB9KTtcblxuICB2YXIgdG9PZmZzZXQgPSBmdW5jdGlvbiAoaXQsIEJZVEVTKSB7XG4gICAgdmFyIG9mZnNldCA9IHRvSW50ZWdlcihpdCk7XG4gICAgaWYgKG9mZnNldCA8IDAgfHwgb2Zmc2V0ICUgQllURVMpIHRocm93IFJhbmdlRXJyb3IoJ1dyb25nIG9mZnNldCEnKTtcbiAgICByZXR1cm4gb2Zmc2V0O1xuICB9O1xuXG4gIHZhciB2YWxpZGF0ZSA9IGZ1bmN0aW9uIChpdCkge1xuICAgIGlmIChpc09iamVjdChpdCkgJiYgVFlQRURfQVJSQVkgaW4gaXQpIHJldHVybiBpdDtcbiAgICB0aHJvdyBUeXBlRXJyb3IoaXQgKyAnIGlzIG5vdCBhIHR5cGVkIGFycmF5IScpO1xuICB9O1xuXG4gIHZhciBhbGxvY2F0ZSA9IGZ1bmN0aW9uIChDLCBsZW5ndGgpIHtcbiAgICBpZiAoIShpc09iamVjdChDKSAmJiBUWVBFRF9DT05TVFJVQ1RPUiBpbiBDKSkge1xuICAgICAgdGhyb3cgVHlwZUVycm9yKCdJdCBpcyBub3QgYSB0eXBlZCBhcnJheSBjb25zdHJ1Y3RvciEnKTtcbiAgICB9IHJldHVybiBuZXcgQyhsZW5ndGgpO1xuICB9O1xuXG4gIHZhciBzcGVjaWVzRnJvbUxpc3QgPSBmdW5jdGlvbiAoTywgbGlzdCkge1xuICAgIHJldHVybiBmcm9tTGlzdChzcGVjaWVzQ29uc3RydWN0b3IoTywgT1tERUZfQ09OU1RSVUNUT1JdKSwgbGlzdCk7XG4gIH07XG5cbiAgdmFyIGZyb21MaXN0ID0gZnVuY3Rpb24gKEMsIGxpc3QpIHtcbiAgICB2YXIgaW5kZXggPSAwO1xuICAgIHZhciBsZW5ndGggPSBsaXN0Lmxlbmd0aDtcbiAgICB2YXIgcmVzdWx0ID0gYWxsb2NhdGUoQywgbGVuZ3RoKTtcbiAgICB3aGlsZSAobGVuZ3RoID4gaW5kZXgpIHJlc3VsdFtpbmRleF0gPSBsaXN0W2luZGV4KytdO1xuICAgIHJldHVybiByZXN1bHQ7XG4gIH07XG5cbiAgdmFyIGFkZEdldHRlciA9IGZ1bmN0aW9uIChpdCwga2V5LCBpbnRlcm5hbCkge1xuICAgIGRQKGl0LCBrZXksIHsgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiB0aGlzLl9kW2ludGVybmFsXTsgfSB9KTtcbiAgfTtcblxuICB2YXIgJGZyb20gPSBmdW5jdGlvbiBmcm9tKHNvdXJjZSAvKiAsIG1hcGZuLCB0aGlzQXJnICovKSB7XG4gICAgdmFyIE8gPSB0b09iamVjdChzb3VyY2UpO1xuICAgIHZhciBhTGVuID0gYXJndW1lbnRzLmxlbmd0aDtcbiAgICB2YXIgbWFwZm4gPSBhTGVuID4gMSA/IGFyZ3VtZW50c1sxXSA6IHVuZGVmaW5lZDtcbiAgICB2YXIgbWFwcGluZyA9IG1hcGZuICE9PSB1bmRlZmluZWQ7XG4gICAgdmFyIGl0ZXJGbiA9IGdldEl0ZXJGbihPKTtcbiAgICB2YXIgaSwgbGVuZ3RoLCB2YWx1ZXMsIHJlc3VsdCwgc3RlcCwgaXRlcmF0b3I7XG4gICAgaWYgKGl0ZXJGbiAhPSB1bmRlZmluZWQgJiYgIWlzQXJyYXlJdGVyKGl0ZXJGbikpIHtcbiAgICAgIGZvciAoaXRlcmF0b3IgPSBpdGVyRm4uY2FsbChPKSwgdmFsdWVzID0gW10sIGkgPSAwOyAhKHN0ZXAgPSBpdGVyYXRvci5uZXh0KCkpLmRvbmU7IGkrKykge1xuICAgICAgICB2YWx1ZXMucHVzaChzdGVwLnZhbHVlKTtcbiAgICAgIH0gTyA9IHZhbHVlcztcbiAgICB9XG4gICAgaWYgKG1hcHBpbmcgJiYgYUxlbiA+IDIpIG1hcGZuID0gY3R4KG1hcGZuLCBhcmd1bWVudHNbMl0sIDIpO1xuICAgIGZvciAoaSA9IDAsIGxlbmd0aCA9IHRvTGVuZ3RoKE8ubGVuZ3RoKSwgcmVzdWx0ID0gYWxsb2NhdGUodGhpcywgbGVuZ3RoKTsgbGVuZ3RoID4gaTsgaSsrKSB7XG4gICAgICByZXN1bHRbaV0gPSBtYXBwaW5nID8gbWFwZm4oT1tpXSwgaSkgOiBPW2ldO1xuICAgIH1cbiAgICByZXR1cm4gcmVzdWx0O1xuICB9O1xuXG4gIHZhciAkb2YgPSBmdW5jdGlvbiBvZigvKiAuLi5pdGVtcyAqLykge1xuICAgIHZhciBpbmRleCA9IDA7XG4gICAgdmFyIGxlbmd0aCA9IGFyZ3VtZW50cy5sZW5ndGg7XG4gICAgdmFyIHJlc3VsdCA9IGFsbG9jYXRlKHRoaXMsIGxlbmd0aCk7XG4gICAgd2hpbGUgKGxlbmd0aCA+IGluZGV4KSByZXN1bHRbaW5kZXhdID0gYXJndW1lbnRzW2luZGV4KytdO1xuICAgIHJldHVybiByZXN1bHQ7XG4gIH07XG5cbiAgLy8gaU9TIFNhZmFyaSA2LnggZmFpbHMgaGVyZVxuICB2YXIgVE9fTE9DQUxFX0JVRyA9ICEhVWludDhBcnJheSAmJiBmYWlscyhmdW5jdGlvbiAoKSB7IGFycmF5VG9Mb2NhbGVTdHJpbmcuY2FsbChuZXcgVWludDhBcnJheSgxKSk7IH0pO1xuXG4gIHZhciAkdG9Mb2NhbGVTdHJpbmcgPSBmdW5jdGlvbiB0b0xvY2FsZVN0cmluZygpIHtcbiAgICByZXR1cm4gYXJyYXlUb0xvY2FsZVN0cmluZy5hcHBseShUT19MT0NBTEVfQlVHID8gYXJyYXlTbGljZS5jYWxsKHZhbGlkYXRlKHRoaXMpKSA6IHZhbGlkYXRlKHRoaXMpLCBhcmd1bWVudHMpO1xuICB9O1xuXG4gIHZhciBwcm90byA9IHtcbiAgICBjb3B5V2l0aGluOiBmdW5jdGlvbiBjb3B5V2l0aGluKHRhcmdldCwgc3RhcnQgLyogLCBlbmQgKi8pIHtcbiAgICAgIHJldHVybiBhcnJheUNvcHlXaXRoaW4uY2FsbCh2YWxpZGF0ZSh0aGlzKSwgdGFyZ2V0LCBzdGFydCwgYXJndW1lbnRzLmxlbmd0aCA+IDIgPyBhcmd1bWVudHNbMl0gOiB1bmRlZmluZWQpO1xuICAgIH0sXG4gICAgZXZlcnk6IGZ1bmN0aW9uIGV2ZXJ5KGNhbGxiYWNrZm4gLyogLCB0aGlzQXJnICovKSB7XG4gICAgICByZXR1cm4gYXJyYXlFdmVyeSh2YWxpZGF0ZSh0aGlzKSwgY2FsbGJhY2tmbiwgYXJndW1lbnRzLmxlbmd0aCA+IDEgPyBhcmd1bWVudHNbMV0gOiB1bmRlZmluZWQpO1xuICAgIH0sXG4gICAgZmlsbDogZnVuY3Rpb24gZmlsbCh2YWx1ZSAvKiAsIHN0YXJ0LCBlbmQgKi8pIHsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby11bnVzZWQtdmFyc1xuICAgICAgcmV0dXJuIGFycmF5RmlsbC5hcHBseSh2YWxpZGF0ZSh0aGlzKSwgYXJndW1lbnRzKTtcbiAgICB9LFxuICAgIGZpbHRlcjogZnVuY3Rpb24gZmlsdGVyKGNhbGxiYWNrZm4gLyogLCB0aGlzQXJnICovKSB7XG4gICAgICByZXR1cm4gc3BlY2llc0Zyb21MaXN0KHRoaXMsIGFycmF5RmlsdGVyKHZhbGlkYXRlKHRoaXMpLCBjYWxsYmFja2ZuLFxuICAgICAgICBhcmd1bWVudHMubGVuZ3RoID4gMSA/IGFyZ3VtZW50c1sxXSA6IHVuZGVmaW5lZCkpO1xuICAgIH0sXG4gICAgZmluZDogZnVuY3Rpb24gZmluZChwcmVkaWNhdGUgLyogLCB0aGlzQXJnICovKSB7XG4gICAgICByZXR1cm4gYXJyYXlGaW5kKHZhbGlkYXRlKHRoaXMpLCBwcmVkaWNhdGUsIGFyZ3VtZW50cy5sZW5ndGggPiAxID8gYXJndW1lbnRzWzFdIDogdW5kZWZpbmVkKTtcbiAgICB9LFxuICAgIGZpbmRJbmRleDogZnVuY3Rpb24gZmluZEluZGV4KHByZWRpY2F0ZSAvKiAsIHRoaXNBcmcgKi8pIHtcbiAgICAgIHJldHVybiBhcnJheUZpbmRJbmRleCh2YWxpZGF0ZSh0aGlzKSwgcHJlZGljYXRlLCBhcmd1bWVudHMubGVuZ3RoID4gMSA/IGFyZ3VtZW50c1sxXSA6IHVuZGVmaW5lZCk7XG4gICAgfSxcbiAgICBmb3JFYWNoOiBmdW5jdGlvbiBmb3JFYWNoKGNhbGxiYWNrZm4gLyogLCB0aGlzQXJnICovKSB7XG4gICAgICBhcnJheUZvckVhY2godmFsaWRhdGUodGhpcyksIGNhbGxiYWNrZm4sIGFyZ3VtZW50cy5sZW5ndGggPiAxID8gYXJndW1lbnRzWzFdIDogdW5kZWZpbmVkKTtcbiAgICB9LFxuICAgIGluZGV4T2Y6IGZ1bmN0aW9uIGluZGV4T2Yoc2VhcmNoRWxlbWVudCAvKiAsIGZyb21JbmRleCAqLykge1xuICAgICAgcmV0dXJuIGFycmF5SW5kZXhPZih2YWxpZGF0ZSh0aGlzKSwgc2VhcmNoRWxlbWVudCwgYXJndW1lbnRzLmxlbmd0aCA+IDEgPyBhcmd1bWVudHNbMV0gOiB1bmRlZmluZWQpO1xuICAgIH0sXG4gICAgaW5jbHVkZXM6IGZ1bmN0aW9uIGluY2x1ZGVzKHNlYXJjaEVsZW1lbnQgLyogLCBmcm9tSW5kZXggKi8pIHtcbiAgICAgIHJldHVybiBhcnJheUluY2x1ZGVzKHZhbGlkYXRlKHRoaXMpLCBzZWFyY2hFbGVtZW50LCBhcmd1bWVudHMubGVuZ3RoID4gMSA/IGFyZ3VtZW50c1sxXSA6IHVuZGVmaW5lZCk7XG4gICAgfSxcbiAgICBqb2luOiBmdW5jdGlvbiBqb2luKHNlcGFyYXRvcikgeyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLXVudXNlZC12YXJzXG4gICAgICByZXR1cm4gYXJyYXlKb2luLmFwcGx5KHZhbGlkYXRlKHRoaXMpLCBhcmd1bWVudHMpO1xuICAgIH0sXG4gICAgbGFzdEluZGV4T2Y6IGZ1bmN0aW9uIGxhc3RJbmRleE9mKHNlYXJjaEVsZW1lbnQgLyogLCBmcm9tSW5kZXggKi8pIHsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby11bnVzZWQtdmFyc1xuICAgICAgcmV0dXJuIGFycmF5TGFzdEluZGV4T2YuYXBwbHkodmFsaWRhdGUodGhpcyksIGFyZ3VtZW50cyk7XG4gICAgfSxcbiAgICBtYXA6IGZ1bmN0aW9uIG1hcChtYXBmbiAvKiAsIHRoaXNBcmcgKi8pIHtcbiAgICAgIHJldHVybiAkbWFwKHZhbGlkYXRlKHRoaXMpLCBtYXBmbiwgYXJndW1lbnRzLmxlbmd0aCA+IDEgPyBhcmd1bWVudHNbMV0gOiB1bmRlZmluZWQpO1xuICAgIH0sXG4gICAgcmVkdWNlOiBmdW5jdGlvbiByZWR1Y2UoY2FsbGJhY2tmbiAvKiAsIGluaXRpYWxWYWx1ZSAqLykgeyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLXVudXNlZC12YXJzXG4gICAgICByZXR1cm4gYXJyYXlSZWR1Y2UuYXBwbHkodmFsaWRhdGUodGhpcyksIGFyZ3VtZW50cyk7XG4gICAgfSxcbiAgICByZWR1Y2VSaWdodDogZnVuY3Rpb24gcmVkdWNlUmlnaHQoY2FsbGJhY2tmbiAvKiAsIGluaXRpYWxWYWx1ZSAqLykgeyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLXVudXNlZC12YXJzXG4gICAgICByZXR1cm4gYXJyYXlSZWR1Y2VSaWdodC5hcHBseSh2YWxpZGF0ZSh0aGlzKSwgYXJndW1lbnRzKTtcbiAgICB9LFxuICAgIHJldmVyc2U6IGZ1bmN0aW9uIHJldmVyc2UoKSB7XG4gICAgICB2YXIgdGhhdCA9IHRoaXM7XG4gICAgICB2YXIgbGVuZ3RoID0gdmFsaWRhdGUodGhhdCkubGVuZ3RoO1xuICAgICAgdmFyIG1pZGRsZSA9IE1hdGguZmxvb3IobGVuZ3RoIC8gMik7XG4gICAgICB2YXIgaW5kZXggPSAwO1xuICAgICAgdmFyIHZhbHVlO1xuICAgICAgd2hpbGUgKGluZGV4IDwgbWlkZGxlKSB7XG4gICAgICAgIHZhbHVlID0gdGhhdFtpbmRleF07XG4gICAgICAgIHRoYXRbaW5kZXgrK10gPSB0aGF0Wy0tbGVuZ3RoXTtcbiAgICAgICAgdGhhdFtsZW5ndGhdID0gdmFsdWU7XG4gICAgICB9IHJldHVybiB0aGF0O1xuICAgIH0sXG4gICAgc29tZTogZnVuY3Rpb24gc29tZShjYWxsYmFja2ZuIC8qICwgdGhpc0FyZyAqLykge1xuICAgICAgcmV0dXJuIGFycmF5U29tZSh2YWxpZGF0ZSh0aGlzKSwgY2FsbGJhY2tmbiwgYXJndW1lbnRzLmxlbmd0aCA+IDEgPyBhcmd1bWVudHNbMV0gOiB1bmRlZmluZWQpO1xuICAgIH0sXG4gICAgc29ydDogZnVuY3Rpb24gc29ydChjb21wYXJlZm4pIHtcbiAgICAgIHJldHVybiBhcnJheVNvcnQuY2FsbCh2YWxpZGF0ZSh0aGlzKSwgY29tcGFyZWZuKTtcbiAgICB9LFxuICAgIHN1YmFycmF5OiBmdW5jdGlvbiBzdWJhcnJheShiZWdpbiwgZW5kKSB7XG4gICAgICB2YXIgTyA9IHZhbGlkYXRlKHRoaXMpO1xuICAgICAgdmFyIGxlbmd0aCA9IE8ubGVuZ3RoO1xuICAgICAgdmFyICRiZWdpbiA9IHRvQWJzb2x1dGVJbmRleChiZWdpbiwgbGVuZ3RoKTtcbiAgICAgIHJldHVybiBuZXcgKHNwZWNpZXNDb25zdHJ1Y3RvcihPLCBPW0RFRl9DT05TVFJVQ1RPUl0pKShcbiAgICAgICAgTy5idWZmZXIsXG4gICAgICAgIE8uYnl0ZU9mZnNldCArICRiZWdpbiAqIE8uQllURVNfUEVSX0VMRU1FTlQsXG4gICAgICAgIHRvTGVuZ3RoKChlbmQgPT09IHVuZGVmaW5lZCA/IGxlbmd0aCA6IHRvQWJzb2x1dGVJbmRleChlbmQsIGxlbmd0aCkpIC0gJGJlZ2luKVxuICAgICAgKTtcbiAgICB9XG4gIH07XG5cbiAgdmFyICRzbGljZSA9IGZ1bmN0aW9uIHNsaWNlKHN0YXJ0LCBlbmQpIHtcbiAgICByZXR1cm4gc3BlY2llc0Zyb21MaXN0KHRoaXMsIGFycmF5U2xpY2UuY2FsbCh2YWxpZGF0ZSh0aGlzKSwgc3RhcnQsIGVuZCkpO1xuICB9O1xuXG4gIHZhciAkc2V0ID0gZnVuY3Rpb24gc2V0KGFycmF5TGlrZSAvKiAsIG9mZnNldCAqLykge1xuICAgIHZhbGlkYXRlKHRoaXMpO1xuICAgIHZhciBvZmZzZXQgPSB0b09mZnNldChhcmd1bWVudHNbMV0sIDEpO1xuICAgIHZhciBsZW5ndGggPSB0aGlzLmxlbmd0aDtcbiAgICB2YXIgc3JjID0gdG9PYmplY3QoYXJyYXlMaWtlKTtcbiAgICB2YXIgbGVuID0gdG9MZW5ndGgoc3JjLmxlbmd0aCk7XG4gICAgdmFyIGluZGV4ID0gMDtcbiAgICBpZiAobGVuICsgb2Zmc2V0ID4gbGVuZ3RoKSB0aHJvdyBSYW5nZUVycm9yKFdST05HX0xFTkdUSCk7XG4gICAgd2hpbGUgKGluZGV4IDwgbGVuKSB0aGlzW29mZnNldCArIGluZGV4XSA9IHNyY1tpbmRleCsrXTtcbiAgfTtcblxuICB2YXIgJGl0ZXJhdG9ycyA9IHtcbiAgICBlbnRyaWVzOiBmdW5jdGlvbiBlbnRyaWVzKCkge1xuICAgICAgcmV0dXJuIGFycmF5RW50cmllcy5jYWxsKHZhbGlkYXRlKHRoaXMpKTtcbiAgICB9LFxuICAgIGtleXM6IGZ1bmN0aW9uIGtleXMoKSB7XG4gICAgICByZXR1cm4gYXJyYXlLZXlzLmNhbGwodmFsaWRhdGUodGhpcykpO1xuICAgIH0sXG4gICAgdmFsdWVzOiBmdW5jdGlvbiB2YWx1ZXMoKSB7XG4gICAgICByZXR1cm4gYXJyYXlWYWx1ZXMuY2FsbCh2YWxpZGF0ZSh0aGlzKSk7XG4gICAgfVxuICB9O1xuXG4gIHZhciBpc1RBSW5kZXggPSBmdW5jdGlvbiAodGFyZ2V0LCBrZXkpIHtcbiAgICByZXR1cm4gaXNPYmplY3QodGFyZ2V0KVxuICAgICAgJiYgdGFyZ2V0W1RZUEVEX0FSUkFZXVxuICAgICAgJiYgdHlwZW9mIGtleSAhPSAnc3ltYm9sJ1xuICAgICAgJiYga2V5IGluIHRhcmdldFxuICAgICAgJiYgU3RyaW5nKCtrZXkpID09IFN0cmluZyhrZXkpO1xuICB9O1xuICB2YXIgJGdldERlc2MgPSBmdW5jdGlvbiBnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IodGFyZ2V0LCBrZXkpIHtcbiAgICByZXR1cm4gaXNUQUluZGV4KHRhcmdldCwga2V5ID0gdG9QcmltaXRpdmUoa2V5LCB0cnVlKSlcbiAgICAgID8gcHJvcGVydHlEZXNjKDIsIHRhcmdldFtrZXldKVxuICAgICAgOiBnT1BEKHRhcmdldCwga2V5KTtcbiAgfTtcbiAgdmFyICRzZXREZXNjID0gZnVuY3Rpb24gZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIGRlc2MpIHtcbiAgICBpZiAoaXNUQUluZGV4KHRhcmdldCwga2V5ID0gdG9QcmltaXRpdmUoa2V5LCB0cnVlKSlcbiAgICAgICYmIGlzT2JqZWN0KGRlc2MpXG4gICAgICAmJiBoYXMoZGVzYywgJ3ZhbHVlJylcbiAgICAgICYmICFoYXMoZGVzYywgJ2dldCcpXG4gICAgICAmJiAhaGFzKGRlc2MsICdzZXQnKVxuICAgICAgLy8gVE9ETzogYWRkIHZhbGlkYXRpb24gZGVzY3JpcHRvciB3L28gY2FsbGluZyBhY2Nlc3NvcnNcbiAgICAgICYmICFkZXNjLmNvbmZpZ3VyYWJsZVxuICAgICAgJiYgKCFoYXMoZGVzYywgJ3dyaXRhYmxlJykgfHwgZGVzYy53cml0YWJsZSlcbiAgICAgICYmICghaGFzKGRlc2MsICdlbnVtZXJhYmxlJykgfHwgZGVzYy5lbnVtZXJhYmxlKVxuICAgICkge1xuICAgICAgdGFyZ2V0W2tleV0gPSBkZXNjLnZhbHVlO1xuICAgICAgcmV0dXJuIHRhcmdldDtcbiAgICB9IHJldHVybiBkUCh0YXJnZXQsIGtleSwgZGVzYyk7XG4gIH07XG5cbiAgaWYgKCFBTExfQ09OU1RSVUNUT1JTKSB7XG4gICAgJEdPUEQuZiA9ICRnZXREZXNjO1xuICAgICREUC5mID0gJHNldERlc2M7XG4gIH1cblxuICAkZXhwb3J0KCRleHBvcnQuUyArICRleHBvcnQuRiAqICFBTExfQ09OU1RSVUNUT1JTLCAnT2JqZWN0Jywge1xuICAgIGdldE93blByb3BlcnR5RGVzY3JpcHRvcjogJGdldERlc2MsXG4gICAgZGVmaW5lUHJvcGVydHk6ICRzZXREZXNjXG4gIH0pO1xuXG4gIGlmIChmYWlscyhmdW5jdGlvbiAoKSB7IGFycmF5VG9TdHJpbmcuY2FsbCh7fSk7IH0pKSB7XG4gICAgYXJyYXlUb1N0cmluZyA9IGFycmF5VG9Mb2NhbGVTdHJpbmcgPSBmdW5jdGlvbiB0b1N0cmluZygpIHtcbiAgICAgIHJldHVybiBhcnJheUpvaW4uY2FsbCh0aGlzKTtcbiAgICB9O1xuICB9XG5cbiAgdmFyICRUeXBlZEFycmF5UHJvdG90eXBlJCA9IHJlZGVmaW5lQWxsKHt9LCBwcm90byk7XG4gIHJlZGVmaW5lQWxsKCRUeXBlZEFycmF5UHJvdG90eXBlJCwgJGl0ZXJhdG9ycyk7XG4gIGhpZGUoJFR5cGVkQXJyYXlQcm90b3R5cGUkLCBJVEVSQVRPUiwgJGl0ZXJhdG9ycy52YWx1ZXMpO1xuICByZWRlZmluZUFsbCgkVHlwZWRBcnJheVByb3RvdHlwZSQsIHtcbiAgICBzbGljZTogJHNsaWNlLFxuICAgIHNldDogJHNldCxcbiAgICBjb25zdHJ1Y3RvcjogZnVuY3Rpb24gKCkgeyAvKiBub29wICovIH0sXG4gICAgdG9TdHJpbmc6IGFycmF5VG9TdHJpbmcsXG4gICAgdG9Mb2NhbGVTdHJpbmc6ICR0b0xvY2FsZVN0cmluZ1xuICB9KTtcbiAgYWRkR2V0dGVyKCRUeXBlZEFycmF5UHJvdG90eXBlJCwgJ2J1ZmZlcicsICdiJyk7XG4gIGFkZEdldHRlcigkVHlwZWRBcnJheVByb3RvdHlwZSQsICdieXRlT2Zmc2V0JywgJ28nKTtcbiAgYWRkR2V0dGVyKCRUeXBlZEFycmF5UHJvdG90eXBlJCwgJ2J5dGVMZW5ndGgnLCAnbCcpO1xuICBhZGRHZXR0ZXIoJFR5cGVkQXJyYXlQcm90b3R5cGUkLCAnbGVuZ3RoJywgJ2UnKTtcbiAgZFAoJFR5cGVkQXJyYXlQcm90b3R5cGUkLCBUQUcsIHtcbiAgICBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHRoaXNbVFlQRURfQVJSQVldOyB9XG4gIH0pO1xuXG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBtYXgtc3RhdGVtZW50c1xuICBtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChLRVksIEJZVEVTLCB3cmFwcGVyLCBDTEFNUEVEKSB7XG4gICAgQ0xBTVBFRCA9ICEhQ0xBTVBFRDtcbiAgICB2YXIgTkFNRSA9IEtFWSArIChDTEFNUEVEID8gJ0NsYW1wZWQnIDogJycpICsgJ0FycmF5JztcbiAgICB2YXIgR0VUVEVSID0gJ2dldCcgKyBLRVk7XG4gICAgdmFyIFNFVFRFUiA9ICdzZXQnICsgS0VZO1xuICAgIHZhciBUeXBlZEFycmF5ID0gZ2xvYmFsW05BTUVdO1xuICAgIHZhciBCYXNlID0gVHlwZWRBcnJheSB8fCB7fTtcbiAgICB2YXIgVEFDID0gVHlwZWRBcnJheSAmJiBnZXRQcm90b3R5cGVPZihUeXBlZEFycmF5KTtcbiAgICB2YXIgRk9SQ0VEID0gIVR5cGVkQXJyYXkgfHwgISR0eXBlZC5BQlY7XG4gICAgdmFyIE8gPSB7fTtcbiAgICB2YXIgVHlwZWRBcnJheVByb3RvdHlwZSA9IFR5cGVkQXJyYXkgJiYgVHlwZWRBcnJheVtQUk9UT1RZUEVdO1xuICAgIHZhciBnZXR0ZXIgPSBmdW5jdGlvbiAodGhhdCwgaW5kZXgpIHtcbiAgICAgIHZhciBkYXRhID0gdGhhdC5fZDtcbiAgICAgIHJldHVybiBkYXRhLnZbR0VUVEVSXShpbmRleCAqIEJZVEVTICsgZGF0YS5vLCBMSVRUTEVfRU5ESUFOKTtcbiAgICB9O1xuICAgIHZhciBzZXR0ZXIgPSBmdW5jdGlvbiAodGhhdCwgaW5kZXgsIHZhbHVlKSB7XG4gICAgICB2YXIgZGF0YSA9IHRoYXQuX2Q7XG4gICAgICBpZiAoQ0xBTVBFRCkgdmFsdWUgPSAodmFsdWUgPSBNYXRoLnJvdW5kKHZhbHVlKSkgPCAwID8gMCA6IHZhbHVlID4gMHhmZiA/IDB4ZmYgOiB2YWx1ZSAmIDB4ZmY7XG4gICAgICBkYXRhLnZbU0VUVEVSXShpbmRleCAqIEJZVEVTICsgZGF0YS5vLCB2YWx1ZSwgTElUVExFX0VORElBTik7XG4gICAgfTtcbiAgICB2YXIgYWRkRWxlbWVudCA9IGZ1bmN0aW9uICh0aGF0LCBpbmRleCkge1xuICAgICAgZFAodGhhdCwgaW5kZXgsIHtcbiAgICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgcmV0dXJuIGdldHRlcih0aGlzLCBpbmRleCk7XG4gICAgICAgIH0sXG4gICAgICAgIHNldDogZnVuY3Rpb24gKHZhbHVlKSB7XG4gICAgICAgICAgcmV0dXJuIHNldHRlcih0aGlzLCBpbmRleCwgdmFsdWUpO1xuICAgICAgICB9LFxuICAgICAgICBlbnVtZXJhYmxlOiB0cnVlXG4gICAgICB9KTtcbiAgICB9O1xuICAgIGlmIChGT1JDRUQpIHtcbiAgICAgIFR5cGVkQXJyYXkgPSB3cmFwcGVyKGZ1bmN0aW9uICh0aGF0LCBkYXRhLCAkb2Zmc2V0LCAkbGVuZ3RoKSB7XG4gICAgICAgIGFuSW5zdGFuY2UodGhhdCwgVHlwZWRBcnJheSwgTkFNRSwgJ19kJyk7XG4gICAgICAgIHZhciBpbmRleCA9IDA7XG4gICAgICAgIHZhciBvZmZzZXQgPSAwO1xuICAgICAgICB2YXIgYnVmZmVyLCBieXRlTGVuZ3RoLCBsZW5ndGgsIGtsYXNzO1xuICAgICAgICBpZiAoIWlzT2JqZWN0KGRhdGEpKSB7XG4gICAgICAgICAgbGVuZ3RoID0gdG9JbmRleChkYXRhKTtcbiAgICAgICAgICBieXRlTGVuZ3RoID0gbGVuZ3RoICogQllURVM7XG4gICAgICAgICAgYnVmZmVyID0gbmV3ICRBcnJheUJ1ZmZlcihieXRlTGVuZ3RoKTtcbiAgICAgICAgfSBlbHNlIGlmIChkYXRhIGluc3RhbmNlb2YgJEFycmF5QnVmZmVyIHx8IChrbGFzcyA9IGNsYXNzb2YoZGF0YSkpID09IEFSUkFZX0JVRkZFUiB8fCBrbGFzcyA9PSBTSEFSRURfQlVGRkVSKSB7XG4gICAgICAgICAgYnVmZmVyID0gZGF0YTtcbiAgICAgICAgICBvZmZzZXQgPSB0b09mZnNldCgkb2Zmc2V0LCBCWVRFUyk7XG4gICAgICAgICAgdmFyICRsZW4gPSBkYXRhLmJ5dGVMZW5ndGg7XG4gICAgICAgICAgaWYgKCRsZW5ndGggPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgaWYgKCRsZW4gJSBCWVRFUykgdGhyb3cgUmFuZ2VFcnJvcihXUk9OR19MRU5HVEgpO1xuICAgICAgICAgICAgYnl0ZUxlbmd0aCA9ICRsZW4gLSBvZmZzZXQ7XG4gICAgICAgICAgICBpZiAoYnl0ZUxlbmd0aCA8IDApIHRocm93IFJhbmdlRXJyb3IoV1JPTkdfTEVOR1RIKTtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgYnl0ZUxlbmd0aCA9IHRvTGVuZ3RoKCRsZW5ndGgpICogQllURVM7XG4gICAgICAgICAgICBpZiAoYnl0ZUxlbmd0aCArIG9mZnNldCA+ICRsZW4pIHRocm93IFJhbmdlRXJyb3IoV1JPTkdfTEVOR1RIKTtcbiAgICAgICAgICB9XG4gICAgICAgICAgbGVuZ3RoID0gYnl0ZUxlbmd0aCAvIEJZVEVTO1xuICAgICAgICB9IGVsc2UgaWYgKFRZUEVEX0FSUkFZIGluIGRhdGEpIHtcbiAgICAgICAgICByZXR1cm4gZnJvbUxpc3QoVHlwZWRBcnJheSwgZGF0YSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgcmV0dXJuICRmcm9tLmNhbGwoVHlwZWRBcnJheSwgZGF0YSk7XG4gICAgICAgIH1cbiAgICAgICAgaGlkZSh0aGF0LCAnX2QnLCB7XG4gICAgICAgICAgYjogYnVmZmVyLFxuICAgICAgICAgIG86IG9mZnNldCxcbiAgICAgICAgICBsOiBieXRlTGVuZ3RoLFxuICAgICAgICAgIGU6IGxlbmd0aCxcbiAgICAgICAgICB2OiBuZXcgJERhdGFWaWV3KGJ1ZmZlcilcbiAgICAgICAgfSk7XG4gICAgICAgIHdoaWxlIChpbmRleCA8IGxlbmd0aCkgYWRkRWxlbWVudCh0aGF0LCBpbmRleCsrKTtcbiAgICAgIH0pO1xuICAgICAgVHlwZWRBcnJheVByb3RvdHlwZSA9IFR5cGVkQXJyYXlbUFJPVE9UWVBFXSA9IGNyZWF0ZSgkVHlwZWRBcnJheVByb3RvdHlwZSQpO1xuICAgICAgaGlkZShUeXBlZEFycmF5UHJvdG90eXBlLCAnY29uc3RydWN0b3InLCBUeXBlZEFycmF5KTtcbiAgICB9IGVsc2UgaWYgKCFmYWlscyhmdW5jdGlvbiAoKSB7XG4gICAgICBUeXBlZEFycmF5KDEpO1xuICAgIH0pIHx8ICFmYWlscyhmdW5jdGlvbiAoKSB7XG4gICAgICBuZXcgVHlwZWRBcnJheSgtMSk7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tbmV3XG4gICAgfSkgfHwgISRpdGVyRGV0ZWN0KGZ1bmN0aW9uIChpdGVyKSB7XG4gICAgICBuZXcgVHlwZWRBcnJheSgpOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLW5ld1xuICAgICAgbmV3IFR5cGVkQXJyYXkobnVsbCk7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tbmV3XG4gICAgICBuZXcgVHlwZWRBcnJheSgxLjUpOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLW5ld1xuICAgICAgbmV3IFR5cGVkQXJyYXkoaXRlcik7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tbmV3XG4gICAgfSwgdHJ1ZSkpIHtcbiAgICAgIFR5cGVkQXJyYXkgPSB3cmFwcGVyKGZ1bmN0aW9uICh0aGF0LCBkYXRhLCAkb2Zmc2V0LCAkbGVuZ3RoKSB7XG4gICAgICAgIGFuSW5zdGFuY2UodGhhdCwgVHlwZWRBcnJheSwgTkFNRSk7XG4gICAgICAgIHZhciBrbGFzcztcbiAgICAgICAgLy8gYHdzYCBtb2R1bGUgYnVnLCB0ZW1wb3JhcmlseSByZW1vdmUgdmFsaWRhdGlvbiBsZW5ndGggZm9yIFVpbnQ4QXJyYXlcbiAgICAgICAgLy8gaHR0cHM6Ly9naXRodWIuY29tL3dlYnNvY2tldHMvd3MvcHVsbC82NDVcbiAgICAgICAgaWYgKCFpc09iamVjdChkYXRhKSkgcmV0dXJuIG5ldyBCYXNlKHRvSW5kZXgoZGF0YSkpO1xuICAgICAgICBpZiAoZGF0YSBpbnN0YW5jZW9mICRBcnJheUJ1ZmZlciB8fCAoa2xhc3MgPSBjbGFzc29mKGRhdGEpKSA9PSBBUlJBWV9CVUZGRVIgfHwga2xhc3MgPT0gU0hBUkVEX0JVRkZFUikge1xuICAgICAgICAgIHJldHVybiAkbGVuZ3RoICE9PSB1bmRlZmluZWRcbiAgICAgICAgICAgID8gbmV3IEJhc2UoZGF0YSwgdG9PZmZzZXQoJG9mZnNldCwgQllURVMpLCAkbGVuZ3RoKVxuICAgICAgICAgICAgOiAkb2Zmc2V0ICE9PSB1bmRlZmluZWRcbiAgICAgICAgICAgICAgPyBuZXcgQmFzZShkYXRhLCB0b09mZnNldCgkb2Zmc2V0LCBCWVRFUykpXG4gICAgICAgICAgICAgIDogbmV3IEJhc2UoZGF0YSk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKFRZUEVEX0FSUkFZIGluIGRhdGEpIHJldHVybiBmcm9tTGlzdChUeXBlZEFycmF5LCBkYXRhKTtcbiAgICAgICAgcmV0dXJuICRmcm9tLmNhbGwoVHlwZWRBcnJheSwgZGF0YSk7XG4gICAgICB9KTtcbiAgICAgIGFycmF5Rm9yRWFjaChUQUMgIT09IEZ1bmN0aW9uLnByb3RvdHlwZSA/IGdPUE4oQmFzZSkuY29uY2F0KGdPUE4oVEFDKSkgOiBnT1BOKEJhc2UpLCBmdW5jdGlvbiAoa2V5KSB7XG4gICAgICAgIGlmICghKGtleSBpbiBUeXBlZEFycmF5KSkgaGlkZShUeXBlZEFycmF5LCBrZXksIEJhc2Vba2V5XSk7XG4gICAgICB9KTtcbiAgICAgIFR5cGVkQXJyYXlbUFJPVE9UWVBFXSA9IFR5cGVkQXJyYXlQcm90b3R5cGU7XG4gICAgICBpZiAoIUxJQlJBUlkpIFR5cGVkQXJyYXlQcm90b3R5cGUuY29uc3RydWN0b3IgPSBUeXBlZEFycmF5O1xuICAgIH1cbiAgICB2YXIgJG5hdGl2ZUl0ZXJhdG9yID0gVHlwZWRBcnJheVByb3RvdHlwZVtJVEVSQVRPUl07XG4gICAgdmFyIENPUlJFQ1RfSVRFUl9OQU1FID0gISEkbmF0aXZlSXRlcmF0b3JcbiAgICAgICYmICgkbmF0aXZlSXRlcmF0b3IubmFtZSA9PSAndmFsdWVzJyB8fCAkbmF0aXZlSXRlcmF0b3IubmFtZSA9PSB1bmRlZmluZWQpO1xuICAgIHZhciAkaXRlcmF0b3IgPSAkaXRlcmF0b3JzLnZhbHVlcztcbiAgICBoaWRlKFR5cGVkQXJyYXksIFRZUEVEX0NPTlNUUlVDVE9SLCB0cnVlKTtcbiAgICBoaWRlKFR5cGVkQXJyYXlQcm90b3R5cGUsIFRZUEVEX0FSUkFZLCBOQU1FKTtcbiAgICBoaWRlKFR5cGVkQXJyYXlQcm90b3R5cGUsIFZJRVcsIHRydWUpO1xuICAgIGhpZGUoVHlwZWRBcnJheVByb3RvdHlwZSwgREVGX0NPTlNUUlVDVE9SLCBUeXBlZEFycmF5KTtcblxuICAgIGlmIChDTEFNUEVEID8gbmV3IFR5cGVkQXJyYXkoMSlbVEFHXSAhPSBOQU1FIDogIShUQUcgaW4gVHlwZWRBcnJheVByb3RvdHlwZSkpIHtcbiAgICAgIGRQKFR5cGVkQXJyYXlQcm90b3R5cGUsIFRBRywge1xuICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIE5BTUU7IH1cbiAgICAgIH0pO1xuICAgIH1cblxuICAgIE9bTkFNRV0gPSBUeXBlZEFycmF5O1xuXG4gICAgJGV4cG9ydCgkZXhwb3J0LkcgKyAkZXhwb3J0LlcgKyAkZXhwb3J0LkYgKiAoVHlwZWRBcnJheSAhPSBCYXNlKSwgTyk7XG5cbiAgICAkZXhwb3J0KCRleHBvcnQuUywgTkFNRSwge1xuICAgICAgQllURVNfUEVSX0VMRU1FTlQ6IEJZVEVTXG4gICAgfSk7XG5cbiAgICAkZXhwb3J0KCRleHBvcnQuUyArICRleHBvcnQuRiAqIGZhaWxzKGZ1bmN0aW9uICgpIHsgQmFzZS5vZi5jYWxsKFR5cGVkQXJyYXksIDEpOyB9KSwgTkFNRSwge1xuICAgICAgZnJvbTogJGZyb20sXG4gICAgICBvZjogJG9mXG4gICAgfSk7XG5cbiAgICBpZiAoIShCWVRFU19QRVJfRUxFTUVOVCBpbiBUeXBlZEFycmF5UHJvdG90eXBlKSkgaGlkZShUeXBlZEFycmF5UHJvdG90eXBlLCBCWVRFU19QRVJfRUxFTUVOVCwgQllURVMpO1xuXG4gICAgJGV4cG9ydCgkZXhwb3J0LlAsIE5BTUUsIHByb3RvKTtcblxuICAgIHNldFNwZWNpZXMoTkFNRSk7XG5cbiAgICAkZXhwb3J0KCRleHBvcnQuUCArICRleHBvcnQuRiAqIEZPUkNFRF9TRVQsIE5BTUUsIHsgc2V0OiAkc2V0IH0pO1xuXG4gICAgJGV4cG9ydCgkZXhwb3J0LlAgKyAkZXhwb3J0LkYgKiAhQ09SUkVDVF9JVEVSX05BTUUsIE5BTUUsICRpdGVyYXRvcnMpO1xuXG4gICAgaWYgKCFMSUJSQVJZICYmIFR5cGVkQXJyYXlQcm90b3R5cGUudG9TdHJpbmcgIT0gYXJyYXlUb1N0cmluZykgVHlwZWRBcnJheVByb3RvdHlwZS50b1N0cmluZyA9IGFycmF5VG9TdHJpbmc7XG5cbiAgICAkZXhwb3J0KCRleHBvcnQuUCArICRleHBvcnQuRiAqIGZhaWxzKGZ1bmN0aW9uICgpIHtcbiAgICAgIG5ldyBUeXBlZEFycmF5KDEpLnNsaWNlKCk7XG4gICAgfSksIE5BTUUsIHsgc2xpY2U6ICRzbGljZSB9KTtcblxuICAgICRleHBvcnQoJGV4cG9ydC5QICsgJGV4cG9ydC5GICogKGZhaWxzKGZ1bmN0aW9uICgpIHtcbiAgICAgIHJldHVybiBbMSwgMl0udG9Mb2NhbGVTdHJpbmcoKSAhPSBuZXcgVHlwZWRBcnJheShbMSwgMl0pLnRvTG9jYWxlU3RyaW5nKCk7XG4gICAgfSkgfHwgIWZhaWxzKGZ1bmN0aW9uICgpIHtcbiAgICAgIFR5cGVkQXJyYXlQcm90b3R5cGUudG9Mb2NhbGVTdHJpbmcuY2FsbChbMSwgMl0pO1xuICAgIH0pKSwgTkFNRSwgeyB0b0xvY2FsZVN0cmluZzogJHRvTG9jYWxlU3RyaW5nIH0pO1xuXG4gICAgSXRlcmF0b3JzW05BTUVdID0gQ09SUkVDVF9JVEVSX05BTUUgPyAkbmF0aXZlSXRlcmF0b3IgOiAkaXRlcmF0b3I7XG4gICAgaWYgKCFMSUJSQVJZICYmICFDT1JSRUNUX0lURVJfTkFNRSkgaGlkZShUeXBlZEFycmF5UHJvdG90eXBlLCBJVEVSQVRPUiwgJGl0ZXJhdG9yKTtcbiAgfTtcbn0gZWxzZSBtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uICgpIHsgLyogZW1wdHkgKi8gfTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciBnbG9iYWwgPSByZXF1aXJlKCcuL19nbG9iYWwnKTtcbnZhciBERVNDUklQVE9SUyA9IHJlcXVpcmUoJy4vX2Rlc2NyaXB0b3JzJyk7XG52YXIgTElCUkFSWSA9IHJlcXVpcmUoJy4vX2xpYnJhcnknKTtcbnZhciAkdHlwZWQgPSByZXF1aXJlKCcuL190eXBlZCcpO1xudmFyIGhpZGUgPSByZXF1aXJlKCcuL19oaWRlJyk7XG52YXIgcmVkZWZpbmVBbGwgPSByZXF1aXJlKCcuL19yZWRlZmluZS1hbGwnKTtcbnZhciBmYWlscyA9IHJlcXVpcmUoJy4vX2ZhaWxzJyk7XG52YXIgYW5JbnN0YW5jZSA9IHJlcXVpcmUoJy4vX2FuLWluc3RhbmNlJyk7XG52YXIgdG9JbnRlZ2VyID0gcmVxdWlyZSgnLi9fdG8taW50ZWdlcicpO1xudmFyIHRvTGVuZ3RoID0gcmVxdWlyZSgnLi9fdG8tbGVuZ3RoJyk7XG52YXIgdG9JbmRleCA9IHJlcXVpcmUoJy4vX3RvLWluZGV4Jyk7XG52YXIgZ09QTiA9IHJlcXVpcmUoJy4vX29iamVjdC1nb3BuJykuZjtcbnZhciBkUCA9IHJlcXVpcmUoJy4vX29iamVjdC1kcCcpLmY7XG52YXIgYXJyYXlGaWxsID0gcmVxdWlyZSgnLi9fYXJyYXktZmlsbCcpO1xudmFyIHNldFRvU3RyaW5nVGFnID0gcmVxdWlyZSgnLi9fc2V0LXRvLXN0cmluZy10YWcnKTtcbnZhciBBUlJBWV9CVUZGRVIgPSAnQXJyYXlCdWZmZXInO1xudmFyIERBVEFfVklFVyA9ICdEYXRhVmlldyc7XG52YXIgUFJPVE9UWVBFID0gJ3Byb3RvdHlwZSc7XG52YXIgV1JPTkdfTEVOR1RIID0gJ1dyb25nIGxlbmd0aCEnO1xudmFyIFdST05HX0lOREVYID0gJ1dyb25nIGluZGV4ISc7XG52YXIgJEFycmF5QnVmZmVyID0gZ2xvYmFsW0FSUkFZX0JVRkZFUl07XG52YXIgJERhdGFWaWV3ID0gZ2xvYmFsW0RBVEFfVklFV107XG52YXIgTWF0aCA9IGdsb2JhbC5NYXRoO1xudmFyIFJhbmdlRXJyb3IgPSBnbG9iYWwuUmFuZ2VFcnJvcjtcbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1zaGFkb3ctcmVzdHJpY3RlZC1uYW1lc1xudmFyIEluZmluaXR5ID0gZ2xvYmFsLkluZmluaXR5O1xudmFyIEJhc2VCdWZmZXIgPSAkQXJyYXlCdWZmZXI7XG52YXIgYWJzID0gTWF0aC5hYnM7XG52YXIgcG93ID0gTWF0aC5wb3c7XG52YXIgZmxvb3IgPSBNYXRoLmZsb29yO1xudmFyIGxvZyA9IE1hdGgubG9nO1xudmFyIExOMiA9IE1hdGguTE4yO1xudmFyIEJVRkZFUiA9ICdidWZmZXInO1xudmFyIEJZVEVfTEVOR1RIID0gJ2J5dGVMZW5ndGgnO1xudmFyIEJZVEVfT0ZGU0VUID0gJ2J5dGVPZmZzZXQnO1xudmFyICRCVUZGRVIgPSBERVNDUklQVE9SUyA/ICdfYicgOiBCVUZGRVI7XG52YXIgJExFTkdUSCA9IERFU0NSSVBUT1JTID8gJ19sJyA6IEJZVEVfTEVOR1RIO1xudmFyICRPRkZTRVQgPSBERVNDUklQVE9SUyA/ICdfbycgOiBCWVRFX09GRlNFVDtcblxuLy8gSUVFRTc1NCBjb252ZXJzaW9ucyBiYXNlZCBvbiBodHRwczovL2dpdGh1Yi5jb20vZmVyb3NzL2llZWU3NTRcbmZ1bmN0aW9uIHBhY2tJRUVFNzU0KHZhbHVlLCBtTGVuLCBuQnl0ZXMpIHtcbiAgdmFyIGJ1ZmZlciA9IG5ldyBBcnJheShuQnl0ZXMpO1xuICB2YXIgZUxlbiA9IG5CeXRlcyAqIDggLSBtTGVuIC0gMTtcbiAgdmFyIGVNYXggPSAoMSA8PCBlTGVuKSAtIDE7XG4gIHZhciBlQmlhcyA9IGVNYXggPj4gMTtcbiAgdmFyIHJ0ID0gbUxlbiA9PT0gMjMgPyBwb3coMiwgLTI0KSAtIHBvdygyLCAtNzcpIDogMDtcbiAgdmFyIGkgPSAwO1xuICB2YXIgcyA9IHZhbHVlIDwgMCB8fCB2YWx1ZSA9PT0gMCAmJiAxIC8gdmFsdWUgPCAwID8gMSA6IDA7XG4gIHZhciBlLCBtLCBjO1xuICB2YWx1ZSA9IGFicyh2YWx1ZSk7XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1zZWxmLWNvbXBhcmVcbiAgaWYgKHZhbHVlICE9IHZhbHVlIHx8IHZhbHVlID09PSBJbmZpbml0eSkge1xuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1zZWxmLWNvbXBhcmVcbiAgICBtID0gdmFsdWUgIT0gdmFsdWUgPyAxIDogMDtcbiAgICBlID0gZU1heDtcbiAgfSBlbHNlIHtcbiAgICBlID0gZmxvb3IobG9nKHZhbHVlKSAvIExOMik7XG4gICAgaWYgKHZhbHVlICogKGMgPSBwb3coMiwgLWUpKSA8IDEpIHtcbiAgICAgIGUtLTtcbiAgICAgIGMgKj0gMjtcbiAgICB9XG4gICAgaWYgKGUgKyBlQmlhcyA+PSAxKSB7XG4gICAgICB2YWx1ZSArPSBydCAvIGM7XG4gICAgfSBlbHNlIHtcbiAgICAgIHZhbHVlICs9IHJ0ICogcG93KDIsIDEgLSBlQmlhcyk7XG4gICAgfVxuICAgIGlmICh2YWx1ZSAqIGMgPj0gMikge1xuICAgICAgZSsrO1xuICAgICAgYyAvPSAyO1xuICAgIH1cbiAgICBpZiAoZSArIGVCaWFzID49IGVNYXgpIHtcbiAgICAgIG0gPSAwO1xuICAgICAgZSA9IGVNYXg7XG4gICAgfSBlbHNlIGlmIChlICsgZUJpYXMgPj0gMSkge1xuICAgICAgbSA9ICh2YWx1ZSAqIGMgLSAxKSAqIHBvdygyLCBtTGVuKTtcbiAgICAgIGUgPSBlICsgZUJpYXM7XG4gICAgfSBlbHNlIHtcbiAgICAgIG0gPSB2YWx1ZSAqIHBvdygyLCBlQmlhcyAtIDEpICogcG93KDIsIG1MZW4pO1xuICAgICAgZSA9IDA7XG4gICAgfVxuICB9XG4gIGZvciAoOyBtTGVuID49IDg7IGJ1ZmZlcltpKytdID0gbSAmIDI1NSwgbSAvPSAyNTYsIG1MZW4gLT0gOCk7XG4gIGUgPSBlIDw8IG1MZW4gfCBtO1xuICBlTGVuICs9IG1MZW47XG4gIGZvciAoOyBlTGVuID4gMDsgYnVmZmVyW2krK10gPSBlICYgMjU1LCBlIC89IDI1NiwgZUxlbiAtPSA4KTtcbiAgYnVmZmVyWy0taV0gfD0gcyAqIDEyODtcbiAgcmV0dXJuIGJ1ZmZlcjtcbn1cbmZ1bmN0aW9uIHVucGFja0lFRUU3NTQoYnVmZmVyLCBtTGVuLCBuQnl0ZXMpIHtcbiAgdmFyIGVMZW4gPSBuQnl0ZXMgKiA4IC0gbUxlbiAtIDE7XG4gIHZhciBlTWF4ID0gKDEgPDwgZUxlbikgLSAxO1xuICB2YXIgZUJpYXMgPSBlTWF4ID4+IDE7XG4gIHZhciBuQml0cyA9IGVMZW4gLSA3O1xuICB2YXIgaSA9IG5CeXRlcyAtIDE7XG4gIHZhciBzID0gYnVmZmVyW2ktLV07XG4gIHZhciBlID0gcyAmIDEyNztcbiAgdmFyIG07XG4gIHMgPj49IDc7XG4gIGZvciAoOyBuQml0cyA+IDA7IGUgPSBlICogMjU2ICsgYnVmZmVyW2ldLCBpLS0sIG5CaXRzIC09IDgpO1xuICBtID0gZSAmICgxIDw8IC1uQml0cykgLSAxO1xuICBlID4+PSAtbkJpdHM7XG4gIG5CaXRzICs9IG1MZW47XG4gIGZvciAoOyBuQml0cyA+IDA7IG0gPSBtICogMjU2ICsgYnVmZmVyW2ldLCBpLS0sIG5CaXRzIC09IDgpO1xuICBpZiAoZSA9PT0gMCkge1xuICAgIGUgPSAxIC0gZUJpYXM7XG4gIH0gZWxzZSBpZiAoZSA9PT0gZU1heCkge1xuICAgIHJldHVybiBtID8gTmFOIDogcyA/IC1JbmZpbml0eSA6IEluZmluaXR5O1xuICB9IGVsc2Uge1xuICAgIG0gPSBtICsgcG93KDIsIG1MZW4pO1xuICAgIGUgPSBlIC0gZUJpYXM7XG4gIH0gcmV0dXJuIChzID8gLTEgOiAxKSAqIG0gKiBwb3coMiwgZSAtIG1MZW4pO1xufVxuXG5mdW5jdGlvbiB1bnBhY2tJMzIoYnl0ZXMpIHtcbiAgcmV0dXJuIGJ5dGVzWzNdIDw8IDI0IHwgYnl0ZXNbMl0gPDwgMTYgfCBieXRlc1sxXSA8PCA4IHwgYnl0ZXNbMF07XG59XG5mdW5jdGlvbiBwYWNrSTgoaXQpIHtcbiAgcmV0dXJuIFtpdCAmIDB4ZmZdO1xufVxuZnVuY3Rpb24gcGFja0kxNihpdCkge1xuICByZXR1cm4gW2l0ICYgMHhmZiwgaXQgPj4gOCAmIDB4ZmZdO1xufVxuZnVuY3Rpb24gcGFja0kzMihpdCkge1xuICByZXR1cm4gW2l0ICYgMHhmZiwgaXQgPj4gOCAmIDB4ZmYsIGl0ID4+IDE2ICYgMHhmZiwgaXQgPj4gMjQgJiAweGZmXTtcbn1cbmZ1bmN0aW9uIHBhY2tGNjQoaXQpIHtcbiAgcmV0dXJuIHBhY2tJRUVFNzU0KGl0LCA1MiwgOCk7XG59XG5mdW5jdGlvbiBwYWNrRjMyKGl0KSB7XG4gIHJldHVybiBwYWNrSUVFRTc1NChpdCwgMjMsIDQpO1xufVxuXG5mdW5jdGlvbiBhZGRHZXR0ZXIoQywga2V5LCBpbnRlcm5hbCkge1xuICBkUChDW1BST1RPVFlQRV0sIGtleSwgeyBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHRoaXNbaW50ZXJuYWxdOyB9IH0pO1xufVxuXG5mdW5jdGlvbiBnZXQodmlldywgYnl0ZXMsIGluZGV4LCBpc0xpdHRsZUVuZGlhbikge1xuICB2YXIgbnVtSW5kZXggPSAraW5kZXg7XG4gIHZhciBpbnRJbmRleCA9IHRvSW5kZXgobnVtSW5kZXgpO1xuICBpZiAoaW50SW5kZXggKyBieXRlcyA+IHZpZXdbJExFTkdUSF0pIHRocm93IFJhbmdlRXJyb3IoV1JPTkdfSU5ERVgpO1xuICB2YXIgc3RvcmUgPSB2aWV3WyRCVUZGRVJdLl9iO1xuICB2YXIgc3RhcnQgPSBpbnRJbmRleCArIHZpZXdbJE9GRlNFVF07XG4gIHZhciBwYWNrID0gc3RvcmUuc2xpY2Uoc3RhcnQsIHN0YXJ0ICsgYnl0ZXMpO1xuICByZXR1cm4gaXNMaXR0bGVFbmRpYW4gPyBwYWNrIDogcGFjay5yZXZlcnNlKCk7XG59XG5mdW5jdGlvbiBzZXQodmlldywgYnl0ZXMsIGluZGV4LCBjb252ZXJzaW9uLCB2YWx1ZSwgaXNMaXR0bGVFbmRpYW4pIHtcbiAgdmFyIG51bUluZGV4ID0gK2luZGV4O1xuICB2YXIgaW50SW5kZXggPSB0b0luZGV4KG51bUluZGV4KTtcbiAgaWYgKGludEluZGV4ICsgYnl0ZXMgPiB2aWV3WyRMRU5HVEhdKSB0aHJvdyBSYW5nZUVycm9yKFdST05HX0lOREVYKTtcbiAgdmFyIHN0b3JlID0gdmlld1skQlVGRkVSXS5fYjtcbiAgdmFyIHN0YXJ0ID0gaW50SW5kZXggKyB2aWV3WyRPRkZTRVRdO1xuICB2YXIgcGFjayA9IGNvbnZlcnNpb24oK3ZhbHVlKTtcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBieXRlczsgaSsrKSBzdG9yZVtzdGFydCArIGldID0gcGFja1tpc0xpdHRsZUVuZGlhbiA/IGkgOiBieXRlcyAtIGkgLSAxXTtcbn1cblxuaWYgKCEkdHlwZWQuQUJWKSB7XG4gICRBcnJheUJ1ZmZlciA9IGZ1bmN0aW9uIEFycmF5QnVmZmVyKGxlbmd0aCkge1xuICAgIGFuSW5zdGFuY2UodGhpcywgJEFycmF5QnVmZmVyLCBBUlJBWV9CVUZGRVIpO1xuICAgIHZhciBieXRlTGVuZ3RoID0gdG9JbmRleChsZW5ndGgpO1xuICAgIHRoaXMuX2IgPSBhcnJheUZpbGwuY2FsbChuZXcgQXJyYXkoYnl0ZUxlbmd0aCksIDApO1xuICAgIHRoaXNbJExFTkdUSF0gPSBieXRlTGVuZ3RoO1xuICB9O1xuXG4gICREYXRhVmlldyA9IGZ1bmN0aW9uIERhdGFWaWV3KGJ1ZmZlciwgYnl0ZU9mZnNldCwgYnl0ZUxlbmd0aCkge1xuICAgIGFuSW5zdGFuY2UodGhpcywgJERhdGFWaWV3LCBEQVRBX1ZJRVcpO1xuICAgIGFuSW5zdGFuY2UoYnVmZmVyLCAkQXJyYXlCdWZmZXIsIERBVEFfVklFVyk7XG4gICAgdmFyIGJ1ZmZlckxlbmd0aCA9IGJ1ZmZlclskTEVOR1RIXTtcbiAgICB2YXIgb2Zmc2V0ID0gdG9JbnRlZ2VyKGJ5dGVPZmZzZXQpO1xuICAgIGlmIChvZmZzZXQgPCAwIHx8IG9mZnNldCA+IGJ1ZmZlckxlbmd0aCkgdGhyb3cgUmFuZ2VFcnJvcignV3Jvbmcgb2Zmc2V0IScpO1xuICAgIGJ5dGVMZW5ndGggPSBieXRlTGVuZ3RoID09PSB1bmRlZmluZWQgPyBidWZmZXJMZW5ndGggLSBvZmZzZXQgOiB0b0xlbmd0aChieXRlTGVuZ3RoKTtcbiAgICBpZiAob2Zmc2V0ICsgYnl0ZUxlbmd0aCA+IGJ1ZmZlckxlbmd0aCkgdGhyb3cgUmFuZ2VFcnJvcihXUk9OR19MRU5HVEgpO1xuICAgIHRoaXNbJEJVRkZFUl0gPSBidWZmZXI7XG4gICAgdGhpc1skT0ZGU0VUXSA9IG9mZnNldDtcbiAgICB0aGlzWyRMRU5HVEhdID0gYnl0ZUxlbmd0aDtcbiAgfTtcblxuICBpZiAoREVTQ1JJUFRPUlMpIHtcbiAgICBhZGRHZXR0ZXIoJEFycmF5QnVmZmVyLCBCWVRFX0xFTkdUSCwgJ19sJyk7XG4gICAgYWRkR2V0dGVyKCREYXRhVmlldywgQlVGRkVSLCAnX2InKTtcbiAgICBhZGRHZXR0ZXIoJERhdGFWaWV3LCBCWVRFX0xFTkdUSCwgJ19sJyk7XG4gICAgYWRkR2V0dGVyKCREYXRhVmlldywgQllURV9PRkZTRVQsICdfbycpO1xuICB9XG5cbiAgcmVkZWZpbmVBbGwoJERhdGFWaWV3W1BST1RPVFlQRV0sIHtcbiAgICBnZXRJbnQ4OiBmdW5jdGlvbiBnZXRJbnQ4KGJ5dGVPZmZzZXQpIHtcbiAgICAgIHJldHVybiBnZXQodGhpcywgMSwgYnl0ZU9mZnNldClbMF0gPDwgMjQgPj4gMjQ7XG4gICAgfSxcbiAgICBnZXRVaW50ODogZnVuY3Rpb24gZ2V0VWludDgoYnl0ZU9mZnNldCkge1xuICAgICAgcmV0dXJuIGdldCh0aGlzLCAxLCBieXRlT2Zmc2V0KVswXTtcbiAgICB9LFxuICAgIGdldEludDE2OiBmdW5jdGlvbiBnZXRJbnQxNihieXRlT2Zmc2V0IC8qICwgbGl0dGxlRW5kaWFuICovKSB7XG4gICAgICB2YXIgYnl0ZXMgPSBnZXQodGhpcywgMiwgYnl0ZU9mZnNldCwgYXJndW1lbnRzWzFdKTtcbiAgICAgIHJldHVybiAoYnl0ZXNbMV0gPDwgOCB8IGJ5dGVzWzBdKSA8PCAxNiA+PiAxNjtcbiAgICB9LFxuICAgIGdldFVpbnQxNjogZnVuY3Rpb24gZ2V0VWludDE2KGJ5dGVPZmZzZXQgLyogLCBsaXR0bGVFbmRpYW4gKi8pIHtcbiAgICAgIHZhciBieXRlcyA9IGdldCh0aGlzLCAyLCBieXRlT2Zmc2V0LCBhcmd1bWVudHNbMV0pO1xuICAgICAgcmV0dXJuIGJ5dGVzWzFdIDw8IDggfCBieXRlc1swXTtcbiAgICB9LFxuICAgIGdldEludDMyOiBmdW5jdGlvbiBnZXRJbnQzMihieXRlT2Zmc2V0IC8qICwgbGl0dGxlRW5kaWFuICovKSB7XG4gICAgICByZXR1cm4gdW5wYWNrSTMyKGdldCh0aGlzLCA0LCBieXRlT2Zmc2V0LCBhcmd1bWVudHNbMV0pKTtcbiAgICB9LFxuICAgIGdldFVpbnQzMjogZnVuY3Rpb24gZ2V0VWludDMyKGJ5dGVPZmZzZXQgLyogLCBsaXR0bGVFbmRpYW4gKi8pIHtcbiAgICAgIHJldHVybiB1bnBhY2tJMzIoZ2V0KHRoaXMsIDQsIGJ5dGVPZmZzZXQsIGFyZ3VtZW50c1sxXSkpID4+PiAwO1xuICAgIH0sXG4gICAgZ2V0RmxvYXQzMjogZnVuY3Rpb24gZ2V0RmxvYXQzMihieXRlT2Zmc2V0IC8qICwgbGl0dGxlRW5kaWFuICovKSB7XG4gICAgICByZXR1cm4gdW5wYWNrSUVFRTc1NChnZXQodGhpcywgNCwgYnl0ZU9mZnNldCwgYXJndW1lbnRzWzFdKSwgMjMsIDQpO1xuICAgIH0sXG4gICAgZ2V0RmxvYXQ2NDogZnVuY3Rpb24gZ2V0RmxvYXQ2NChieXRlT2Zmc2V0IC8qICwgbGl0dGxlRW5kaWFuICovKSB7XG4gICAgICByZXR1cm4gdW5wYWNrSUVFRTc1NChnZXQodGhpcywgOCwgYnl0ZU9mZnNldCwgYXJndW1lbnRzWzFdKSwgNTIsIDgpO1xuICAgIH0sXG4gICAgc2V0SW50ODogZnVuY3Rpb24gc2V0SW50OChieXRlT2Zmc2V0LCB2YWx1ZSkge1xuICAgICAgc2V0KHRoaXMsIDEsIGJ5dGVPZmZzZXQsIHBhY2tJOCwgdmFsdWUpO1xuICAgIH0sXG4gICAgc2V0VWludDg6IGZ1bmN0aW9uIHNldFVpbnQ4KGJ5dGVPZmZzZXQsIHZhbHVlKSB7XG4gICAgICBzZXQodGhpcywgMSwgYnl0ZU9mZnNldCwgcGFja0k4LCB2YWx1ZSk7XG4gICAgfSxcbiAgICBzZXRJbnQxNjogZnVuY3Rpb24gc2V0SW50MTYoYnl0ZU9mZnNldCwgdmFsdWUgLyogLCBsaXR0bGVFbmRpYW4gKi8pIHtcbiAgICAgIHNldCh0aGlzLCAyLCBieXRlT2Zmc2V0LCBwYWNrSTE2LCB2YWx1ZSwgYXJndW1lbnRzWzJdKTtcbiAgICB9LFxuICAgIHNldFVpbnQxNjogZnVuY3Rpb24gc2V0VWludDE2KGJ5dGVPZmZzZXQsIHZhbHVlIC8qICwgbGl0dGxlRW5kaWFuICovKSB7XG4gICAgICBzZXQodGhpcywgMiwgYnl0ZU9mZnNldCwgcGFja0kxNiwgdmFsdWUsIGFyZ3VtZW50c1syXSk7XG4gICAgfSxcbiAgICBzZXRJbnQzMjogZnVuY3Rpb24gc2V0SW50MzIoYnl0ZU9mZnNldCwgdmFsdWUgLyogLCBsaXR0bGVFbmRpYW4gKi8pIHtcbiAgICAgIHNldCh0aGlzLCA0LCBieXRlT2Zmc2V0LCBwYWNrSTMyLCB2YWx1ZSwgYXJndW1lbnRzWzJdKTtcbiAgICB9LFxuICAgIHNldFVpbnQzMjogZnVuY3Rpb24gc2V0VWludDMyKGJ5dGVPZmZzZXQsIHZhbHVlIC8qICwgbGl0dGxlRW5kaWFuICovKSB7XG4gICAgICBzZXQodGhpcywgNCwgYnl0ZU9mZnNldCwgcGFja0kzMiwgdmFsdWUsIGFyZ3VtZW50c1syXSk7XG4gICAgfSxcbiAgICBzZXRGbG9hdDMyOiBmdW5jdGlvbiBzZXRGbG9hdDMyKGJ5dGVPZmZzZXQsIHZhbHVlIC8qICwgbGl0dGxlRW5kaWFuICovKSB7XG4gICAgICBzZXQodGhpcywgNCwgYnl0ZU9mZnNldCwgcGFja0YzMiwgdmFsdWUsIGFyZ3VtZW50c1syXSk7XG4gICAgfSxcbiAgICBzZXRGbG9hdDY0OiBmdW5jdGlvbiBzZXRGbG9hdDY0KGJ5dGVPZmZzZXQsIHZhbHVlIC8qICwgbGl0dGxlRW5kaWFuICovKSB7XG4gICAgICBzZXQodGhpcywgOCwgYnl0ZU9mZnNldCwgcGFja0Y2NCwgdmFsdWUsIGFyZ3VtZW50c1syXSk7XG4gICAgfVxuICB9KTtcbn0gZWxzZSB7XG4gIGlmICghZmFpbHMoZnVuY3Rpb24gKCkge1xuICAgICRBcnJheUJ1ZmZlcigxKTtcbiAgfSkgfHwgIWZhaWxzKGZ1bmN0aW9uICgpIHtcbiAgICBuZXcgJEFycmF5QnVmZmVyKC0xKTsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby1uZXdcbiAgfSkgfHwgZmFpbHMoZnVuY3Rpb24gKCkge1xuICAgIG5ldyAkQXJyYXlCdWZmZXIoKTsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby1uZXdcbiAgICBuZXcgJEFycmF5QnVmZmVyKDEuNSk7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tbmV3XG4gICAgbmV3ICRBcnJheUJ1ZmZlcihOYU4pOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLW5ld1xuICAgIHJldHVybiAkQXJyYXlCdWZmZXIubmFtZSAhPSBBUlJBWV9CVUZGRVI7XG4gIH0pKSB7XG4gICAgJEFycmF5QnVmZmVyID0gZnVuY3Rpb24gQXJyYXlCdWZmZXIobGVuZ3RoKSB7XG4gICAgICBhbkluc3RhbmNlKHRoaXMsICRBcnJheUJ1ZmZlcik7XG4gICAgICByZXR1cm4gbmV3IEJhc2VCdWZmZXIodG9JbmRleChsZW5ndGgpKTtcbiAgICB9O1xuICAgIHZhciBBcnJheUJ1ZmZlclByb3RvID0gJEFycmF5QnVmZmVyW1BST1RPVFlQRV0gPSBCYXNlQnVmZmVyW1BST1RPVFlQRV07XG4gICAgZm9yICh2YXIga2V5cyA9IGdPUE4oQmFzZUJ1ZmZlciksIGogPSAwLCBrZXk7IGtleXMubGVuZ3RoID4gajspIHtcbiAgICAgIGlmICghKChrZXkgPSBrZXlzW2orK10pIGluICRBcnJheUJ1ZmZlcikpIGhpZGUoJEFycmF5QnVmZmVyLCBrZXksIEJhc2VCdWZmZXJba2V5XSk7XG4gICAgfVxuICAgIGlmICghTElCUkFSWSkgQXJyYXlCdWZmZXJQcm90by5jb25zdHJ1Y3RvciA9ICRBcnJheUJ1ZmZlcjtcbiAgfVxuICAvLyBpT1MgU2FmYXJpIDcueCBidWdcbiAgdmFyIHZpZXcgPSBuZXcgJERhdGFWaWV3KG5ldyAkQXJyYXlCdWZmZXIoMikpO1xuICB2YXIgJHNldEludDggPSAkRGF0YVZpZXdbUFJPVE9UWVBFXS5zZXRJbnQ4O1xuICB2aWV3LnNldEludDgoMCwgMjE0NzQ4MzY0OCk7XG4gIHZpZXcuc2V0SW50OCgxLCAyMTQ3NDgzNjQ5KTtcbiAgaWYgKHZpZXcuZ2V0SW50OCgwKSB8fCAhdmlldy5nZXRJbnQ4KDEpKSByZWRlZmluZUFsbCgkRGF0YVZpZXdbUFJPVE9UWVBFXSwge1xuICAgIHNldEludDg6IGZ1bmN0aW9uIHNldEludDgoYnl0ZU9mZnNldCwgdmFsdWUpIHtcbiAgICAgICRzZXRJbnQ4LmNhbGwodGhpcywgYnl0ZU9mZnNldCwgdmFsdWUgPDwgMjQgPj4gMjQpO1xuICAgIH0sXG4gICAgc2V0VWludDg6IGZ1bmN0aW9uIHNldFVpbnQ4KGJ5dGVPZmZzZXQsIHZhbHVlKSB7XG4gICAgICAkc2V0SW50OC5jYWxsKHRoaXMsIGJ5dGVPZmZzZXQsIHZhbHVlIDw8IDI0ID4+IDI0KTtcbiAgICB9XG4gIH0sIHRydWUpO1xufVxuc2V0VG9TdHJpbmdUYWcoJEFycmF5QnVmZmVyLCBBUlJBWV9CVUZGRVIpO1xuc2V0VG9TdHJpbmdUYWcoJERhdGFWaWV3LCBEQVRBX1ZJRVcpO1xuaGlkZSgkRGF0YVZpZXdbUFJPVE9UWVBFXSwgJHR5cGVkLlZJRVcsIHRydWUpO1xuZXhwb3J0c1tBUlJBWV9CVUZGRVJdID0gJEFycmF5QnVmZmVyO1xuZXhwb3J0c1tEQVRBX1ZJRVddID0gJERhdGFWaWV3O1xuIiwidmFyIGdsb2JhbCA9IHJlcXVpcmUoJy4vX2dsb2JhbCcpO1xudmFyIGhpZGUgPSByZXF1aXJlKCcuL19oaWRlJyk7XG52YXIgdWlkID0gcmVxdWlyZSgnLi9fdWlkJyk7XG52YXIgVFlQRUQgPSB1aWQoJ3R5cGVkX2FycmF5Jyk7XG52YXIgVklFVyA9IHVpZCgndmlldycpO1xudmFyIEFCViA9ICEhKGdsb2JhbC5BcnJheUJ1ZmZlciAmJiBnbG9iYWwuRGF0YVZpZXcpO1xudmFyIENPTlNUUiA9IEFCVjtcbnZhciBpID0gMDtcbnZhciBsID0gOTtcbnZhciBUeXBlZDtcblxudmFyIFR5cGVkQXJyYXlDb25zdHJ1Y3RvcnMgPSAoXG4gICdJbnQ4QXJyYXksVWludDhBcnJheSxVaW50OENsYW1wZWRBcnJheSxJbnQxNkFycmF5LFVpbnQxNkFycmF5LEludDMyQXJyYXksVWludDMyQXJyYXksRmxvYXQzMkFycmF5LEZsb2F0NjRBcnJheSdcbikuc3BsaXQoJywnKTtcblxud2hpbGUgKGkgPCBsKSB7XG4gIGlmIChUeXBlZCA9IGdsb2JhbFtUeXBlZEFycmF5Q29uc3RydWN0b3JzW2krK11dKSB7XG4gICAgaGlkZShUeXBlZC5wcm90b3R5cGUsIFRZUEVELCB0cnVlKTtcbiAgICBoaWRlKFR5cGVkLnByb3RvdHlwZSwgVklFVywgdHJ1ZSk7XG4gIH0gZWxzZSBDT05TVFIgPSBmYWxzZTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIEFCVjogQUJWLFxuICBDT05TVFI6IENPTlNUUixcbiAgVFlQRUQ6IFRZUEVELFxuICBWSUVXOiBWSUVXXG59O1xuIiwidmFyIGlkID0gMDtcbnZhciBweCA9IE1hdGgucmFuZG9tKCk7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChrZXkpIHtcbiAgcmV0dXJuICdTeW1ib2woJy5jb25jYXQoa2V5ID09PSB1bmRlZmluZWQgPyAnJyA6IGtleSwgJylfJywgKCsraWQgKyBweCkudG9TdHJpbmcoMzYpKTtcbn07XG4iLCJ2YXIgZ2xvYmFsID0gcmVxdWlyZSgnLi9fZ2xvYmFsJyk7XG52YXIgbmF2aWdhdG9yID0gZ2xvYmFsLm5hdmlnYXRvcjtcblxubW9kdWxlLmV4cG9ydHMgPSBuYXZpZ2F0b3IgJiYgbmF2aWdhdG9yLnVzZXJBZ2VudCB8fCAnJztcbiIsInZhciBpc09iamVjdCA9IHJlcXVpcmUoJy4vX2lzLW9iamVjdCcpO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXQsIFRZUEUpIHtcbiAgaWYgKCFpc09iamVjdChpdCkgfHwgaXQuX3QgIT09IFRZUEUpIHRocm93IFR5cGVFcnJvcignSW5jb21wYXRpYmxlIHJlY2VpdmVyLCAnICsgVFlQRSArICcgcmVxdWlyZWQhJyk7XG4gIHJldHVybiBpdDtcbn07XG4iLCJ2YXIgZ2xvYmFsID0gcmVxdWlyZSgnLi9fZ2xvYmFsJyk7XG52YXIgY29yZSA9IHJlcXVpcmUoJy4vX2NvcmUnKTtcbnZhciBMSUJSQVJZID0gcmVxdWlyZSgnLi9fbGlicmFyeScpO1xudmFyIHdrc0V4dCA9IHJlcXVpcmUoJy4vX3drcy1leHQnKTtcbnZhciBkZWZpbmVQcm9wZXJ0eSA9IHJlcXVpcmUoJy4vX29iamVjdC1kcCcpLmY7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChuYW1lKSB7XG4gIHZhciAkU3ltYm9sID0gY29yZS5TeW1ib2wgfHwgKGNvcmUuU3ltYm9sID0gTElCUkFSWSA/IHt9IDogZ2xvYmFsLlN5bWJvbCB8fCB7fSk7XG4gIGlmIChuYW1lLmNoYXJBdCgwKSAhPSAnXycgJiYgIShuYW1lIGluICRTeW1ib2wpKSBkZWZpbmVQcm9wZXJ0eSgkU3ltYm9sLCBuYW1lLCB7IHZhbHVlOiB3a3NFeHQuZihuYW1lKSB9KTtcbn07XG4iLCJleHBvcnRzLmYgPSByZXF1aXJlKCcuL193a3MnKTtcbiIsInZhciBzdG9yZSA9IHJlcXVpcmUoJy4vX3NoYXJlZCcpKCd3a3MnKTtcbnZhciB1aWQgPSByZXF1aXJlKCcuL191aWQnKTtcbnZhciBTeW1ib2wgPSByZXF1aXJlKCcuL19nbG9iYWwnKS5TeW1ib2w7XG52YXIgVVNFX1NZTUJPTCA9IHR5cGVvZiBTeW1ib2wgPT0gJ2Z1bmN0aW9uJztcblxudmFyICRleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAobmFtZSkge1xuICByZXR1cm4gc3RvcmVbbmFtZV0gfHwgKHN0b3JlW25hbWVdID1cbiAgICBVU0VfU1lNQk9MICYmIFN5bWJvbFtuYW1lXSB8fCAoVVNFX1NZTUJPTCA/IFN5bWJvbCA6IHVpZCkoJ1N5bWJvbC4nICsgbmFtZSkpO1xufTtcblxuJGV4cG9ydHMuc3RvcmUgPSBzdG9yZTtcbiIsInZhciBjbGFzc29mID0gcmVxdWlyZSgnLi9fY2xhc3NvZicpO1xudmFyIElURVJBVE9SID0gcmVxdWlyZSgnLi9fd2tzJykoJ2l0ZXJhdG9yJyk7XG52YXIgSXRlcmF0b3JzID0gcmVxdWlyZSgnLi9faXRlcmF0b3JzJyk7XG5tb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vX2NvcmUnKS5nZXRJdGVyYXRvck1ldGhvZCA9IGZ1bmN0aW9uIChpdCkge1xuICBpZiAoaXQgIT0gdW5kZWZpbmVkKSByZXR1cm4gaXRbSVRFUkFUT1JdXG4gICAgfHwgaXRbJ0BAaXRlcmF0b3InXVxuICAgIHx8IEl0ZXJhdG9yc1tjbGFzc29mKGl0KV07XG59O1xuIiwiLy8gMjIuMS4zLjMgQXJyYXkucHJvdG90eXBlLmNvcHlXaXRoaW4odGFyZ2V0LCBzdGFydCwgZW5kID0gdGhpcy5sZW5ndGgpXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xuXG4kZXhwb3J0KCRleHBvcnQuUCwgJ0FycmF5JywgeyBjb3B5V2l0aGluOiByZXF1aXJlKCcuL19hcnJheS1jb3B5LXdpdGhpbicpIH0pO1xuXG5yZXF1aXJlKCcuL19hZGQtdG8tdW5zY29wYWJsZXMnKSgnY29weVdpdGhpbicpO1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciAkZXZlcnkgPSByZXF1aXJlKCcuL19hcnJheS1tZXRob2RzJykoNCk7XG5cbiRleHBvcnQoJGV4cG9ydC5QICsgJGV4cG9ydC5GICogIXJlcXVpcmUoJy4vX3N0cmljdC1tZXRob2QnKShbXS5ldmVyeSwgdHJ1ZSksICdBcnJheScsIHtcbiAgLy8gMjIuMS4zLjUgLyAxNS40LjQuMTYgQXJyYXkucHJvdG90eXBlLmV2ZXJ5KGNhbGxiYWNrZm4gWywgdGhpc0FyZ10pXG4gIGV2ZXJ5OiBmdW5jdGlvbiBldmVyeShjYWxsYmFja2ZuIC8qICwgdGhpc0FyZyAqLykge1xuICAgIHJldHVybiAkZXZlcnkodGhpcywgY2FsbGJhY2tmbiwgYXJndW1lbnRzWzFdKTtcbiAgfVxufSk7XG4iLCIvLyAyMi4xLjMuNiBBcnJheS5wcm90b3R5cGUuZmlsbCh2YWx1ZSwgc3RhcnQgPSAwLCBlbmQgPSB0aGlzLmxlbmd0aClcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG5cbiRleHBvcnQoJGV4cG9ydC5QLCAnQXJyYXknLCB7IGZpbGw6IHJlcXVpcmUoJy4vX2FycmF5LWZpbGwnKSB9KTtcblxucmVxdWlyZSgnLi9fYWRkLXRvLXVuc2NvcGFibGVzJykoJ2ZpbGwnKTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgJGZpbHRlciA9IHJlcXVpcmUoJy4vX2FycmF5LW1ldGhvZHMnKSgyKTtcblxuJGV4cG9ydCgkZXhwb3J0LlAgKyAkZXhwb3J0LkYgKiAhcmVxdWlyZSgnLi9fc3RyaWN0LW1ldGhvZCcpKFtdLmZpbHRlciwgdHJ1ZSksICdBcnJheScsIHtcbiAgLy8gMjIuMS4zLjcgLyAxNS40LjQuMjAgQXJyYXkucHJvdG90eXBlLmZpbHRlcihjYWxsYmFja2ZuIFssIHRoaXNBcmddKVxuICBmaWx0ZXI6IGZ1bmN0aW9uIGZpbHRlcihjYWxsYmFja2ZuIC8qICwgdGhpc0FyZyAqLykge1xuICAgIHJldHVybiAkZmlsdGVyKHRoaXMsIGNhbGxiYWNrZm4sIGFyZ3VtZW50c1sxXSk7XG4gIH1cbn0pO1xuIiwiJ3VzZSBzdHJpY3QnO1xuLy8gMjIuMS4zLjkgQXJyYXkucHJvdG90eXBlLmZpbmRJbmRleChwcmVkaWNhdGUsIHRoaXNBcmcgPSB1bmRlZmluZWQpXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyICRmaW5kID0gcmVxdWlyZSgnLi9fYXJyYXktbWV0aG9kcycpKDYpO1xudmFyIEtFWSA9ICdmaW5kSW5kZXgnO1xudmFyIGZvcmNlZCA9IHRydWU7XG4vLyBTaG91bGRuJ3Qgc2tpcCBob2xlc1xuaWYgKEtFWSBpbiBbXSkgQXJyYXkoMSlbS0VZXShmdW5jdGlvbiAoKSB7IGZvcmNlZCA9IGZhbHNlOyB9KTtcbiRleHBvcnQoJGV4cG9ydC5QICsgJGV4cG9ydC5GICogZm9yY2VkLCAnQXJyYXknLCB7XG4gIGZpbmRJbmRleDogZnVuY3Rpb24gZmluZEluZGV4KGNhbGxiYWNrZm4gLyogLCB0aGF0ID0gdW5kZWZpbmVkICovKSB7XG4gICAgcmV0dXJuICRmaW5kKHRoaXMsIGNhbGxiYWNrZm4sIGFyZ3VtZW50cy5sZW5ndGggPiAxID8gYXJndW1lbnRzWzFdIDogdW5kZWZpbmVkKTtcbiAgfVxufSk7XG5yZXF1aXJlKCcuL19hZGQtdG8tdW5zY29wYWJsZXMnKShLRVkpO1xuIiwiJ3VzZSBzdHJpY3QnO1xuLy8gMjIuMS4zLjggQXJyYXkucHJvdG90eXBlLmZpbmQocHJlZGljYXRlLCB0aGlzQXJnID0gdW5kZWZpbmVkKVxudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciAkZmluZCA9IHJlcXVpcmUoJy4vX2FycmF5LW1ldGhvZHMnKSg1KTtcbnZhciBLRVkgPSAnZmluZCc7XG52YXIgZm9yY2VkID0gdHJ1ZTtcbi8vIFNob3VsZG4ndCBza2lwIGhvbGVzXG5pZiAoS0VZIGluIFtdKSBBcnJheSgxKVtLRVldKGZ1bmN0aW9uICgpIHsgZm9yY2VkID0gZmFsc2U7IH0pO1xuJGV4cG9ydCgkZXhwb3J0LlAgKyAkZXhwb3J0LkYgKiBmb3JjZWQsICdBcnJheScsIHtcbiAgZmluZDogZnVuY3Rpb24gZmluZChjYWxsYmFja2ZuIC8qICwgdGhhdCA9IHVuZGVmaW5lZCAqLykge1xuICAgIHJldHVybiAkZmluZCh0aGlzLCBjYWxsYmFja2ZuLCBhcmd1bWVudHMubGVuZ3RoID4gMSA/IGFyZ3VtZW50c1sxXSA6IHVuZGVmaW5lZCk7XG4gIH1cbn0pO1xucmVxdWlyZSgnLi9fYWRkLXRvLXVuc2NvcGFibGVzJykoS0VZKTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgJGZvckVhY2ggPSByZXF1aXJlKCcuL19hcnJheS1tZXRob2RzJykoMCk7XG52YXIgU1RSSUNUID0gcmVxdWlyZSgnLi9fc3RyaWN0LW1ldGhvZCcpKFtdLmZvckVhY2gsIHRydWUpO1xuXG4kZXhwb3J0KCRleHBvcnQuUCArICRleHBvcnQuRiAqICFTVFJJQ1QsICdBcnJheScsIHtcbiAgLy8gMjIuMS4zLjEwIC8gMTUuNC40LjE4IEFycmF5LnByb3RvdHlwZS5mb3JFYWNoKGNhbGxiYWNrZm4gWywgdGhpc0FyZ10pXG4gIGZvckVhY2g6IGZ1bmN0aW9uIGZvckVhY2goY2FsbGJhY2tmbiAvKiAsIHRoaXNBcmcgKi8pIHtcbiAgICByZXR1cm4gJGZvckVhY2godGhpcywgY2FsbGJhY2tmbiwgYXJndW1lbnRzWzFdKTtcbiAgfVxufSk7XG4iLCIndXNlIHN0cmljdCc7XG52YXIgY3R4ID0gcmVxdWlyZSgnLi9fY3R4Jyk7XG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyIHRvT2JqZWN0ID0gcmVxdWlyZSgnLi9fdG8tb2JqZWN0Jyk7XG52YXIgY2FsbCA9IHJlcXVpcmUoJy4vX2l0ZXItY2FsbCcpO1xudmFyIGlzQXJyYXlJdGVyID0gcmVxdWlyZSgnLi9faXMtYXJyYXktaXRlcicpO1xudmFyIHRvTGVuZ3RoID0gcmVxdWlyZSgnLi9fdG8tbGVuZ3RoJyk7XG52YXIgY3JlYXRlUHJvcGVydHkgPSByZXF1aXJlKCcuL19jcmVhdGUtcHJvcGVydHknKTtcbnZhciBnZXRJdGVyRm4gPSByZXF1aXJlKCcuL2NvcmUuZ2V0LWl0ZXJhdG9yLW1ldGhvZCcpO1xuXG4kZXhwb3J0KCRleHBvcnQuUyArICRleHBvcnQuRiAqICFyZXF1aXJlKCcuL19pdGVyLWRldGVjdCcpKGZ1bmN0aW9uIChpdGVyKSB7IEFycmF5LmZyb20oaXRlcik7IH0pLCAnQXJyYXknLCB7XG4gIC8vIDIyLjEuMi4xIEFycmF5LmZyb20oYXJyYXlMaWtlLCBtYXBmbiA9IHVuZGVmaW5lZCwgdGhpc0FyZyA9IHVuZGVmaW5lZClcbiAgZnJvbTogZnVuY3Rpb24gZnJvbShhcnJheUxpa2UgLyogLCBtYXBmbiA9IHVuZGVmaW5lZCwgdGhpc0FyZyA9IHVuZGVmaW5lZCAqLykge1xuICAgIHZhciBPID0gdG9PYmplY3QoYXJyYXlMaWtlKTtcbiAgICB2YXIgQyA9IHR5cGVvZiB0aGlzID09ICdmdW5jdGlvbicgPyB0aGlzIDogQXJyYXk7XG4gICAgdmFyIGFMZW4gPSBhcmd1bWVudHMubGVuZ3RoO1xuICAgIHZhciBtYXBmbiA9IGFMZW4gPiAxID8gYXJndW1lbnRzWzFdIDogdW5kZWZpbmVkO1xuICAgIHZhciBtYXBwaW5nID0gbWFwZm4gIT09IHVuZGVmaW5lZDtcbiAgICB2YXIgaW5kZXggPSAwO1xuICAgIHZhciBpdGVyRm4gPSBnZXRJdGVyRm4oTyk7XG4gICAgdmFyIGxlbmd0aCwgcmVzdWx0LCBzdGVwLCBpdGVyYXRvcjtcbiAgICBpZiAobWFwcGluZykgbWFwZm4gPSBjdHgobWFwZm4sIGFMZW4gPiAyID8gYXJndW1lbnRzWzJdIDogdW5kZWZpbmVkLCAyKTtcbiAgICAvLyBpZiBvYmplY3QgaXNuJ3QgaXRlcmFibGUgb3IgaXQncyBhcnJheSB3aXRoIGRlZmF1bHQgaXRlcmF0b3IgLSB1c2Ugc2ltcGxlIGNhc2VcbiAgICBpZiAoaXRlckZuICE9IHVuZGVmaW5lZCAmJiAhKEMgPT0gQXJyYXkgJiYgaXNBcnJheUl0ZXIoaXRlckZuKSkpIHtcbiAgICAgIGZvciAoaXRlcmF0b3IgPSBpdGVyRm4uY2FsbChPKSwgcmVzdWx0ID0gbmV3IEMoKTsgIShzdGVwID0gaXRlcmF0b3IubmV4dCgpKS5kb25lOyBpbmRleCsrKSB7XG4gICAgICAgIGNyZWF0ZVByb3BlcnR5KHJlc3VsdCwgaW5kZXgsIG1hcHBpbmcgPyBjYWxsKGl0ZXJhdG9yLCBtYXBmbiwgW3N0ZXAudmFsdWUsIGluZGV4XSwgdHJ1ZSkgOiBzdGVwLnZhbHVlKTtcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgbGVuZ3RoID0gdG9MZW5ndGgoTy5sZW5ndGgpO1xuICAgICAgZm9yIChyZXN1bHQgPSBuZXcgQyhsZW5ndGgpOyBsZW5ndGggPiBpbmRleDsgaW5kZXgrKykge1xuICAgICAgICBjcmVhdGVQcm9wZXJ0eShyZXN1bHQsIGluZGV4LCBtYXBwaW5nID8gbWFwZm4oT1tpbmRleF0sIGluZGV4KSA6IE9baW5kZXhdKTtcbiAgICAgIH1cbiAgICB9XG4gICAgcmVzdWx0Lmxlbmd0aCA9IGluZGV4O1xuICAgIHJldHVybiByZXN1bHQ7XG4gIH1cbn0pO1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciAkaW5kZXhPZiA9IHJlcXVpcmUoJy4vX2FycmF5LWluY2x1ZGVzJykoZmFsc2UpO1xudmFyICRuYXRpdmUgPSBbXS5pbmRleE9mO1xudmFyIE5FR0FUSVZFX1pFUk8gPSAhISRuYXRpdmUgJiYgMSAvIFsxXS5pbmRleE9mKDEsIC0wKSA8IDA7XG5cbiRleHBvcnQoJGV4cG9ydC5QICsgJGV4cG9ydC5GICogKE5FR0FUSVZFX1pFUk8gfHwgIXJlcXVpcmUoJy4vX3N0cmljdC1tZXRob2QnKSgkbmF0aXZlKSksICdBcnJheScsIHtcbiAgLy8gMjIuMS4zLjExIC8gMTUuNC40LjE0IEFycmF5LnByb3RvdHlwZS5pbmRleE9mKHNlYXJjaEVsZW1lbnQgWywgZnJvbUluZGV4XSlcbiAgaW5kZXhPZjogZnVuY3Rpb24gaW5kZXhPZihzZWFyY2hFbGVtZW50IC8qICwgZnJvbUluZGV4ID0gMCAqLykge1xuICAgIHJldHVybiBORUdBVElWRV9aRVJPXG4gICAgICAvLyBjb252ZXJ0IC0wIHRvICswXG4gICAgICA/ICRuYXRpdmUuYXBwbHkodGhpcywgYXJndW1lbnRzKSB8fCAwXG4gICAgICA6ICRpbmRleE9mKHRoaXMsIHNlYXJjaEVsZW1lbnQsIGFyZ3VtZW50c1sxXSk7XG4gIH1cbn0pO1xuIiwiLy8gMjIuMS4yLjIgLyAxNS40LjMuMiBBcnJheS5pc0FycmF5KGFyZylcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG5cbiRleHBvcnQoJGV4cG9ydC5TLCAnQXJyYXknLCB7IGlzQXJyYXk6IHJlcXVpcmUoJy4vX2lzLWFycmF5JykgfSk7XG4iLCIndXNlIHN0cmljdCc7XG52YXIgYWRkVG9VbnNjb3BhYmxlcyA9IHJlcXVpcmUoJy4vX2FkZC10by11bnNjb3BhYmxlcycpO1xudmFyIHN0ZXAgPSByZXF1aXJlKCcuL19pdGVyLXN0ZXAnKTtcbnZhciBJdGVyYXRvcnMgPSByZXF1aXJlKCcuL19pdGVyYXRvcnMnKTtcbnZhciB0b0lPYmplY3QgPSByZXF1aXJlKCcuL190by1pb2JqZWN0Jyk7XG5cbi8vIDIyLjEuMy40IEFycmF5LnByb3RvdHlwZS5lbnRyaWVzKClcbi8vIDIyLjEuMy4xMyBBcnJheS5wcm90b3R5cGUua2V5cygpXG4vLyAyMi4xLjMuMjkgQXJyYXkucHJvdG90eXBlLnZhbHVlcygpXG4vLyAyMi4xLjMuMzAgQXJyYXkucHJvdG90eXBlW0BAaXRlcmF0b3JdKClcbm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9faXRlci1kZWZpbmUnKShBcnJheSwgJ0FycmF5JywgZnVuY3Rpb24gKGl0ZXJhdGVkLCBraW5kKSB7XG4gIHRoaXMuX3QgPSB0b0lPYmplY3QoaXRlcmF0ZWQpOyAvLyB0YXJnZXRcbiAgdGhpcy5faSA9IDA7ICAgICAgICAgICAgICAgICAgIC8vIG5leHQgaW5kZXhcbiAgdGhpcy5fayA9IGtpbmQ7ICAgICAgICAgICAgICAgIC8vIGtpbmRcbi8vIDIyLjEuNS4yLjEgJUFycmF5SXRlcmF0b3JQcm90b3R5cGUlLm5leHQoKVxufSwgZnVuY3Rpb24gKCkge1xuICB2YXIgTyA9IHRoaXMuX3Q7XG4gIHZhciBraW5kID0gdGhpcy5faztcbiAgdmFyIGluZGV4ID0gdGhpcy5faSsrO1xuICBpZiAoIU8gfHwgaW5kZXggPj0gTy5sZW5ndGgpIHtcbiAgICB0aGlzLl90ID0gdW5kZWZpbmVkO1xuICAgIHJldHVybiBzdGVwKDEpO1xuICB9XG4gIGlmIChraW5kID09ICdrZXlzJykgcmV0dXJuIHN0ZXAoMCwgaW5kZXgpO1xuICBpZiAoa2luZCA9PSAndmFsdWVzJykgcmV0dXJuIHN0ZXAoMCwgT1tpbmRleF0pO1xuICByZXR1cm4gc3RlcCgwLCBbaW5kZXgsIE9baW5kZXhdXSk7XG59LCAndmFsdWVzJyk7XG5cbi8vIGFyZ3VtZW50c0xpc3RbQEBpdGVyYXRvcl0gaXMgJUFycmF5UHJvdG9fdmFsdWVzJSAoOS40LjQuNiwgOS40LjQuNylcbkl0ZXJhdG9ycy5Bcmd1bWVudHMgPSBJdGVyYXRvcnMuQXJyYXk7XG5cbmFkZFRvVW5zY29wYWJsZXMoJ2tleXMnKTtcbmFkZFRvVW5zY29wYWJsZXMoJ3ZhbHVlcycpO1xuYWRkVG9VbnNjb3BhYmxlcygnZW50cmllcycpO1xuIiwiJ3VzZSBzdHJpY3QnO1xuLy8gMjIuMS4zLjEzIEFycmF5LnByb3RvdHlwZS5qb2luKHNlcGFyYXRvcilcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgdG9JT2JqZWN0ID0gcmVxdWlyZSgnLi9fdG8taW9iamVjdCcpO1xudmFyIGFycmF5Sm9pbiA9IFtdLmpvaW47XG5cbi8vIGZhbGxiYWNrIGZvciBub3QgYXJyYXktbGlrZSBzdHJpbmdzXG4kZXhwb3J0KCRleHBvcnQuUCArICRleHBvcnQuRiAqIChyZXF1aXJlKCcuL19pb2JqZWN0JykgIT0gT2JqZWN0IHx8ICFyZXF1aXJlKCcuL19zdHJpY3QtbWV0aG9kJykoYXJyYXlKb2luKSksICdBcnJheScsIHtcbiAgam9pbjogZnVuY3Rpb24gam9pbihzZXBhcmF0b3IpIHtcbiAgICByZXR1cm4gYXJyYXlKb2luLmNhbGwodG9JT2JqZWN0KHRoaXMpLCBzZXBhcmF0b3IgPT09IHVuZGVmaW5lZCA/ICcsJyA6IHNlcGFyYXRvcik7XG4gIH1cbn0pO1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciB0b0lPYmplY3QgPSByZXF1aXJlKCcuL190by1pb2JqZWN0Jyk7XG52YXIgdG9JbnRlZ2VyID0gcmVxdWlyZSgnLi9fdG8taW50ZWdlcicpO1xudmFyIHRvTGVuZ3RoID0gcmVxdWlyZSgnLi9fdG8tbGVuZ3RoJyk7XG52YXIgJG5hdGl2ZSA9IFtdLmxhc3RJbmRleE9mO1xudmFyIE5FR0FUSVZFX1pFUk8gPSAhISRuYXRpdmUgJiYgMSAvIFsxXS5sYXN0SW5kZXhPZigxLCAtMCkgPCAwO1xuXG4kZXhwb3J0KCRleHBvcnQuUCArICRleHBvcnQuRiAqIChORUdBVElWRV9aRVJPIHx8ICFyZXF1aXJlKCcuL19zdHJpY3QtbWV0aG9kJykoJG5hdGl2ZSkpLCAnQXJyYXknLCB7XG4gIC8vIDIyLjEuMy4xNCAvIDE1LjQuNC4xNSBBcnJheS5wcm90b3R5cGUubGFzdEluZGV4T2Yoc2VhcmNoRWxlbWVudCBbLCBmcm9tSW5kZXhdKVxuICBsYXN0SW5kZXhPZjogZnVuY3Rpb24gbGFzdEluZGV4T2Yoc2VhcmNoRWxlbWVudCAvKiAsIGZyb21JbmRleCA9IEBbKi0xXSAqLykge1xuICAgIC8vIGNvbnZlcnQgLTAgdG8gKzBcbiAgICBpZiAoTkVHQVRJVkVfWkVSTykgcmV0dXJuICRuYXRpdmUuYXBwbHkodGhpcywgYXJndW1lbnRzKSB8fCAwO1xuICAgIHZhciBPID0gdG9JT2JqZWN0KHRoaXMpO1xuICAgIHZhciBsZW5ndGggPSB0b0xlbmd0aChPLmxlbmd0aCk7XG4gICAgdmFyIGluZGV4ID0gbGVuZ3RoIC0gMTtcbiAgICBpZiAoYXJndW1lbnRzLmxlbmd0aCA+IDEpIGluZGV4ID0gTWF0aC5taW4oaW5kZXgsIHRvSW50ZWdlcihhcmd1bWVudHNbMV0pKTtcbiAgICBpZiAoaW5kZXggPCAwKSBpbmRleCA9IGxlbmd0aCArIGluZGV4O1xuICAgIGZvciAoO2luZGV4ID49IDA7IGluZGV4LS0pIGlmIChpbmRleCBpbiBPKSBpZiAoT1tpbmRleF0gPT09IHNlYXJjaEVsZW1lbnQpIHJldHVybiBpbmRleCB8fCAwO1xuICAgIHJldHVybiAtMTtcbiAgfVxufSk7XG4iLCIndXNlIHN0cmljdCc7XG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyICRtYXAgPSByZXF1aXJlKCcuL19hcnJheS1tZXRob2RzJykoMSk7XG5cbiRleHBvcnQoJGV4cG9ydC5QICsgJGV4cG9ydC5GICogIXJlcXVpcmUoJy4vX3N0cmljdC1tZXRob2QnKShbXS5tYXAsIHRydWUpLCAnQXJyYXknLCB7XG4gIC8vIDIyLjEuMy4xNSAvIDE1LjQuNC4xOSBBcnJheS5wcm90b3R5cGUubWFwKGNhbGxiYWNrZm4gWywgdGhpc0FyZ10pXG4gIG1hcDogZnVuY3Rpb24gbWFwKGNhbGxiYWNrZm4gLyogLCB0aGlzQXJnICovKSB7XG4gICAgcmV0dXJuICRtYXAodGhpcywgY2FsbGJhY2tmbiwgYXJndW1lbnRzWzFdKTtcbiAgfVxufSk7XG4iLCIndXNlIHN0cmljdCc7XG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyIGNyZWF0ZVByb3BlcnR5ID0gcmVxdWlyZSgnLi9fY3JlYXRlLXByb3BlcnR5Jyk7XG5cbi8vIFdlYktpdCBBcnJheS5vZiBpc24ndCBnZW5lcmljXG4kZXhwb3J0KCRleHBvcnQuUyArICRleHBvcnQuRiAqIHJlcXVpcmUoJy4vX2ZhaWxzJykoZnVuY3Rpb24gKCkge1xuICBmdW5jdGlvbiBGKCkgeyAvKiBlbXB0eSAqLyB9XG4gIHJldHVybiAhKEFycmF5Lm9mLmNhbGwoRikgaW5zdGFuY2VvZiBGKTtcbn0pLCAnQXJyYXknLCB7XG4gIC8vIDIyLjEuMi4zIEFycmF5Lm9mKCAuLi5pdGVtcylcbiAgb2Y6IGZ1bmN0aW9uIG9mKC8qIC4uLmFyZ3MgKi8pIHtcbiAgICB2YXIgaW5kZXggPSAwO1xuICAgIHZhciBhTGVuID0gYXJndW1lbnRzLmxlbmd0aDtcbiAgICB2YXIgcmVzdWx0ID0gbmV3ICh0eXBlb2YgdGhpcyA9PSAnZnVuY3Rpb24nID8gdGhpcyA6IEFycmF5KShhTGVuKTtcbiAgICB3aGlsZSAoYUxlbiA+IGluZGV4KSBjcmVhdGVQcm9wZXJ0eShyZXN1bHQsIGluZGV4LCBhcmd1bWVudHNbaW5kZXgrK10pO1xuICAgIHJlc3VsdC5sZW5ndGggPSBhTGVuO1xuICAgIHJldHVybiByZXN1bHQ7XG4gIH1cbn0pO1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciAkcmVkdWNlID0gcmVxdWlyZSgnLi9fYXJyYXktcmVkdWNlJyk7XG5cbiRleHBvcnQoJGV4cG9ydC5QICsgJGV4cG9ydC5GICogIXJlcXVpcmUoJy4vX3N0cmljdC1tZXRob2QnKShbXS5yZWR1Y2VSaWdodCwgdHJ1ZSksICdBcnJheScsIHtcbiAgLy8gMjIuMS4zLjE5IC8gMTUuNC40LjIyIEFycmF5LnByb3RvdHlwZS5yZWR1Y2VSaWdodChjYWxsYmFja2ZuIFssIGluaXRpYWxWYWx1ZV0pXG4gIHJlZHVjZVJpZ2h0OiBmdW5jdGlvbiByZWR1Y2VSaWdodChjYWxsYmFja2ZuIC8qICwgaW5pdGlhbFZhbHVlICovKSB7XG4gICAgcmV0dXJuICRyZWR1Y2UodGhpcywgY2FsbGJhY2tmbiwgYXJndW1lbnRzLmxlbmd0aCwgYXJndW1lbnRzWzFdLCB0cnVlKTtcbiAgfVxufSk7XG4iLCIndXNlIHN0cmljdCc7XG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyICRyZWR1Y2UgPSByZXF1aXJlKCcuL19hcnJheS1yZWR1Y2UnKTtcblxuJGV4cG9ydCgkZXhwb3J0LlAgKyAkZXhwb3J0LkYgKiAhcmVxdWlyZSgnLi9fc3RyaWN0LW1ldGhvZCcpKFtdLnJlZHVjZSwgdHJ1ZSksICdBcnJheScsIHtcbiAgLy8gMjIuMS4zLjE4IC8gMTUuNC40LjIxIEFycmF5LnByb3RvdHlwZS5yZWR1Y2UoY2FsbGJhY2tmbiBbLCBpbml0aWFsVmFsdWVdKVxuICByZWR1Y2U6IGZ1bmN0aW9uIHJlZHVjZShjYWxsYmFja2ZuIC8qICwgaW5pdGlhbFZhbHVlICovKSB7XG4gICAgcmV0dXJuICRyZWR1Y2UodGhpcywgY2FsbGJhY2tmbiwgYXJndW1lbnRzLmxlbmd0aCwgYXJndW1lbnRzWzFdLCBmYWxzZSk7XG4gIH1cbn0pO1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciBodG1sID0gcmVxdWlyZSgnLi9faHRtbCcpO1xudmFyIGNvZiA9IHJlcXVpcmUoJy4vX2NvZicpO1xudmFyIHRvQWJzb2x1dGVJbmRleCA9IHJlcXVpcmUoJy4vX3RvLWFic29sdXRlLWluZGV4Jyk7XG52YXIgdG9MZW5ndGggPSByZXF1aXJlKCcuL190by1sZW5ndGgnKTtcbnZhciBhcnJheVNsaWNlID0gW10uc2xpY2U7XG5cbi8vIGZhbGxiYWNrIGZvciBub3QgYXJyYXktbGlrZSBFUzMgc3RyaW5ncyBhbmQgRE9NIG9iamVjdHNcbiRleHBvcnQoJGV4cG9ydC5QICsgJGV4cG9ydC5GICogcmVxdWlyZSgnLi9fZmFpbHMnKShmdW5jdGlvbiAoKSB7XG4gIGlmIChodG1sKSBhcnJheVNsaWNlLmNhbGwoaHRtbCk7XG59KSwgJ0FycmF5Jywge1xuICBzbGljZTogZnVuY3Rpb24gc2xpY2UoYmVnaW4sIGVuZCkge1xuICAgIHZhciBsZW4gPSB0b0xlbmd0aCh0aGlzLmxlbmd0aCk7XG4gICAgdmFyIGtsYXNzID0gY29mKHRoaXMpO1xuICAgIGVuZCA9IGVuZCA9PT0gdW5kZWZpbmVkID8gbGVuIDogZW5kO1xuICAgIGlmIChrbGFzcyA9PSAnQXJyYXknKSByZXR1cm4gYXJyYXlTbGljZS5jYWxsKHRoaXMsIGJlZ2luLCBlbmQpO1xuICAgIHZhciBzdGFydCA9IHRvQWJzb2x1dGVJbmRleChiZWdpbiwgbGVuKTtcbiAgICB2YXIgdXBUbyA9IHRvQWJzb2x1dGVJbmRleChlbmQsIGxlbik7XG4gICAgdmFyIHNpemUgPSB0b0xlbmd0aCh1cFRvIC0gc3RhcnQpO1xuICAgIHZhciBjbG9uZWQgPSBuZXcgQXJyYXkoc2l6ZSk7XG4gICAgdmFyIGkgPSAwO1xuICAgIGZvciAoOyBpIDwgc2l6ZTsgaSsrKSBjbG9uZWRbaV0gPSBrbGFzcyA9PSAnU3RyaW5nJ1xuICAgICAgPyB0aGlzLmNoYXJBdChzdGFydCArIGkpXG4gICAgICA6IHRoaXNbc3RhcnQgKyBpXTtcbiAgICByZXR1cm4gY2xvbmVkO1xuICB9XG59KTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgJHNvbWUgPSByZXF1aXJlKCcuL19hcnJheS1tZXRob2RzJykoMyk7XG5cbiRleHBvcnQoJGV4cG9ydC5QICsgJGV4cG9ydC5GICogIXJlcXVpcmUoJy4vX3N0cmljdC1tZXRob2QnKShbXS5zb21lLCB0cnVlKSwgJ0FycmF5Jywge1xuICAvLyAyMi4xLjMuMjMgLyAxNS40LjQuMTcgQXJyYXkucHJvdG90eXBlLnNvbWUoY2FsbGJhY2tmbiBbLCB0aGlzQXJnXSlcbiAgc29tZTogZnVuY3Rpb24gc29tZShjYWxsYmFja2ZuIC8qICwgdGhpc0FyZyAqLykge1xuICAgIHJldHVybiAkc29tZSh0aGlzLCBjYWxsYmFja2ZuLCBhcmd1bWVudHNbMV0pO1xuICB9XG59KTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgYUZ1bmN0aW9uID0gcmVxdWlyZSgnLi9fYS1mdW5jdGlvbicpO1xudmFyIHRvT2JqZWN0ID0gcmVxdWlyZSgnLi9fdG8tb2JqZWN0Jyk7XG52YXIgZmFpbHMgPSByZXF1aXJlKCcuL19mYWlscycpO1xudmFyICRzb3J0ID0gW10uc29ydDtcbnZhciB0ZXN0ID0gWzEsIDIsIDNdO1xuXG4kZXhwb3J0KCRleHBvcnQuUCArICRleHBvcnQuRiAqIChmYWlscyhmdW5jdGlvbiAoKSB7XG4gIC8vIElFOC1cbiAgdGVzdC5zb3J0KHVuZGVmaW5lZCk7XG59KSB8fCAhZmFpbHMoZnVuY3Rpb24gKCkge1xuICAvLyBWOCBidWdcbiAgdGVzdC5zb3J0KG51bGwpO1xuICAvLyBPbGQgV2ViS2l0XG59KSB8fCAhcmVxdWlyZSgnLi9fc3RyaWN0LW1ldGhvZCcpKCRzb3J0KSksICdBcnJheScsIHtcbiAgLy8gMjIuMS4zLjI1IEFycmF5LnByb3RvdHlwZS5zb3J0KGNvbXBhcmVmbilcbiAgc29ydDogZnVuY3Rpb24gc29ydChjb21wYXJlZm4pIHtcbiAgICByZXR1cm4gY29tcGFyZWZuID09PSB1bmRlZmluZWRcbiAgICAgID8gJHNvcnQuY2FsbCh0b09iamVjdCh0aGlzKSlcbiAgICAgIDogJHNvcnQuY2FsbCh0b09iamVjdCh0aGlzKSwgYUZ1bmN0aW9uKGNvbXBhcmVmbikpO1xuICB9XG59KTtcbiIsInJlcXVpcmUoJy4vX3NldC1zcGVjaWVzJykoJ0FycmF5Jyk7XG4iLCIvLyAyMC4zLjMuMSAvIDE1LjkuNC40IERhdGUubm93KClcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG5cbiRleHBvcnQoJGV4cG9ydC5TLCAnRGF0ZScsIHsgbm93OiBmdW5jdGlvbiAoKSB7IHJldHVybiBuZXcgRGF0ZSgpLmdldFRpbWUoKTsgfSB9KTtcbiIsIi8vIDIwLjMuNC4zNiAvIDE1LjkuNS40MyBEYXRlLnByb3RvdHlwZS50b0lTT1N0cmluZygpXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyIHRvSVNPU3RyaW5nID0gcmVxdWlyZSgnLi9fZGF0ZS10by1pc28tc3RyaW5nJyk7XG5cbi8vIFBoYW50b21KUyAvIG9sZCBXZWJLaXQgaGFzIGEgYnJva2VuIGltcGxlbWVudGF0aW9uc1xuJGV4cG9ydCgkZXhwb3J0LlAgKyAkZXhwb3J0LkYgKiAoRGF0ZS5wcm90b3R5cGUudG9JU09TdHJpbmcgIT09IHRvSVNPU3RyaW5nKSwgJ0RhdGUnLCB7XG4gIHRvSVNPU3RyaW5nOiB0b0lTT1N0cmluZ1xufSk7XG4iLCIndXNlIHN0cmljdCc7XG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyIHRvT2JqZWN0ID0gcmVxdWlyZSgnLi9fdG8tb2JqZWN0Jyk7XG52YXIgdG9QcmltaXRpdmUgPSByZXF1aXJlKCcuL190by1wcmltaXRpdmUnKTtcblxuJGV4cG9ydCgkZXhwb3J0LlAgKyAkZXhwb3J0LkYgKiByZXF1aXJlKCcuL19mYWlscycpKGZ1bmN0aW9uICgpIHtcbiAgcmV0dXJuIG5ldyBEYXRlKE5hTikudG9KU09OKCkgIT09IG51bGxcbiAgICB8fCBEYXRlLnByb3RvdHlwZS50b0pTT04uY2FsbCh7IHRvSVNPU3RyaW5nOiBmdW5jdGlvbiAoKSB7IHJldHVybiAxOyB9IH0pICE9PSAxO1xufSksICdEYXRlJywge1xuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW51c2VkLXZhcnNcbiAgdG9KU09OOiBmdW5jdGlvbiB0b0pTT04oa2V5KSB7XG4gICAgdmFyIE8gPSB0b09iamVjdCh0aGlzKTtcbiAgICB2YXIgcHYgPSB0b1ByaW1pdGl2ZShPKTtcbiAgICByZXR1cm4gdHlwZW9mIHB2ID09ICdudW1iZXInICYmICFpc0Zpbml0ZShwdikgPyBudWxsIDogTy50b0lTT1N0cmluZygpO1xuICB9XG59KTtcbiIsInZhciBUT19QUklNSVRJVkUgPSByZXF1aXJlKCcuL193a3MnKSgndG9QcmltaXRpdmUnKTtcbnZhciBwcm90byA9IERhdGUucHJvdG90eXBlO1xuXG5pZiAoIShUT19QUklNSVRJVkUgaW4gcHJvdG8pKSByZXF1aXJlKCcuL19oaWRlJykocHJvdG8sIFRPX1BSSU1JVElWRSwgcmVxdWlyZSgnLi9fZGF0ZS10by1wcmltaXRpdmUnKSk7XG4iLCJ2YXIgRGF0ZVByb3RvID0gRGF0ZS5wcm90b3R5cGU7XG52YXIgSU5WQUxJRF9EQVRFID0gJ0ludmFsaWQgRGF0ZSc7XG52YXIgVE9fU1RSSU5HID0gJ3RvU3RyaW5nJztcbnZhciAkdG9TdHJpbmcgPSBEYXRlUHJvdG9bVE9fU1RSSU5HXTtcbnZhciBnZXRUaW1lID0gRGF0ZVByb3RvLmdldFRpbWU7XG5pZiAobmV3IERhdGUoTmFOKSArICcnICE9IElOVkFMSURfREFURSkge1xuICByZXF1aXJlKCcuL19yZWRlZmluZScpKERhdGVQcm90bywgVE9fU1RSSU5HLCBmdW5jdGlvbiB0b1N0cmluZygpIHtcbiAgICB2YXIgdmFsdWUgPSBnZXRUaW1lLmNhbGwodGhpcyk7XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXNlbGYtY29tcGFyZVxuICAgIHJldHVybiB2YWx1ZSA9PT0gdmFsdWUgPyAkdG9TdHJpbmcuY2FsbCh0aGlzKSA6IElOVkFMSURfREFURTtcbiAgfSk7XG59XG4iLCIvLyAxOS4yLjMuMiAvIDE1LjMuNC41IEZ1bmN0aW9uLnByb3RvdHlwZS5iaW5kKHRoaXNBcmcsIGFyZ3MuLi4pXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xuXG4kZXhwb3J0KCRleHBvcnQuUCwgJ0Z1bmN0aW9uJywgeyBiaW5kOiByZXF1aXJlKCcuL19iaW5kJykgfSk7XG4iLCIndXNlIHN0cmljdCc7XG52YXIgaXNPYmplY3QgPSByZXF1aXJlKCcuL19pcy1vYmplY3QnKTtcbnZhciBnZXRQcm90b3R5cGVPZiA9IHJlcXVpcmUoJy4vX29iamVjdC1ncG8nKTtcbnZhciBIQVNfSU5TVEFOQ0UgPSByZXF1aXJlKCcuL193a3MnKSgnaGFzSW5zdGFuY2UnKTtcbnZhciBGdW5jdGlvblByb3RvID0gRnVuY3Rpb24ucHJvdG90eXBlO1xuLy8gMTkuMi4zLjYgRnVuY3Rpb24ucHJvdG90eXBlW0BAaGFzSW5zdGFuY2VdKFYpXG5pZiAoIShIQVNfSU5TVEFOQ0UgaW4gRnVuY3Rpb25Qcm90bykpIHJlcXVpcmUoJy4vX29iamVjdC1kcCcpLmYoRnVuY3Rpb25Qcm90bywgSEFTX0lOU1RBTkNFLCB7IHZhbHVlOiBmdW5jdGlvbiAoTykge1xuICBpZiAodHlwZW9mIHRoaXMgIT0gJ2Z1bmN0aW9uJyB8fCAhaXNPYmplY3QoTykpIHJldHVybiBmYWxzZTtcbiAgaWYgKCFpc09iamVjdCh0aGlzLnByb3RvdHlwZSkpIHJldHVybiBPIGluc3RhbmNlb2YgdGhpcztcbiAgLy8gZm9yIGVudmlyb25tZW50IHcvbyBuYXRpdmUgYEBAaGFzSW5zdGFuY2VgIGxvZ2ljIGVub3VnaCBgaW5zdGFuY2VvZmAsIGJ1dCBhZGQgdGhpczpcbiAgd2hpbGUgKE8gPSBnZXRQcm90b3R5cGVPZihPKSkgaWYgKHRoaXMucHJvdG90eXBlID09PSBPKSByZXR1cm4gdHJ1ZTtcbiAgcmV0dXJuIGZhbHNlO1xufSB9KTtcbiIsInZhciBkUCA9IHJlcXVpcmUoJy4vX29iamVjdC1kcCcpLmY7XG52YXIgRlByb3RvID0gRnVuY3Rpb24ucHJvdG90eXBlO1xudmFyIG5hbWVSRSA9IC9eXFxzKmZ1bmN0aW9uIChbXiAoXSopLztcbnZhciBOQU1FID0gJ25hbWUnO1xuXG4vLyAxOS4yLjQuMiBuYW1lXG5OQU1FIGluIEZQcm90byB8fCByZXF1aXJlKCcuL19kZXNjcmlwdG9ycycpICYmIGRQKEZQcm90bywgTkFNRSwge1xuICBjb25maWd1cmFibGU6IHRydWUsXG4gIGdldDogZnVuY3Rpb24gKCkge1xuICAgIHRyeSB7XG4gICAgICByZXR1cm4gKCcnICsgdGhpcykubWF0Y2gobmFtZVJFKVsxXTtcbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICByZXR1cm4gJyc7XG4gICAgfVxuICB9XG59KTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciBzdHJvbmcgPSByZXF1aXJlKCcuL19jb2xsZWN0aW9uLXN0cm9uZycpO1xudmFyIHZhbGlkYXRlID0gcmVxdWlyZSgnLi9fdmFsaWRhdGUtY29sbGVjdGlvbicpO1xudmFyIE1BUCA9ICdNYXAnO1xuXG4vLyAyMy4xIE1hcCBPYmplY3RzXG5tb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vX2NvbGxlY3Rpb24nKShNQVAsIGZ1bmN0aW9uIChnZXQpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIE1hcCgpIHsgcmV0dXJuIGdldCh0aGlzLCBhcmd1bWVudHMubGVuZ3RoID4gMCA/IGFyZ3VtZW50c1swXSA6IHVuZGVmaW5lZCk7IH07XG59LCB7XG4gIC8vIDIzLjEuMy42IE1hcC5wcm90b3R5cGUuZ2V0KGtleSlcbiAgZ2V0OiBmdW5jdGlvbiBnZXQoa2V5KSB7XG4gICAgdmFyIGVudHJ5ID0gc3Ryb25nLmdldEVudHJ5KHZhbGlkYXRlKHRoaXMsIE1BUCksIGtleSk7XG4gICAgcmV0dXJuIGVudHJ5ICYmIGVudHJ5LnY7XG4gIH0sXG4gIC8vIDIzLjEuMy45IE1hcC5wcm90b3R5cGUuc2V0KGtleSwgdmFsdWUpXG4gIHNldDogZnVuY3Rpb24gc2V0KGtleSwgdmFsdWUpIHtcbiAgICByZXR1cm4gc3Ryb25nLmRlZih2YWxpZGF0ZSh0aGlzLCBNQVApLCBrZXkgPT09IDAgPyAwIDoga2V5LCB2YWx1ZSk7XG4gIH1cbn0sIHN0cm9uZywgdHJ1ZSk7XG4iLCIvLyAyMC4yLjIuMyBNYXRoLmFjb3NoKHgpXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyIGxvZzFwID0gcmVxdWlyZSgnLi9fbWF0aC1sb2cxcCcpO1xudmFyIHNxcnQgPSBNYXRoLnNxcnQ7XG52YXIgJGFjb3NoID0gTWF0aC5hY29zaDtcblxuJGV4cG9ydCgkZXhwb3J0LlMgKyAkZXhwb3J0LkYgKiAhKCRhY29zaFxuICAvLyBWOCBidWc6IGh0dHBzOi8vY29kZS5nb29nbGUuY29tL3AvdjgvaXNzdWVzL2RldGFpbD9pZD0zNTA5XG4gICYmIE1hdGguZmxvb3IoJGFjb3NoKE51bWJlci5NQVhfVkFMVUUpKSA9PSA3MTBcbiAgLy8gVG9yIEJyb3dzZXIgYnVnOiBNYXRoLmFjb3NoKEluZmluaXR5KSAtPiBOYU5cbiAgJiYgJGFjb3NoKEluZmluaXR5KSA9PSBJbmZpbml0eVxuKSwgJ01hdGgnLCB7XG4gIGFjb3NoOiBmdW5jdGlvbiBhY29zaCh4KSB7XG4gICAgcmV0dXJuICh4ID0gK3gpIDwgMSA/IE5hTiA6IHggPiA5NDkwNjI2NS42MjQyNTE1NlxuICAgICAgPyBNYXRoLmxvZyh4KSArIE1hdGguTE4yXG4gICAgICA6IGxvZzFwKHggLSAxICsgc3FydCh4IC0gMSkgKiBzcXJ0KHggKyAxKSk7XG4gIH1cbn0pO1xuIiwiLy8gMjAuMi4yLjUgTWF0aC5hc2luaCh4KVxudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciAkYXNpbmggPSBNYXRoLmFzaW5oO1xuXG5mdW5jdGlvbiBhc2luaCh4KSB7XG4gIHJldHVybiAhaXNGaW5pdGUoeCA9ICt4KSB8fCB4ID09IDAgPyB4IDogeCA8IDAgPyAtYXNpbmgoLXgpIDogTWF0aC5sb2coeCArIE1hdGguc3FydCh4ICogeCArIDEpKTtcbn1cblxuLy8gVG9yIEJyb3dzZXIgYnVnOiBNYXRoLmFzaW5oKDApIC0+IC0wXG4kZXhwb3J0KCRleHBvcnQuUyArICRleHBvcnQuRiAqICEoJGFzaW5oICYmIDEgLyAkYXNpbmgoMCkgPiAwKSwgJ01hdGgnLCB7IGFzaW5oOiBhc2luaCB9KTtcbiIsIi8vIDIwLjIuMi43IE1hdGguYXRhbmgoeClcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgJGF0YW5oID0gTWF0aC5hdGFuaDtcblxuLy8gVG9yIEJyb3dzZXIgYnVnOiBNYXRoLmF0YW5oKC0wKSAtPiAwXG4kZXhwb3J0KCRleHBvcnQuUyArICRleHBvcnQuRiAqICEoJGF0YW5oICYmIDEgLyAkYXRhbmgoLTApIDwgMCksICdNYXRoJywge1xuICBhdGFuaDogZnVuY3Rpb24gYXRhbmgoeCkge1xuICAgIHJldHVybiAoeCA9ICt4KSA9PSAwID8geCA6IE1hdGgubG9nKCgxICsgeCkgLyAoMSAtIHgpKSAvIDI7XG4gIH1cbn0pO1xuIiwiLy8gMjAuMi4yLjkgTWF0aC5jYnJ0KHgpXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyIHNpZ24gPSByZXF1aXJlKCcuL19tYXRoLXNpZ24nKTtcblxuJGV4cG9ydCgkZXhwb3J0LlMsICdNYXRoJywge1xuICBjYnJ0OiBmdW5jdGlvbiBjYnJ0KHgpIHtcbiAgICByZXR1cm4gc2lnbih4ID0gK3gpICogTWF0aC5wb3coTWF0aC5hYnMoeCksIDEgLyAzKTtcbiAgfVxufSk7XG4iLCIvLyAyMC4yLjIuMTEgTWF0aC5jbHozMih4KVxudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcblxuJGV4cG9ydCgkZXhwb3J0LlMsICdNYXRoJywge1xuICBjbHozMjogZnVuY3Rpb24gY2x6MzIoeCkge1xuICAgIHJldHVybiAoeCA+Pj49IDApID8gMzEgLSBNYXRoLmZsb29yKE1hdGgubG9nKHggKyAwLjUpICogTWF0aC5MT0cyRSkgOiAzMjtcbiAgfVxufSk7XG4iLCIvLyAyMC4yLjIuMTIgTWF0aC5jb3NoKHgpXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyIGV4cCA9IE1hdGguZXhwO1xuXG4kZXhwb3J0KCRleHBvcnQuUywgJ01hdGgnLCB7XG4gIGNvc2g6IGZ1bmN0aW9uIGNvc2goeCkge1xuICAgIHJldHVybiAoZXhwKHggPSAreCkgKyBleHAoLXgpKSAvIDI7XG4gIH1cbn0pO1xuIiwiLy8gMjAuMi4yLjE0IE1hdGguZXhwbTEoeClcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgJGV4cG0xID0gcmVxdWlyZSgnLi9fbWF0aC1leHBtMScpO1xuXG4kZXhwb3J0KCRleHBvcnQuUyArICRleHBvcnQuRiAqICgkZXhwbTEgIT0gTWF0aC5leHBtMSksICdNYXRoJywgeyBleHBtMTogJGV4cG0xIH0pO1xuIiwiLy8gMjAuMi4yLjE2IE1hdGguZnJvdW5kKHgpXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xuXG4kZXhwb3J0KCRleHBvcnQuUywgJ01hdGgnLCB7IGZyb3VuZDogcmVxdWlyZSgnLi9fbWF0aC1mcm91bmQnKSB9KTtcbiIsIi8vIDIwLjIuMi4xNyBNYXRoLmh5cG90KFt2YWx1ZTFbLCB2YWx1ZTJbLCDigKYgXV1dKVxudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciBhYnMgPSBNYXRoLmFicztcblxuJGV4cG9ydCgkZXhwb3J0LlMsICdNYXRoJywge1xuICBoeXBvdDogZnVuY3Rpb24gaHlwb3QodmFsdWUxLCB2YWx1ZTIpIHsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby11bnVzZWQtdmFyc1xuICAgIHZhciBzdW0gPSAwO1xuICAgIHZhciBpID0gMDtcbiAgICB2YXIgYUxlbiA9IGFyZ3VtZW50cy5sZW5ndGg7XG4gICAgdmFyIGxhcmcgPSAwO1xuICAgIHZhciBhcmcsIGRpdjtcbiAgICB3aGlsZSAoaSA8IGFMZW4pIHtcbiAgICAgIGFyZyA9IGFicyhhcmd1bWVudHNbaSsrXSk7XG4gICAgICBpZiAobGFyZyA8IGFyZykge1xuICAgICAgICBkaXYgPSBsYXJnIC8gYXJnO1xuICAgICAgICBzdW0gPSBzdW0gKiBkaXYgKiBkaXYgKyAxO1xuICAgICAgICBsYXJnID0gYXJnO1xuICAgICAgfSBlbHNlIGlmIChhcmcgPiAwKSB7XG4gICAgICAgIGRpdiA9IGFyZyAvIGxhcmc7XG4gICAgICAgIHN1bSArPSBkaXYgKiBkaXY7XG4gICAgICB9IGVsc2Ugc3VtICs9IGFyZztcbiAgICB9XG4gICAgcmV0dXJuIGxhcmcgPT09IEluZmluaXR5ID8gSW5maW5pdHkgOiBsYXJnICogTWF0aC5zcXJ0KHN1bSk7XG4gIH1cbn0pO1xuIiwiLy8gMjAuMi4yLjE4IE1hdGguaW11bCh4LCB5KVxudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciAkaW11bCA9IE1hdGguaW11bDtcblxuLy8gc29tZSBXZWJLaXQgdmVyc2lvbnMgZmFpbHMgd2l0aCBiaWcgbnVtYmVycywgc29tZSBoYXMgd3JvbmcgYXJpdHlcbiRleHBvcnQoJGV4cG9ydC5TICsgJGV4cG9ydC5GICogcmVxdWlyZSgnLi9fZmFpbHMnKShmdW5jdGlvbiAoKSB7XG4gIHJldHVybiAkaW11bCgweGZmZmZmZmZmLCA1KSAhPSAtNSB8fCAkaW11bC5sZW5ndGggIT0gMjtcbn0pLCAnTWF0aCcsIHtcbiAgaW11bDogZnVuY3Rpb24gaW11bCh4LCB5KSB7XG4gICAgdmFyIFVJTlQxNiA9IDB4ZmZmZjtcbiAgICB2YXIgeG4gPSAreDtcbiAgICB2YXIgeW4gPSAreTtcbiAgICB2YXIgeGwgPSBVSU5UMTYgJiB4bjtcbiAgICB2YXIgeWwgPSBVSU5UMTYgJiB5bjtcbiAgICByZXR1cm4gMCB8IHhsICogeWwgKyAoKFVJTlQxNiAmIHhuID4+PiAxNikgKiB5bCArIHhsICogKFVJTlQxNiAmIHluID4+PiAxNikgPDwgMTYgPj4+IDApO1xuICB9XG59KTtcbiIsIi8vIDIwLjIuMi4yMSBNYXRoLmxvZzEwKHgpXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xuXG4kZXhwb3J0KCRleHBvcnQuUywgJ01hdGgnLCB7XG4gIGxvZzEwOiBmdW5jdGlvbiBsb2cxMCh4KSB7XG4gICAgcmV0dXJuIE1hdGgubG9nKHgpICogTWF0aC5MT0cxMEU7XG4gIH1cbn0pO1xuIiwiLy8gMjAuMi4yLjIwIE1hdGgubG9nMXAoeClcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG5cbiRleHBvcnQoJGV4cG9ydC5TLCAnTWF0aCcsIHsgbG9nMXA6IHJlcXVpcmUoJy4vX21hdGgtbG9nMXAnKSB9KTtcbiIsIi8vIDIwLjIuMi4yMiBNYXRoLmxvZzIoeClcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG5cbiRleHBvcnQoJGV4cG9ydC5TLCAnTWF0aCcsIHtcbiAgbG9nMjogZnVuY3Rpb24gbG9nMih4KSB7XG4gICAgcmV0dXJuIE1hdGgubG9nKHgpIC8gTWF0aC5MTjI7XG4gIH1cbn0pO1xuIiwiLy8gMjAuMi4yLjI4IE1hdGguc2lnbih4KVxudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcblxuJGV4cG9ydCgkZXhwb3J0LlMsICdNYXRoJywgeyBzaWduOiByZXF1aXJlKCcuL19tYXRoLXNpZ24nKSB9KTtcbiIsIi8vIDIwLjIuMi4zMCBNYXRoLnNpbmgoeClcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgZXhwbTEgPSByZXF1aXJlKCcuL19tYXRoLWV4cG0xJyk7XG52YXIgZXhwID0gTWF0aC5leHA7XG5cbi8vIFY4IG5lYXIgQ2hyb21pdW0gMzggaGFzIGEgcHJvYmxlbSB3aXRoIHZlcnkgc21hbGwgbnVtYmVyc1xuJGV4cG9ydCgkZXhwb3J0LlMgKyAkZXhwb3J0LkYgKiByZXF1aXJlKCcuL19mYWlscycpKGZ1bmN0aW9uICgpIHtcbiAgcmV0dXJuICFNYXRoLnNpbmgoLTJlLTE3KSAhPSAtMmUtMTc7XG59KSwgJ01hdGgnLCB7XG4gIHNpbmg6IGZ1bmN0aW9uIHNpbmgoeCkge1xuICAgIHJldHVybiBNYXRoLmFicyh4ID0gK3gpIDwgMVxuICAgICAgPyAoZXhwbTEoeCkgLSBleHBtMSgteCkpIC8gMlxuICAgICAgOiAoZXhwKHggLSAxKSAtIGV4cCgteCAtIDEpKSAqIChNYXRoLkUgLyAyKTtcbiAgfVxufSk7XG4iLCIvLyAyMC4yLjIuMzMgTWF0aC50YW5oKHgpXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyIGV4cG0xID0gcmVxdWlyZSgnLi9fbWF0aC1leHBtMScpO1xudmFyIGV4cCA9IE1hdGguZXhwO1xuXG4kZXhwb3J0KCRleHBvcnQuUywgJ01hdGgnLCB7XG4gIHRhbmg6IGZ1bmN0aW9uIHRhbmgoeCkge1xuICAgIHZhciBhID0gZXhwbTEoeCA9ICt4KTtcbiAgICB2YXIgYiA9IGV4cG0xKC14KTtcbiAgICByZXR1cm4gYSA9PSBJbmZpbml0eSA/IDEgOiBiID09IEluZmluaXR5ID8gLTEgOiAoYSAtIGIpIC8gKGV4cCh4KSArIGV4cCgteCkpO1xuICB9XG59KTtcbiIsIi8vIDIwLjIuMi4zNCBNYXRoLnRydW5jKHgpXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xuXG4kZXhwb3J0KCRleHBvcnQuUywgJ01hdGgnLCB7XG4gIHRydW5jOiBmdW5jdGlvbiB0cnVuYyhpdCkge1xuICAgIHJldHVybiAoaXQgPiAwID8gTWF0aC5mbG9vciA6IE1hdGguY2VpbCkoaXQpO1xuICB9XG59KTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciBnbG9iYWwgPSByZXF1aXJlKCcuL19nbG9iYWwnKTtcbnZhciBoYXMgPSByZXF1aXJlKCcuL19oYXMnKTtcbnZhciBjb2YgPSByZXF1aXJlKCcuL19jb2YnKTtcbnZhciBpbmhlcml0SWZSZXF1aXJlZCA9IHJlcXVpcmUoJy4vX2luaGVyaXQtaWYtcmVxdWlyZWQnKTtcbnZhciB0b1ByaW1pdGl2ZSA9IHJlcXVpcmUoJy4vX3RvLXByaW1pdGl2ZScpO1xudmFyIGZhaWxzID0gcmVxdWlyZSgnLi9fZmFpbHMnKTtcbnZhciBnT1BOID0gcmVxdWlyZSgnLi9fb2JqZWN0LWdvcG4nKS5mO1xudmFyIGdPUEQgPSByZXF1aXJlKCcuL19vYmplY3QtZ29wZCcpLmY7XG52YXIgZFAgPSByZXF1aXJlKCcuL19vYmplY3QtZHAnKS5mO1xudmFyICR0cmltID0gcmVxdWlyZSgnLi9fc3RyaW5nLXRyaW0nKS50cmltO1xudmFyIE5VTUJFUiA9ICdOdW1iZXInO1xudmFyICROdW1iZXIgPSBnbG9iYWxbTlVNQkVSXTtcbnZhciBCYXNlID0gJE51bWJlcjtcbnZhciBwcm90byA9ICROdW1iZXIucHJvdG90eXBlO1xuLy8gT3BlcmEgfjEyIGhhcyBicm9rZW4gT2JqZWN0I3RvU3RyaW5nXG52YXIgQlJPS0VOX0NPRiA9IGNvZihyZXF1aXJlKCcuL19vYmplY3QtY3JlYXRlJykocHJvdG8pKSA9PSBOVU1CRVI7XG52YXIgVFJJTSA9ICd0cmltJyBpbiBTdHJpbmcucHJvdG90eXBlO1xuXG4vLyA3LjEuMyBUb051bWJlcihhcmd1bWVudClcbnZhciB0b051bWJlciA9IGZ1bmN0aW9uIChhcmd1bWVudCkge1xuICB2YXIgaXQgPSB0b1ByaW1pdGl2ZShhcmd1bWVudCwgZmFsc2UpO1xuICBpZiAodHlwZW9mIGl0ID09ICdzdHJpbmcnICYmIGl0Lmxlbmd0aCA+IDIpIHtcbiAgICBpdCA9IFRSSU0gPyBpdC50cmltKCkgOiAkdHJpbShpdCwgMyk7XG4gICAgdmFyIGZpcnN0ID0gaXQuY2hhckNvZGVBdCgwKTtcbiAgICB2YXIgdGhpcmQsIHJhZGl4LCBtYXhDb2RlO1xuICAgIGlmIChmaXJzdCA9PT0gNDMgfHwgZmlyc3QgPT09IDQ1KSB7XG4gICAgICB0aGlyZCA9IGl0LmNoYXJDb2RlQXQoMik7XG4gICAgICBpZiAodGhpcmQgPT09IDg4IHx8IHRoaXJkID09PSAxMjApIHJldHVybiBOYU47IC8vIE51bWJlcignKzB4MScpIHNob3VsZCBiZSBOYU4sIG9sZCBWOCBmaXhcbiAgICB9IGVsc2UgaWYgKGZpcnN0ID09PSA0OCkge1xuICAgICAgc3dpdGNoIChpdC5jaGFyQ29kZUF0KDEpKSB7XG4gICAgICAgIGNhc2UgNjY6IGNhc2UgOTg6IHJhZGl4ID0gMjsgbWF4Q29kZSA9IDQ5OyBicmVhazsgLy8gZmFzdCBlcXVhbCAvXjBiWzAxXSskL2lcbiAgICAgICAgY2FzZSA3OTogY2FzZSAxMTE6IHJhZGl4ID0gODsgbWF4Q29kZSA9IDU1OyBicmVhazsgLy8gZmFzdCBlcXVhbCAvXjBvWzAtN10rJC9pXG4gICAgICAgIGRlZmF1bHQ6IHJldHVybiAraXQ7XG4gICAgICB9XG4gICAgICBmb3IgKHZhciBkaWdpdHMgPSBpdC5zbGljZSgyKSwgaSA9IDAsIGwgPSBkaWdpdHMubGVuZ3RoLCBjb2RlOyBpIDwgbDsgaSsrKSB7XG4gICAgICAgIGNvZGUgPSBkaWdpdHMuY2hhckNvZGVBdChpKTtcbiAgICAgICAgLy8gcGFyc2VJbnQgcGFyc2VzIGEgc3RyaW5nIHRvIGEgZmlyc3QgdW5hdmFpbGFibGUgc3ltYm9sXG4gICAgICAgIC8vIGJ1dCBUb051bWJlciBzaG91bGQgcmV0dXJuIE5hTiBpZiBhIHN0cmluZyBjb250YWlucyB1bmF2YWlsYWJsZSBzeW1ib2xzXG4gICAgICAgIGlmIChjb2RlIDwgNDggfHwgY29kZSA+IG1heENvZGUpIHJldHVybiBOYU47XG4gICAgICB9IHJldHVybiBwYXJzZUludChkaWdpdHMsIHJhZGl4KTtcbiAgICB9XG4gIH0gcmV0dXJuICtpdDtcbn07XG5cbmlmICghJE51bWJlcignIDBvMScpIHx8ICEkTnVtYmVyKCcwYjEnKSB8fCAkTnVtYmVyKCcrMHgxJykpIHtcbiAgJE51bWJlciA9IGZ1bmN0aW9uIE51bWJlcih2YWx1ZSkge1xuICAgIHZhciBpdCA9IGFyZ3VtZW50cy5sZW5ndGggPCAxID8gMCA6IHZhbHVlO1xuICAgIHZhciB0aGF0ID0gdGhpcztcbiAgICByZXR1cm4gdGhhdCBpbnN0YW5jZW9mICROdW1iZXJcbiAgICAgIC8vIGNoZWNrIG9uIDEuLmNvbnN0cnVjdG9yKGZvbykgY2FzZVxuICAgICAgJiYgKEJST0tFTl9DT0YgPyBmYWlscyhmdW5jdGlvbiAoKSB7IHByb3RvLnZhbHVlT2YuY2FsbCh0aGF0KTsgfSkgOiBjb2YodGhhdCkgIT0gTlVNQkVSKVxuICAgICAgICA/IGluaGVyaXRJZlJlcXVpcmVkKG5ldyBCYXNlKHRvTnVtYmVyKGl0KSksIHRoYXQsICROdW1iZXIpIDogdG9OdW1iZXIoaXQpO1xuICB9O1xuICBmb3IgKHZhciBrZXlzID0gcmVxdWlyZSgnLi9fZGVzY3JpcHRvcnMnKSA/IGdPUE4oQmFzZSkgOiAoXG4gICAgLy8gRVMzOlxuICAgICdNQVhfVkFMVUUsTUlOX1ZBTFVFLE5hTixORUdBVElWRV9JTkZJTklUWSxQT1NJVElWRV9JTkZJTklUWSwnICtcbiAgICAvLyBFUzYgKGluIGNhc2UsIGlmIG1vZHVsZXMgd2l0aCBFUzYgTnVtYmVyIHN0YXRpY3MgcmVxdWlyZWQgYmVmb3JlKTpcbiAgICAnRVBTSUxPTixpc0Zpbml0ZSxpc0ludGVnZXIsaXNOYU4saXNTYWZlSW50ZWdlcixNQVhfU0FGRV9JTlRFR0VSLCcgK1xuICAgICdNSU5fU0FGRV9JTlRFR0VSLHBhcnNlRmxvYXQscGFyc2VJbnQsaXNJbnRlZ2VyJ1xuICApLnNwbGl0KCcsJyksIGogPSAwLCBrZXk7IGtleXMubGVuZ3RoID4gajsgaisrKSB7XG4gICAgaWYgKGhhcyhCYXNlLCBrZXkgPSBrZXlzW2pdKSAmJiAhaGFzKCROdW1iZXIsIGtleSkpIHtcbiAgICAgIGRQKCROdW1iZXIsIGtleSwgZ09QRChCYXNlLCBrZXkpKTtcbiAgICB9XG4gIH1cbiAgJE51bWJlci5wcm90b3R5cGUgPSBwcm90bztcbiAgcHJvdG8uY29uc3RydWN0b3IgPSAkTnVtYmVyO1xuICByZXF1aXJlKCcuL19yZWRlZmluZScpKGdsb2JhbCwgTlVNQkVSLCAkTnVtYmVyKTtcbn1cbiIsIi8vIDIwLjEuMi4xIE51bWJlci5FUFNJTE9OXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xuXG4kZXhwb3J0KCRleHBvcnQuUywgJ051bWJlcicsIHsgRVBTSUxPTjogTWF0aC5wb3coMiwgLTUyKSB9KTtcbiIsIi8vIDIwLjEuMi4yIE51bWJlci5pc0Zpbml0ZShudW1iZXIpXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyIF9pc0Zpbml0ZSA9IHJlcXVpcmUoJy4vX2dsb2JhbCcpLmlzRmluaXRlO1xuXG4kZXhwb3J0KCRleHBvcnQuUywgJ051bWJlcicsIHtcbiAgaXNGaW5pdGU6IGZ1bmN0aW9uIGlzRmluaXRlKGl0KSB7XG4gICAgcmV0dXJuIHR5cGVvZiBpdCA9PSAnbnVtYmVyJyAmJiBfaXNGaW5pdGUoaXQpO1xuICB9XG59KTtcbiIsIi8vIDIwLjEuMi4zIE51bWJlci5pc0ludGVnZXIobnVtYmVyKVxudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcblxuJGV4cG9ydCgkZXhwb3J0LlMsICdOdW1iZXInLCB7IGlzSW50ZWdlcjogcmVxdWlyZSgnLi9faXMtaW50ZWdlcicpIH0pO1xuIiwiLy8gMjAuMS4yLjQgTnVtYmVyLmlzTmFOKG51bWJlcilcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG5cbiRleHBvcnQoJGV4cG9ydC5TLCAnTnVtYmVyJywge1xuICBpc05hTjogZnVuY3Rpb24gaXNOYU4obnVtYmVyKSB7XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXNlbGYtY29tcGFyZVxuICAgIHJldHVybiBudW1iZXIgIT0gbnVtYmVyO1xuICB9XG59KTtcbiIsIi8vIDIwLjEuMi41IE51bWJlci5pc1NhZmVJbnRlZ2VyKG51bWJlcilcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgaXNJbnRlZ2VyID0gcmVxdWlyZSgnLi9faXMtaW50ZWdlcicpO1xudmFyIGFicyA9IE1hdGguYWJzO1xuXG4kZXhwb3J0KCRleHBvcnQuUywgJ051bWJlcicsIHtcbiAgaXNTYWZlSW50ZWdlcjogZnVuY3Rpb24gaXNTYWZlSW50ZWdlcihudW1iZXIpIHtcbiAgICByZXR1cm4gaXNJbnRlZ2VyKG51bWJlcikgJiYgYWJzKG51bWJlcikgPD0gMHgxZmZmZmZmZmZmZmZmZjtcbiAgfVxufSk7XG4iLCIvLyAyMC4xLjIuNiBOdW1iZXIuTUFYX1NBRkVfSU5URUdFUlxudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcblxuJGV4cG9ydCgkZXhwb3J0LlMsICdOdW1iZXInLCB7IE1BWF9TQUZFX0lOVEVHRVI6IDB4MWZmZmZmZmZmZmZmZmYgfSk7XG4iLCIvLyAyMC4xLjIuMTAgTnVtYmVyLk1JTl9TQUZFX0lOVEVHRVJcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG5cbiRleHBvcnQoJGV4cG9ydC5TLCAnTnVtYmVyJywgeyBNSU5fU0FGRV9JTlRFR0VSOiAtMHgxZmZmZmZmZmZmZmZmZiB9KTtcbiIsInZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgJHBhcnNlRmxvYXQgPSByZXF1aXJlKCcuL19wYXJzZS1mbG9hdCcpO1xuLy8gMjAuMS4yLjEyIE51bWJlci5wYXJzZUZsb2F0KHN0cmluZylcbiRleHBvcnQoJGV4cG9ydC5TICsgJGV4cG9ydC5GICogKE51bWJlci5wYXJzZUZsb2F0ICE9ICRwYXJzZUZsb2F0KSwgJ051bWJlcicsIHsgcGFyc2VGbG9hdDogJHBhcnNlRmxvYXQgfSk7XG4iLCJ2YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyICRwYXJzZUludCA9IHJlcXVpcmUoJy4vX3BhcnNlLWludCcpO1xuLy8gMjAuMS4yLjEzIE51bWJlci5wYXJzZUludChzdHJpbmcsIHJhZGl4KVxuJGV4cG9ydCgkZXhwb3J0LlMgKyAkZXhwb3J0LkYgKiAoTnVtYmVyLnBhcnNlSW50ICE9ICRwYXJzZUludCksICdOdW1iZXInLCB7IHBhcnNlSW50OiAkcGFyc2VJbnQgfSk7XG4iLCIndXNlIHN0cmljdCc7XG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyIHRvSW50ZWdlciA9IHJlcXVpcmUoJy4vX3RvLWludGVnZXInKTtcbnZhciBhTnVtYmVyVmFsdWUgPSByZXF1aXJlKCcuL19hLW51bWJlci12YWx1ZScpO1xudmFyIHJlcGVhdCA9IHJlcXVpcmUoJy4vX3N0cmluZy1yZXBlYXQnKTtcbnZhciAkdG9GaXhlZCA9IDEuMC50b0ZpeGVkO1xudmFyIGZsb29yID0gTWF0aC5mbG9vcjtcbnZhciBkYXRhID0gWzAsIDAsIDAsIDAsIDAsIDBdO1xudmFyIEVSUk9SID0gJ051bWJlci50b0ZpeGVkOiBpbmNvcnJlY3QgaW52b2NhdGlvbiEnO1xudmFyIFpFUk8gPSAnMCc7XG5cbnZhciBtdWx0aXBseSA9IGZ1bmN0aW9uIChuLCBjKSB7XG4gIHZhciBpID0gLTE7XG4gIHZhciBjMiA9IGM7XG4gIHdoaWxlICgrK2kgPCA2KSB7XG4gICAgYzIgKz0gbiAqIGRhdGFbaV07XG4gICAgZGF0YVtpXSA9IGMyICUgMWU3O1xuICAgIGMyID0gZmxvb3IoYzIgLyAxZTcpO1xuICB9XG59O1xudmFyIGRpdmlkZSA9IGZ1bmN0aW9uIChuKSB7XG4gIHZhciBpID0gNjtcbiAgdmFyIGMgPSAwO1xuICB3aGlsZSAoLS1pID49IDApIHtcbiAgICBjICs9IGRhdGFbaV07XG4gICAgZGF0YVtpXSA9IGZsb29yKGMgLyBuKTtcbiAgICBjID0gKGMgJSBuKSAqIDFlNztcbiAgfVxufTtcbnZhciBudW1Ub1N0cmluZyA9IGZ1bmN0aW9uICgpIHtcbiAgdmFyIGkgPSA2O1xuICB2YXIgcyA9ICcnO1xuICB3aGlsZSAoLS1pID49IDApIHtcbiAgICBpZiAocyAhPT0gJycgfHwgaSA9PT0gMCB8fCBkYXRhW2ldICE9PSAwKSB7XG4gICAgICB2YXIgdCA9IFN0cmluZyhkYXRhW2ldKTtcbiAgICAgIHMgPSBzID09PSAnJyA/IHQgOiBzICsgcmVwZWF0LmNhbGwoWkVSTywgNyAtIHQubGVuZ3RoKSArIHQ7XG4gICAgfVxuICB9IHJldHVybiBzO1xufTtcbnZhciBwb3cgPSBmdW5jdGlvbiAoeCwgbiwgYWNjKSB7XG4gIHJldHVybiBuID09PSAwID8gYWNjIDogbiAlIDIgPT09IDEgPyBwb3coeCwgbiAtIDEsIGFjYyAqIHgpIDogcG93KHggKiB4LCBuIC8gMiwgYWNjKTtcbn07XG52YXIgbG9nID0gZnVuY3Rpb24gKHgpIHtcbiAgdmFyIG4gPSAwO1xuICB2YXIgeDIgPSB4O1xuICB3aGlsZSAoeDIgPj0gNDA5Nikge1xuICAgIG4gKz0gMTI7XG4gICAgeDIgLz0gNDA5NjtcbiAgfVxuICB3aGlsZSAoeDIgPj0gMikge1xuICAgIG4gKz0gMTtcbiAgICB4MiAvPSAyO1xuICB9IHJldHVybiBuO1xufTtcblxuJGV4cG9ydCgkZXhwb3J0LlAgKyAkZXhwb3J0LkYgKiAoISEkdG9GaXhlZCAmJiAoXG4gIDAuMDAwMDgudG9GaXhlZCgzKSAhPT0gJzAuMDAwJyB8fFxuICAwLjkudG9GaXhlZCgwKSAhPT0gJzEnIHx8XG4gIDEuMjU1LnRvRml4ZWQoMikgIT09ICcxLjI1JyB8fFxuICAxMDAwMDAwMDAwMDAwMDAwMTI4LjAudG9GaXhlZCgwKSAhPT0gJzEwMDAwMDAwMDAwMDAwMDAxMjgnXG4pIHx8ICFyZXF1aXJlKCcuL19mYWlscycpKGZ1bmN0aW9uICgpIHtcbiAgLy8gVjggfiBBbmRyb2lkIDQuMy1cbiAgJHRvRml4ZWQuY2FsbCh7fSk7XG59KSksICdOdW1iZXInLCB7XG4gIHRvRml4ZWQ6IGZ1bmN0aW9uIHRvRml4ZWQoZnJhY3Rpb25EaWdpdHMpIHtcbiAgICB2YXIgeCA9IGFOdW1iZXJWYWx1ZSh0aGlzLCBFUlJPUik7XG4gICAgdmFyIGYgPSB0b0ludGVnZXIoZnJhY3Rpb25EaWdpdHMpO1xuICAgIHZhciBzID0gJyc7XG4gICAgdmFyIG0gPSBaRVJPO1xuICAgIHZhciBlLCB6LCBqLCBrO1xuICAgIGlmIChmIDwgMCB8fCBmID4gMjApIHRocm93IFJhbmdlRXJyb3IoRVJST1IpO1xuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1zZWxmLWNvbXBhcmVcbiAgICBpZiAoeCAhPSB4KSByZXR1cm4gJ05hTic7XG4gICAgaWYgKHggPD0gLTFlMjEgfHwgeCA+PSAxZTIxKSByZXR1cm4gU3RyaW5nKHgpO1xuICAgIGlmICh4IDwgMCkge1xuICAgICAgcyA9ICctJztcbiAgICAgIHggPSAteDtcbiAgICB9XG4gICAgaWYgKHggPiAxZS0yMSkge1xuICAgICAgZSA9IGxvZyh4ICogcG93KDIsIDY5LCAxKSkgLSA2OTtcbiAgICAgIHogPSBlIDwgMCA/IHggKiBwb3coMiwgLWUsIDEpIDogeCAvIHBvdygyLCBlLCAxKTtcbiAgICAgIHogKj0gMHgxMDAwMDAwMDAwMDAwMDtcbiAgICAgIGUgPSA1MiAtIGU7XG4gICAgICBpZiAoZSA+IDApIHtcbiAgICAgICAgbXVsdGlwbHkoMCwgeik7XG4gICAgICAgIGogPSBmO1xuICAgICAgICB3aGlsZSAoaiA+PSA3KSB7XG4gICAgICAgICAgbXVsdGlwbHkoMWU3LCAwKTtcbiAgICAgICAgICBqIC09IDc7XG4gICAgICAgIH1cbiAgICAgICAgbXVsdGlwbHkocG93KDEwLCBqLCAxKSwgMCk7XG4gICAgICAgIGogPSBlIC0gMTtcbiAgICAgICAgd2hpbGUgKGogPj0gMjMpIHtcbiAgICAgICAgICBkaXZpZGUoMSA8PCAyMyk7XG4gICAgICAgICAgaiAtPSAyMztcbiAgICAgICAgfVxuICAgICAgICBkaXZpZGUoMSA8PCBqKTtcbiAgICAgICAgbXVsdGlwbHkoMSwgMSk7XG4gICAgICAgIGRpdmlkZSgyKTtcbiAgICAgICAgbSA9IG51bVRvU3RyaW5nKCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBtdWx0aXBseSgwLCB6KTtcbiAgICAgICAgbXVsdGlwbHkoMSA8PCAtZSwgMCk7XG4gICAgICAgIG0gPSBudW1Ub1N0cmluZygpICsgcmVwZWF0LmNhbGwoWkVSTywgZik7XG4gICAgICB9XG4gICAgfVxuICAgIGlmIChmID4gMCkge1xuICAgICAgayA9IG0ubGVuZ3RoO1xuICAgICAgbSA9IHMgKyAoayA8PSBmID8gJzAuJyArIHJlcGVhdC5jYWxsKFpFUk8sIGYgLSBrKSArIG0gOiBtLnNsaWNlKDAsIGsgLSBmKSArICcuJyArIG0uc2xpY2UoayAtIGYpKTtcbiAgICB9IGVsc2Uge1xuICAgICAgbSA9IHMgKyBtO1xuICAgIH0gcmV0dXJuIG07XG4gIH1cbn0pO1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciAkZmFpbHMgPSByZXF1aXJlKCcuL19mYWlscycpO1xudmFyIGFOdW1iZXJWYWx1ZSA9IHJlcXVpcmUoJy4vX2EtbnVtYmVyLXZhbHVlJyk7XG52YXIgJHRvUHJlY2lzaW9uID0gMS4wLnRvUHJlY2lzaW9uO1xuXG4kZXhwb3J0KCRleHBvcnQuUCArICRleHBvcnQuRiAqICgkZmFpbHMoZnVuY3Rpb24gKCkge1xuICAvLyBJRTctXG4gIHJldHVybiAkdG9QcmVjaXNpb24uY2FsbCgxLCB1bmRlZmluZWQpICE9PSAnMSc7XG59KSB8fCAhJGZhaWxzKGZ1bmN0aW9uICgpIHtcbiAgLy8gVjggfiBBbmRyb2lkIDQuMy1cbiAgJHRvUHJlY2lzaW9uLmNhbGwoe30pO1xufSkpLCAnTnVtYmVyJywge1xuICB0b1ByZWNpc2lvbjogZnVuY3Rpb24gdG9QcmVjaXNpb24ocHJlY2lzaW9uKSB7XG4gICAgdmFyIHRoYXQgPSBhTnVtYmVyVmFsdWUodGhpcywgJ051bWJlciN0b1ByZWNpc2lvbjogaW5jb3JyZWN0IGludm9jYXRpb24hJyk7XG4gICAgcmV0dXJuIHByZWNpc2lvbiA9PT0gdW5kZWZpbmVkID8gJHRvUHJlY2lzaW9uLmNhbGwodGhhdCkgOiAkdG9QcmVjaXNpb24uY2FsbCh0aGF0LCBwcmVjaXNpb24pO1xuICB9XG59KTtcbiIsIi8vIDE5LjEuMy4xIE9iamVjdC5hc3NpZ24odGFyZ2V0LCBzb3VyY2UpXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xuXG4kZXhwb3J0KCRleHBvcnQuUyArICRleHBvcnQuRiwgJ09iamVjdCcsIHsgYXNzaWduOiByZXF1aXJlKCcuL19vYmplY3QtYXNzaWduJykgfSk7XG4iLCJ2YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xuLy8gMTkuMS4yLjIgLyAxNS4yLjMuNSBPYmplY3QuY3JlYXRlKE8gWywgUHJvcGVydGllc10pXG4kZXhwb3J0KCRleHBvcnQuUywgJ09iamVjdCcsIHsgY3JlYXRlOiByZXF1aXJlKCcuL19vYmplY3QtY3JlYXRlJykgfSk7XG4iLCJ2YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xuLy8gMTkuMS4yLjMgLyAxNS4yLjMuNyBPYmplY3QuZGVmaW5lUHJvcGVydGllcyhPLCBQcm9wZXJ0aWVzKVxuJGV4cG9ydCgkZXhwb3J0LlMgKyAkZXhwb3J0LkYgKiAhcmVxdWlyZSgnLi9fZGVzY3JpcHRvcnMnKSwgJ09iamVjdCcsIHsgZGVmaW5lUHJvcGVydGllczogcmVxdWlyZSgnLi9fb2JqZWN0LWRwcycpIH0pO1xuIiwidmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbi8vIDE5LjEuMi40IC8gMTUuMi4zLjYgT2JqZWN0LmRlZmluZVByb3BlcnR5KE8sIFAsIEF0dHJpYnV0ZXMpXG4kZXhwb3J0KCRleHBvcnQuUyArICRleHBvcnQuRiAqICFyZXF1aXJlKCcuL19kZXNjcmlwdG9ycycpLCAnT2JqZWN0JywgeyBkZWZpbmVQcm9wZXJ0eTogcmVxdWlyZSgnLi9fb2JqZWN0LWRwJykuZiB9KTtcbiIsIi8vIDE5LjEuMi41IE9iamVjdC5mcmVlemUoTylcbnZhciBpc09iamVjdCA9IHJlcXVpcmUoJy4vX2lzLW9iamVjdCcpO1xudmFyIG1ldGEgPSByZXF1aXJlKCcuL19tZXRhJykub25GcmVlemU7XG5cbnJlcXVpcmUoJy4vX29iamVjdC1zYXAnKSgnZnJlZXplJywgZnVuY3Rpb24gKCRmcmVlemUpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIGZyZWV6ZShpdCkge1xuICAgIHJldHVybiAkZnJlZXplICYmIGlzT2JqZWN0KGl0KSA/ICRmcmVlemUobWV0YShpdCkpIDogaXQ7XG4gIH07XG59KTtcbiIsIi8vIDE5LjEuMi42IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoTywgUClcbnZhciB0b0lPYmplY3QgPSByZXF1aXJlKCcuL190by1pb2JqZWN0Jyk7XG52YXIgJGdldE93blByb3BlcnR5RGVzY3JpcHRvciA9IHJlcXVpcmUoJy4vX29iamVjdC1nb3BkJykuZjtcblxucmVxdWlyZSgnLi9fb2JqZWN0LXNhcCcpKCdnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3InLCBmdW5jdGlvbiAoKSB7XG4gIHJldHVybiBmdW5jdGlvbiBnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoaXQsIGtleSkge1xuICAgIHJldHVybiAkZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHRvSU9iamVjdChpdCksIGtleSk7XG4gIH07XG59KTtcbiIsIi8vIDE5LjEuMi43IE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKE8pXG5yZXF1aXJlKCcuL19vYmplY3Qtc2FwJykoJ2dldE93blByb3BlcnR5TmFtZXMnLCBmdW5jdGlvbiAoKSB7XG4gIHJldHVybiByZXF1aXJlKCcuL19vYmplY3QtZ29wbi1leHQnKS5mO1xufSk7XG4iLCIvLyAxOS4xLjIuOSBPYmplY3QuZ2V0UHJvdG90eXBlT2YoTylcbnZhciB0b09iamVjdCA9IHJlcXVpcmUoJy4vX3RvLW9iamVjdCcpO1xudmFyICRnZXRQcm90b3R5cGVPZiA9IHJlcXVpcmUoJy4vX29iamVjdC1ncG8nKTtcblxucmVxdWlyZSgnLi9fb2JqZWN0LXNhcCcpKCdnZXRQcm90b3R5cGVPZicsIGZ1bmN0aW9uICgpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIGdldFByb3RvdHlwZU9mKGl0KSB7XG4gICAgcmV0dXJuICRnZXRQcm90b3R5cGVPZih0b09iamVjdChpdCkpO1xuICB9O1xufSk7XG4iLCIvLyAxOS4xLjIuMTEgT2JqZWN0LmlzRXh0ZW5zaWJsZShPKVxudmFyIGlzT2JqZWN0ID0gcmVxdWlyZSgnLi9faXMtb2JqZWN0Jyk7XG5cbnJlcXVpcmUoJy4vX29iamVjdC1zYXAnKSgnaXNFeHRlbnNpYmxlJywgZnVuY3Rpb24gKCRpc0V4dGVuc2libGUpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIGlzRXh0ZW5zaWJsZShpdCkge1xuICAgIHJldHVybiBpc09iamVjdChpdCkgPyAkaXNFeHRlbnNpYmxlID8gJGlzRXh0ZW5zaWJsZShpdCkgOiB0cnVlIDogZmFsc2U7XG4gIH07XG59KTtcbiIsIi8vIDE5LjEuMi4xMiBPYmplY3QuaXNGcm96ZW4oTylcbnZhciBpc09iamVjdCA9IHJlcXVpcmUoJy4vX2lzLW9iamVjdCcpO1xuXG5yZXF1aXJlKCcuL19vYmplY3Qtc2FwJykoJ2lzRnJvemVuJywgZnVuY3Rpb24gKCRpc0Zyb3plbikge1xuICByZXR1cm4gZnVuY3Rpb24gaXNGcm96ZW4oaXQpIHtcbiAgICByZXR1cm4gaXNPYmplY3QoaXQpID8gJGlzRnJvemVuID8gJGlzRnJvemVuKGl0KSA6IGZhbHNlIDogdHJ1ZTtcbiAgfTtcbn0pO1xuIiwiLy8gMTkuMS4yLjEzIE9iamVjdC5pc1NlYWxlZChPKVxudmFyIGlzT2JqZWN0ID0gcmVxdWlyZSgnLi9faXMtb2JqZWN0Jyk7XG5cbnJlcXVpcmUoJy4vX29iamVjdC1zYXAnKSgnaXNTZWFsZWQnLCBmdW5jdGlvbiAoJGlzU2VhbGVkKSB7XG4gIHJldHVybiBmdW5jdGlvbiBpc1NlYWxlZChpdCkge1xuICAgIHJldHVybiBpc09iamVjdChpdCkgPyAkaXNTZWFsZWQgPyAkaXNTZWFsZWQoaXQpIDogZmFsc2UgOiB0cnVlO1xuICB9O1xufSk7XG4iLCIvLyAxOS4xLjMuMTAgT2JqZWN0LmlzKHZhbHVlMSwgdmFsdWUyKVxudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbiRleHBvcnQoJGV4cG9ydC5TLCAnT2JqZWN0JywgeyBpczogcmVxdWlyZSgnLi9fc2FtZS12YWx1ZScpIH0pO1xuIiwiLy8gMTkuMS4yLjE0IE9iamVjdC5rZXlzKE8pXG52YXIgdG9PYmplY3QgPSByZXF1aXJlKCcuL190by1vYmplY3QnKTtcbnZhciAka2V5cyA9IHJlcXVpcmUoJy4vX29iamVjdC1rZXlzJyk7XG5cbnJlcXVpcmUoJy4vX29iamVjdC1zYXAnKSgna2V5cycsIGZ1bmN0aW9uICgpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIGtleXMoaXQpIHtcbiAgICByZXR1cm4gJGtleXModG9PYmplY3QoaXQpKTtcbiAgfTtcbn0pO1xuIiwiLy8gMTkuMS4yLjE1IE9iamVjdC5wcmV2ZW50RXh0ZW5zaW9ucyhPKVxudmFyIGlzT2JqZWN0ID0gcmVxdWlyZSgnLi9faXMtb2JqZWN0Jyk7XG52YXIgbWV0YSA9IHJlcXVpcmUoJy4vX21ldGEnKS5vbkZyZWV6ZTtcblxucmVxdWlyZSgnLi9fb2JqZWN0LXNhcCcpKCdwcmV2ZW50RXh0ZW5zaW9ucycsIGZ1bmN0aW9uICgkcHJldmVudEV4dGVuc2lvbnMpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIHByZXZlbnRFeHRlbnNpb25zKGl0KSB7XG4gICAgcmV0dXJuICRwcmV2ZW50RXh0ZW5zaW9ucyAmJiBpc09iamVjdChpdCkgPyAkcHJldmVudEV4dGVuc2lvbnMobWV0YShpdCkpIDogaXQ7XG4gIH07XG59KTtcbiIsIi8vIDE5LjEuMi4xNyBPYmplY3Quc2VhbChPKVxudmFyIGlzT2JqZWN0ID0gcmVxdWlyZSgnLi9faXMtb2JqZWN0Jyk7XG52YXIgbWV0YSA9IHJlcXVpcmUoJy4vX21ldGEnKS5vbkZyZWV6ZTtcblxucmVxdWlyZSgnLi9fb2JqZWN0LXNhcCcpKCdzZWFsJywgZnVuY3Rpb24gKCRzZWFsKSB7XG4gIHJldHVybiBmdW5jdGlvbiBzZWFsKGl0KSB7XG4gICAgcmV0dXJuICRzZWFsICYmIGlzT2JqZWN0KGl0KSA/ICRzZWFsKG1ldGEoaXQpKSA6IGl0O1xuICB9O1xufSk7XG4iLCIvLyAxOS4xLjMuMTkgT2JqZWN0LnNldFByb3RvdHlwZU9mKE8sIHByb3RvKVxudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbiRleHBvcnQoJGV4cG9ydC5TLCAnT2JqZWN0JywgeyBzZXRQcm90b3R5cGVPZjogcmVxdWlyZSgnLi9fc2V0LXByb3RvJykuc2V0IH0pO1xuIiwiJ3VzZSBzdHJpY3QnO1xuLy8gMTkuMS4zLjYgT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZygpXG52YXIgY2xhc3NvZiA9IHJlcXVpcmUoJy4vX2NsYXNzb2YnKTtcbnZhciB0ZXN0ID0ge307XG50ZXN0W3JlcXVpcmUoJy4vX3drcycpKCd0b1N0cmluZ1RhZycpXSA9ICd6JztcbmlmICh0ZXN0ICsgJycgIT0gJ1tvYmplY3Qgel0nKSB7XG4gIHJlcXVpcmUoJy4vX3JlZGVmaW5lJykoT2JqZWN0LnByb3RvdHlwZSwgJ3RvU3RyaW5nJywgZnVuY3Rpb24gdG9TdHJpbmcoKSB7XG4gICAgcmV0dXJuICdbb2JqZWN0ICcgKyBjbGFzc29mKHRoaXMpICsgJ10nO1xuICB9LCB0cnVlKTtcbn1cbiIsInZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgJHBhcnNlRmxvYXQgPSByZXF1aXJlKCcuL19wYXJzZS1mbG9hdCcpO1xuLy8gMTguMi40IHBhcnNlRmxvYXQoc3RyaW5nKVxuJGV4cG9ydCgkZXhwb3J0LkcgKyAkZXhwb3J0LkYgKiAocGFyc2VGbG9hdCAhPSAkcGFyc2VGbG9hdCksIHsgcGFyc2VGbG9hdDogJHBhcnNlRmxvYXQgfSk7XG4iLCJ2YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyICRwYXJzZUludCA9IHJlcXVpcmUoJy4vX3BhcnNlLWludCcpO1xuLy8gMTguMi41IHBhcnNlSW50KHN0cmluZywgcmFkaXgpXG4kZXhwb3J0KCRleHBvcnQuRyArICRleHBvcnQuRiAqIChwYXJzZUludCAhPSAkcGFyc2VJbnQpLCB7IHBhcnNlSW50OiAkcGFyc2VJbnQgfSk7XG4iLCIndXNlIHN0cmljdCc7XG52YXIgTElCUkFSWSA9IHJlcXVpcmUoJy4vX2xpYnJhcnknKTtcbnZhciBnbG9iYWwgPSByZXF1aXJlKCcuL19nbG9iYWwnKTtcbnZhciBjdHggPSByZXF1aXJlKCcuL19jdHgnKTtcbnZhciBjbGFzc29mID0gcmVxdWlyZSgnLi9fY2xhc3NvZicpO1xudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciBpc09iamVjdCA9IHJlcXVpcmUoJy4vX2lzLW9iamVjdCcpO1xudmFyIGFGdW5jdGlvbiA9IHJlcXVpcmUoJy4vX2EtZnVuY3Rpb24nKTtcbnZhciBhbkluc3RhbmNlID0gcmVxdWlyZSgnLi9fYW4taW5zdGFuY2UnKTtcbnZhciBmb3JPZiA9IHJlcXVpcmUoJy4vX2Zvci1vZicpO1xudmFyIHNwZWNpZXNDb25zdHJ1Y3RvciA9IHJlcXVpcmUoJy4vX3NwZWNpZXMtY29uc3RydWN0b3InKTtcbnZhciB0YXNrID0gcmVxdWlyZSgnLi9fdGFzaycpLnNldDtcbnZhciBtaWNyb3Rhc2sgPSByZXF1aXJlKCcuL19taWNyb3Rhc2snKSgpO1xudmFyIG5ld1Byb21pc2VDYXBhYmlsaXR5TW9kdWxlID0gcmVxdWlyZSgnLi9fbmV3LXByb21pc2UtY2FwYWJpbGl0eScpO1xudmFyIHBlcmZvcm0gPSByZXF1aXJlKCcuL19wZXJmb3JtJyk7XG52YXIgdXNlckFnZW50ID0gcmVxdWlyZSgnLi9fdXNlci1hZ2VudCcpO1xudmFyIHByb21pc2VSZXNvbHZlID0gcmVxdWlyZSgnLi9fcHJvbWlzZS1yZXNvbHZlJyk7XG52YXIgUFJPTUlTRSA9ICdQcm9taXNlJztcbnZhciBUeXBlRXJyb3IgPSBnbG9iYWwuVHlwZUVycm9yO1xudmFyIHByb2Nlc3MgPSBnbG9iYWwucHJvY2VzcztcbnZhciB2ZXJzaW9ucyA9IHByb2Nlc3MgJiYgcHJvY2Vzcy52ZXJzaW9ucztcbnZhciB2OCA9IHZlcnNpb25zICYmIHZlcnNpb25zLnY4IHx8ICcnO1xudmFyICRQcm9taXNlID0gZ2xvYmFsW1BST01JU0VdO1xudmFyIGlzTm9kZSA9IGNsYXNzb2YocHJvY2VzcykgPT0gJ3Byb2Nlc3MnO1xudmFyIGVtcHR5ID0gZnVuY3Rpb24gKCkgeyAvKiBlbXB0eSAqLyB9O1xudmFyIEludGVybmFsLCBuZXdHZW5lcmljUHJvbWlzZUNhcGFiaWxpdHksIE93blByb21pc2VDYXBhYmlsaXR5LCBXcmFwcGVyO1xudmFyIG5ld1Byb21pc2VDYXBhYmlsaXR5ID0gbmV3R2VuZXJpY1Byb21pc2VDYXBhYmlsaXR5ID0gbmV3UHJvbWlzZUNhcGFiaWxpdHlNb2R1bGUuZjtcblxudmFyIFVTRV9OQVRJVkUgPSAhIWZ1bmN0aW9uICgpIHtcbiAgdHJ5IHtcbiAgICAvLyBjb3JyZWN0IHN1YmNsYXNzaW5nIHdpdGggQEBzcGVjaWVzIHN1cHBvcnRcbiAgICB2YXIgcHJvbWlzZSA9ICRQcm9taXNlLnJlc29sdmUoMSk7XG4gICAgdmFyIEZha2VQcm9taXNlID0gKHByb21pc2UuY29uc3RydWN0b3IgPSB7fSlbcmVxdWlyZSgnLi9fd2tzJykoJ3NwZWNpZXMnKV0gPSBmdW5jdGlvbiAoZXhlYykge1xuICAgICAgZXhlYyhlbXB0eSwgZW1wdHkpO1xuICAgIH07XG4gICAgLy8gdW5oYW5kbGVkIHJlamVjdGlvbnMgdHJhY2tpbmcgc3VwcG9ydCwgTm9kZUpTIFByb21pc2Ugd2l0aG91dCBpdCBmYWlscyBAQHNwZWNpZXMgdGVzdFxuICAgIHJldHVybiAoaXNOb2RlIHx8IHR5cGVvZiBQcm9taXNlUmVqZWN0aW9uRXZlbnQgPT0gJ2Z1bmN0aW9uJylcbiAgICAgICYmIHByb21pc2UudGhlbihlbXB0eSkgaW5zdGFuY2VvZiBGYWtlUHJvbWlzZVxuICAgICAgLy8gdjggNi42IChOb2RlIDEwIGFuZCBDaHJvbWUgNjYpIGhhdmUgYSBidWcgd2l0aCByZXNvbHZpbmcgY3VzdG9tIHRoZW5hYmxlc1xuICAgICAgLy8gaHR0cHM6Ly9idWdzLmNocm9taXVtLm9yZy9wL2Nocm9taXVtL2lzc3Vlcy9kZXRhaWw/aWQ9ODMwNTY1XG4gICAgICAvLyB3ZSBjYW4ndCBkZXRlY3QgaXQgc3luY2hyb25vdXNseSwgc28ganVzdCBjaGVjayB2ZXJzaW9uc1xuICAgICAgJiYgdjguaW5kZXhPZignNi42JykgIT09IDBcbiAgICAgICYmIHVzZXJBZ2VudC5pbmRleE9mKCdDaHJvbWUvNjYnKSA9PT0gLTE7XG4gIH0gY2F0Y2ggKGUpIHsgLyogZW1wdHkgKi8gfVxufSgpO1xuXG4vLyBoZWxwZXJzXG52YXIgaXNUaGVuYWJsZSA9IGZ1bmN0aW9uIChpdCkge1xuICB2YXIgdGhlbjtcbiAgcmV0dXJuIGlzT2JqZWN0KGl0KSAmJiB0eXBlb2YgKHRoZW4gPSBpdC50aGVuKSA9PSAnZnVuY3Rpb24nID8gdGhlbiA6IGZhbHNlO1xufTtcbnZhciBub3RpZnkgPSBmdW5jdGlvbiAocHJvbWlzZSwgaXNSZWplY3QpIHtcbiAgaWYgKHByb21pc2UuX24pIHJldHVybjtcbiAgcHJvbWlzZS5fbiA9IHRydWU7XG4gIHZhciBjaGFpbiA9IHByb21pc2UuX2M7XG4gIG1pY3JvdGFzayhmdW5jdGlvbiAoKSB7XG4gICAgdmFyIHZhbHVlID0gcHJvbWlzZS5fdjtcbiAgICB2YXIgb2sgPSBwcm9taXNlLl9zID09IDE7XG4gICAgdmFyIGkgPSAwO1xuICAgIHZhciBydW4gPSBmdW5jdGlvbiAocmVhY3Rpb24pIHtcbiAgICAgIHZhciBoYW5kbGVyID0gb2sgPyByZWFjdGlvbi5vayA6IHJlYWN0aW9uLmZhaWw7XG4gICAgICB2YXIgcmVzb2x2ZSA9IHJlYWN0aW9uLnJlc29sdmU7XG4gICAgICB2YXIgcmVqZWN0ID0gcmVhY3Rpb24ucmVqZWN0O1xuICAgICAgdmFyIGRvbWFpbiA9IHJlYWN0aW9uLmRvbWFpbjtcbiAgICAgIHZhciByZXN1bHQsIHRoZW4sIGV4aXRlZDtcbiAgICAgIHRyeSB7XG4gICAgICAgIGlmIChoYW5kbGVyKSB7XG4gICAgICAgICAgaWYgKCFvaykge1xuICAgICAgICAgICAgaWYgKHByb21pc2UuX2ggPT0gMikgb25IYW5kbGVVbmhhbmRsZWQocHJvbWlzZSk7XG4gICAgICAgICAgICBwcm9taXNlLl9oID0gMTtcbiAgICAgICAgICB9XG4gICAgICAgICAgaWYgKGhhbmRsZXIgPT09IHRydWUpIHJlc3VsdCA9IHZhbHVlO1xuICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgaWYgKGRvbWFpbikgZG9tYWluLmVudGVyKCk7XG4gICAgICAgICAgICByZXN1bHQgPSBoYW5kbGVyKHZhbHVlKTsgLy8gbWF5IHRocm93XG4gICAgICAgICAgICBpZiAoZG9tYWluKSB7XG4gICAgICAgICAgICAgIGRvbWFpbi5leGl0KCk7XG4gICAgICAgICAgICAgIGV4aXRlZCA9IHRydWU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICAgIGlmIChyZXN1bHQgPT09IHJlYWN0aW9uLnByb21pc2UpIHtcbiAgICAgICAgICAgIHJlamVjdChUeXBlRXJyb3IoJ1Byb21pc2UtY2hhaW4gY3ljbGUnKSk7XG4gICAgICAgICAgfSBlbHNlIGlmICh0aGVuID0gaXNUaGVuYWJsZShyZXN1bHQpKSB7XG4gICAgICAgICAgICB0aGVuLmNhbGwocmVzdWx0LCByZXNvbHZlLCByZWplY3QpO1xuICAgICAgICAgIH0gZWxzZSByZXNvbHZlKHJlc3VsdCk7XG4gICAgICAgIH0gZWxzZSByZWplY3QodmFsdWUpO1xuICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICBpZiAoZG9tYWluICYmICFleGl0ZWQpIGRvbWFpbi5leGl0KCk7XG4gICAgICAgIHJlamVjdChlKTtcbiAgICAgIH1cbiAgICB9O1xuICAgIHdoaWxlIChjaGFpbi5sZW5ndGggPiBpKSBydW4oY2hhaW5baSsrXSk7IC8vIHZhcmlhYmxlIGxlbmd0aCAtIGNhbid0IHVzZSBmb3JFYWNoXG4gICAgcHJvbWlzZS5fYyA9IFtdO1xuICAgIHByb21pc2UuX24gPSBmYWxzZTtcbiAgICBpZiAoaXNSZWplY3QgJiYgIXByb21pc2UuX2gpIG9uVW5oYW5kbGVkKHByb21pc2UpO1xuICB9KTtcbn07XG52YXIgb25VbmhhbmRsZWQgPSBmdW5jdGlvbiAocHJvbWlzZSkge1xuICB0YXNrLmNhbGwoZ2xvYmFsLCBmdW5jdGlvbiAoKSB7XG4gICAgdmFyIHZhbHVlID0gcHJvbWlzZS5fdjtcbiAgICB2YXIgdW5oYW5kbGVkID0gaXNVbmhhbmRsZWQocHJvbWlzZSk7XG4gICAgdmFyIHJlc3VsdCwgaGFuZGxlciwgY29uc29sZTtcbiAgICBpZiAodW5oYW5kbGVkKSB7XG4gICAgICByZXN1bHQgPSBwZXJmb3JtKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgaWYgKGlzTm9kZSkge1xuICAgICAgICAgIHByb2Nlc3MuZW1pdCgndW5oYW5kbGVkUmVqZWN0aW9uJywgdmFsdWUsIHByb21pc2UpO1xuICAgICAgICB9IGVsc2UgaWYgKGhhbmRsZXIgPSBnbG9iYWwub251bmhhbmRsZWRyZWplY3Rpb24pIHtcbiAgICAgICAgICBoYW5kbGVyKHsgcHJvbWlzZTogcHJvbWlzZSwgcmVhc29uOiB2YWx1ZSB9KTtcbiAgICAgICAgfSBlbHNlIGlmICgoY29uc29sZSA9IGdsb2JhbC5jb25zb2xlKSAmJiBjb25zb2xlLmVycm9yKSB7XG4gICAgICAgICAgY29uc29sZS5lcnJvcignVW5oYW5kbGVkIHByb21pc2UgcmVqZWN0aW9uJywgdmFsdWUpO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICAgIC8vIEJyb3dzZXJzIHNob3VsZCBub3QgdHJpZ2dlciBgcmVqZWN0aW9uSGFuZGxlZGAgZXZlbnQgaWYgaXQgd2FzIGhhbmRsZWQgaGVyZSwgTm9kZUpTIC0gc2hvdWxkXG4gICAgICBwcm9taXNlLl9oID0gaXNOb2RlIHx8IGlzVW5oYW5kbGVkKHByb21pc2UpID8gMiA6IDE7XG4gICAgfSBwcm9taXNlLl9hID0gdW5kZWZpbmVkO1xuICAgIGlmICh1bmhhbmRsZWQgJiYgcmVzdWx0LmUpIHRocm93IHJlc3VsdC52O1xuICB9KTtcbn07XG52YXIgaXNVbmhhbmRsZWQgPSBmdW5jdGlvbiAocHJvbWlzZSkge1xuICByZXR1cm4gcHJvbWlzZS5faCAhPT0gMSAmJiAocHJvbWlzZS5fYSB8fCBwcm9taXNlLl9jKS5sZW5ndGggPT09IDA7XG59O1xudmFyIG9uSGFuZGxlVW5oYW5kbGVkID0gZnVuY3Rpb24gKHByb21pc2UpIHtcbiAgdGFzay5jYWxsKGdsb2JhbCwgZnVuY3Rpb24gKCkge1xuICAgIHZhciBoYW5kbGVyO1xuICAgIGlmIChpc05vZGUpIHtcbiAgICAgIHByb2Nlc3MuZW1pdCgncmVqZWN0aW9uSGFuZGxlZCcsIHByb21pc2UpO1xuICAgIH0gZWxzZSBpZiAoaGFuZGxlciA9IGdsb2JhbC5vbnJlamVjdGlvbmhhbmRsZWQpIHtcbiAgICAgIGhhbmRsZXIoeyBwcm9taXNlOiBwcm9taXNlLCByZWFzb246IHByb21pc2UuX3YgfSk7XG4gICAgfVxuICB9KTtcbn07XG52YXIgJHJlamVjdCA9IGZ1bmN0aW9uICh2YWx1ZSkge1xuICB2YXIgcHJvbWlzZSA9IHRoaXM7XG4gIGlmIChwcm9taXNlLl9kKSByZXR1cm47XG4gIHByb21pc2UuX2QgPSB0cnVlO1xuICBwcm9taXNlID0gcHJvbWlzZS5fdyB8fCBwcm9taXNlOyAvLyB1bndyYXBcbiAgcHJvbWlzZS5fdiA9IHZhbHVlO1xuICBwcm9taXNlLl9zID0gMjtcbiAgaWYgKCFwcm9taXNlLl9hKSBwcm9taXNlLl9hID0gcHJvbWlzZS5fYy5zbGljZSgpO1xuICBub3RpZnkocHJvbWlzZSwgdHJ1ZSk7XG59O1xudmFyICRyZXNvbHZlID0gZnVuY3Rpb24gKHZhbHVlKSB7XG4gIHZhciBwcm9taXNlID0gdGhpcztcbiAgdmFyIHRoZW47XG4gIGlmIChwcm9taXNlLl9kKSByZXR1cm47XG4gIHByb21pc2UuX2QgPSB0cnVlO1xuICBwcm9taXNlID0gcHJvbWlzZS5fdyB8fCBwcm9taXNlOyAvLyB1bndyYXBcbiAgdHJ5IHtcbiAgICBpZiAocHJvbWlzZSA9PT0gdmFsdWUpIHRocm93IFR5cGVFcnJvcihcIlByb21pc2UgY2FuJ3QgYmUgcmVzb2x2ZWQgaXRzZWxmXCIpO1xuICAgIGlmICh0aGVuID0gaXNUaGVuYWJsZSh2YWx1ZSkpIHtcbiAgICAgIG1pY3JvdGFzayhmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciB3cmFwcGVyID0geyBfdzogcHJvbWlzZSwgX2Q6IGZhbHNlIH07IC8vIHdyYXBcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICB0aGVuLmNhbGwodmFsdWUsIGN0eCgkcmVzb2x2ZSwgd3JhcHBlciwgMSksIGN0eCgkcmVqZWN0LCB3cmFwcGVyLCAxKSk7XG4gICAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgICAkcmVqZWN0LmNhbGwod3JhcHBlciwgZSk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH0gZWxzZSB7XG4gICAgICBwcm9taXNlLl92ID0gdmFsdWU7XG4gICAgICBwcm9taXNlLl9zID0gMTtcbiAgICAgIG5vdGlmeShwcm9taXNlLCBmYWxzZSk7XG4gICAgfVxuICB9IGNhdGNoIChlKSB7XG4gICAgJHJlamVjdC5jYWxsKHsgX3c6IHByb21pc2UsIF9kOiBmYWxzZSB9LCBlKTsgLy8gd3JhcFxuICB9XG59O1xuXG4vLyBjb25zdHJ1Y3RvciBwb2x5ZmlsbFxuaWYgKCFVU0VfTkFUSVZFKSB7XG4gIC8vIDI1LjQuMy4xIFByb21pc2UoZXhlY3V0b3IpXG4gICRQcm9taXNlID0gZnVuY3Rpb24gUHJvbWlzZShleGVjdXRvcikge1xuICAgIGFuSW5zdGFuY2UodGhpcywgJFByb21pc2UsIFBST01JU0UsICdfaCcpO1xuICAgIGFGdW5jdGlvbihleGVjdXRvcik7XG4gICAgSW50ZXJuYWwuY2FsbCh0aGlzKTtcbiAgICB0cnkge1xuICAgICAgZXhlY3V0b3IoY3R4KCRyZXNvbHZlLCB0aGlzLCAxKSwgY3R4KCRyZWplY3QsIHRoaXMsIDEpKTtcbiAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgICRyZWplY3QuY2FsbCh0aGlzLCBlcnIpO1xuICAgIH1cbiAgfTtcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVudXNlZC12YXJzXG4gIEludGVybmFsID0gZnVuY3Rpb24gUHJvbWlzZShleGVjdXRvcikge1xuICAgIHRoaXMuX2MgPSBbXTsgICAgICAgICAgICAgLy8gPC0gYXdhaXRpbmcgcmVhY3Rpb25zXG4gICAgdGhpcy5fYSA9IHVuZGVmaW5lZDsgICAgICAvLyA8LSBjaGVja2VkIGluIGlzVW5oYW5kbGVkIHJlYWN0aW9uc1xuICAgIHRoaXMuX3MgPSAwOyAgICAgICAgICAgICAgLy8gPC0gc3RhdGVcbiAgICB0aGlzLl9kID0gZmFsc2U7ICAgICAgICAgIC8vIDwtIGRvbmVcbiAgICB0aGlzLl92ID0gdW5kZWZpbmVkOyAgICAgIC8vIDwtIHZhbHVlXG4gICAgdGhpcy5faCA9IDA7ICAgICAgICAgICAgICAvLyA8LSByZWplY3Rpb24gc3RhdGUsIDAgLSBkZWZhdWx0LCAxIC0gaGFuZGxlZCwgMiAtIHVuaGFuZGxlZFxuICAgIHRoaXMuX24gPSBmYWxzZTsgICAgICAgICAgLy8gPC0gbm90aWZ5XG4gIH07XG4gIEludGVybmFsLnByb3RvdHlwZSA9IHJlcXVpcmUoJy4vX3JlZGVmaW5lLWFsbCcpKCRQcm9taXNlLnByb3RvdHlwZSwge1xuICAgIC8vIDI1LjQuNS4zIFByb21pc2UucHJvdG90eXBlLnRoZW4ob25GdWxmaWxsZWQsIG9uUmVqZWN0ZWQpXG4gICAgdGhlbjogZnVuY3Rpb24gdGhlbihvbkZ1bGZpbGxlZCwgb25SZWplY3RlZCkge1xuICAgICAgdmFyIHJlYWN0aW9uID0gbmV3UHJvbWlzZUNhcGFiaWxpdHkoc3BlY2llc0NvbnN0cnVjdG9yKHRoaXMsICRQcm9taXNlKSk7XG4gICAgICByZWFjdGlvbi5vayA9IHR5cGVvZiBvbkZ1bGZpbGxlZCA9PSAnZnVuY3Rpb24nID8gb25GdWxmaWxsZWQgOiB0cnVlO1xuICAgICAgcmVhY3Rpb24uZmFpbCA9IHR5cGVvZiBvblJlamVjdGVkID09ICdmdW5jdGlvbicgJiYgb25SZWplY3RlZDtcbiAgICAgIHJlYWN0aW9uLmRvbWFpbiA9IGlzTm9kZSA/IHByb2Nlc3MuZG9tYWluIDogdW5kZWZpbmVkO1xuICAgICAgdGhpcy5fYy5wdXNoKHJlYWN0aW9uKTtcbiAgICAgIGlmICh0aGlzLl9hKSB0aGlzLl9hLnB1c2gocmVhY3Rpb24pO1xuICAgICAgaWYgKHRoaXMuX3MpIG5vdGlmeSh0aGlzLCBmYWxzZSk7XG4gICAgICByZXR1cm4gcmVhY3Rpb24ucHJvbWlzZTtcbiAgICB9LFxuICAgIC8vIDI1LjQuNS4xIFByb21pc2UucHJvdG90eXBlLmNhdGNoKG9uUmVqZWN0ZWQpXG4gICAgJ2NhdGNoJzogZnVuY3Rpb24gKG9uUmVqZWN0ZWQpIHtcbiAgICAgIHJldHVybiB0aGlzLnRoZW4odW5kZWZpbmVkLCBvblJlamVjdGVkKTtcbiAgICB9XG4gIH0pO1xuICBPd25Qcm9taXNlQ2FwYWJpbGl0eSA9IGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgcHJvbWlzZSA9IG5ldyBJbnRlcm5hbCgpO1xuICAgIHRoaXMucHJvbWlzZSA9IHByb21pc2U7XG4gICAgdGhpcy5yZXNvbHZlID0gY3R4KCRyZXNvbHZlLCBwcm9taXNlLCAxKTtcbiAgICB0aGlzLnJlamVjdCA9IGN0eCgkcmVqZWN0LCBwcm9taXNlLCAxKTtcbiAgfTtcbiAgbmV3UHJvbWlzZUNhcGFiaWxpdHlNb2R1bGUuZiA9IG5ld1Byb21pc2VDYXBhYmlsaXR5ID0gZnVuY3Rpb24gKEMpIHtcbiAgICByZXR1cm4gQyA9PT0gJFByb21pc2UgfHwgQyA9PT0gV3JhcHBlclxuICAgICAgPyBuZXcgT3duUHJvbWlzZUNhcGFiaWxpdHkoQylcbiAgICAgIDogbmV3R2VuZXJpY1Byb21pc2VDYXBhYmlsaXR5KEMpO1xuICB9O1xufVxuXG4kZXhwb3J0KCRleHBvcnQuRyArICRleHBvcnQuVyArICRleHBvcnQuRiAqICFVU0VfTkFUSVZFLCB7IFByb21pc2U6ICRQcm9taXNlIH0pO1xucmVxdWlyZSgnLi9fc2V0LXRvLXN0cmluZy10YWcnKSgkUHJvbWlzZSwgUFJPTUlTRSk7XG5yZXF1aXJlKCcuL19zZXQtc3BlY2llcycpKFBST01JU0UpO1xuV3JhcHBlciA9IHJlcXVpcmUoJy4vX2NvcmUnKVtQUk9NSVNFXTtcblxuLy8gc3RhdGljc1xuJGV4cG9ydCgkZXhwb3J0LlMgKyAkZXhwb3J0LkYgKiAhVVNFX05BVElWRSwgUFJPTUlTRSwge1xuICAvLyAyNS40LjQuNSBQcm9taXNlLnJlamVjdChyKVxuICByZWplY3Q6IGZ1bmN0aW9uIHJlamVjdChyKSB7XG4gICAgdmFyIGNhcGFiaWxpdHkgPSBuZXdQcm9taXNlQ2FwYWJpbGl0eSh0aGlzKTtcbiAgICB2YXIgJCRyZWplY3QgPSBjYXBhYmlsaXR5LnJlamVjdDtcbiAgICAkJHJlamVjdChyKTtcbiAgICByZXR1cm4gY2FwYWJpbGl0eS5wcm9taXNlO1xuICB9XG59KTtcbiRleHBvcnQoJGV4cG9ydC5TICsgJGV4cG9ydC5GICogKExJQlJBUlkgfHwgIVVTRV9OQVRJVkUpLCBQUk9NSVNFLCB7XG4gIC8vIDI1LjQuNC42IFByb21pc2UucmVzb2x2ZSh4KVxuICByZXNvbHZlOiBmdW5jdGlvbiByZXNvbHZlKHgpIHtcbiAgICByZXR1cm4gcHJvbWlzZVJlc29sdmUoTElCUkFSWSAmJiB0aGlzID09PSBXcmFwcGVyID8gJFByb21pc2UgOiB0aGlzLCB4KTtcbiAgfVxufSk7XG4kZXhwb3J0KCRleHBvcnQuUyArICRleHBvcnQuRiAqICEoVVNFX05BVElWRSAmJiByZXF1aXJlKCcuL19pdGVyLWRldGVjdCcpKGZ1bmN0aW9uIChpdGVyKSB7XG4gICRQcm9taXNlLmFsbChpdGVyKVsnY2F0Y2gnXShlbXB0eSk7XG59KSksIFBST01JU0UsIHtcbiAgLy8gMjUuNC40LjEgUHJvbWlzZS5hbGwoaXRlcmFibGUpXG4gIGFsbDogZnVuY3Rpb24gYWxsKGl0ZXJhYmxlKSB7XG4gICAgdmFyIEMgPSB0aGlzO1xuICAgIHZhciBjYXBhYmlsaXR5ID0gbmV3UHJvbWlzZUNhcGFiaWxpdHkoQyk7XG4gICAgdmFyIHJlc29sdmUgPSBjYXBhYmlsaXR5LnJlc29sdmU7XG4gICAgdmFyIHJlamVjdCA9IGNhcGFiaWxpdHkucmVqZWN0O1xuICAgIHZhciByZXN1bHQgPSBwZXJmb3JtKGZ1bmN0aW9uICgpIHtcbiAgICAgIHZhciB2YWx1ZXMgPSBbXTtcbiAgICAgIHZhciBpbmRleCA9IDA7XG4gICAgICB2YXIgcmVtYWluaW5nID0gMTtcbiAgICAgIGZvck9mKGl0ZXJhYmxlLCBmYWxzZSwgZnVuY3Rpb24gKHByb21pc2UpIHtcbiAgICAgICAgdmFyICRpbmRleCA9IGluZGV4Kys7XG4gICAgICAgIHZhciBhbHJlYWR5Q2FsbGVkID0gZmFsc2U7XG4gICAgICAgIHZhbHVlcy5wdXNoKHVuZGVmaW5lZCk7XG4gICAgICAgIHJlbWFpbmluZysrO1xuICAgICAgICBDLnJlc29sdmUocHJvbWlzZSkudGhlbihmdW5jdGlvbiAodmFsdWUpIHtcbiAgICAgICAgICBpZiAoYWxyZWFkeUNhbGxlZCkgcmV0dXJuO1xuICAgICAgICAgIGFscmVhZHlDYWxsZWQgPSB0cnVlO1xuICAgICAgICAgIHZhbHVlc1skaW5kZXhdID0gdmFsdWU7XG4gICAgICAgICAgLS1yZW1haW5pbmcgfHwgcmVzb2x2ZSh2YWx1ZXMpO1xuICAgICAgICB9LCByZWplY3QpO1xuICAgICAgfSk7XG4gICAgICAtLXJlbWFpbmluZyB8fCByZXNvbHZlKHZhbHVlcyk7XG4gICAgfSk7XG4gICAgaWYgKHJlc3VsdC5lKSByZWplY3QocmVzdWx0LnYpO1xuICAgIHJldHVybiBjYXBhYmlsaXR5LnByb21pc2U7XG4gIH0sXG4gIC8vIDI1LjQuNC40IFByb21pc2UucmFjZShpdGVyYWJsZSlcbiAgcmFjZTogZnVuY3Rpb24gcmFjZShpdGVyYWJsZSkge1xuICAgIHZhciBDID0gdGhpcztcbiAgICB2YXIgY2FwYWJpbGl0eSA9IG5ld1Byb21pc2VDYXBhYmlsaXR5KEMpO1xuICAgIHZhciByZWplY3QgPSBjYXBhYmlsaXR5LnJlamVjdDtcbiAgICB2YXIgcmVzdWx0ID0gcGVyZm9ybShmdW5jdGlvbiAoKSB7XG4gICAgICBmb3JPZihpdGVyYWJsZSwgZmFsc2UsIGZ1bmN0aW9uIChwcm9taXNlKSB7XG4gICAgICAgIEMucmVzb2x2ZShwcm9taXNlKS50aGVuKGNhcGFiaWxpdHkucmVzb2x2ZSwgcmVqZWN0KTtcbiAgICAgIH0pO1xuICAgIH0pO1xuICAgIGlmIChyZXN1bHQuZSkgcmVqZWN0KHJlc3VsdC52KTtcbiAgICByZXR1cm4gY2FwYWJpbGl0eS5wcm9taXNlO1xuICB9XG59KTtcbiIsIi8vIDI2LjEuMSBSZWZsZWN0LmFwcGx5KHRhcmdldCwgdGhpc0FyZ3VtZW50LCBhcmd1bWVudHNMaXN0KVxudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciBhRnVuY3Rpb24gPSByZXF1aXJlKCcuL19hLWZ1bmN0aW9uJyk7XG52YXIgYW5PYmplY3QgPSByZXF1aXJlKCcuL19hbi1vYmplY3QnKTtcbnZhciByQXBwbHkgPSAocmVxdWlyZSgnLi9fZ2xvYmFsJykuUmVmbGVjdCB8fCB7fSkuYXBwbHk7XG52YXIgZkFwcGx5ID0gRnVuY3Rpb24uYXBwbHk7XG4vLyBNUyBFZGdlIGFyZ3VtZW50c0xpc3QgYXJndW1lbnQgaXMgb3B0aW9uYWxcbiRleHBvcnQoJGV4cG9ydC5TICsgJGV4cG9ydC5GICogIXJlcXVpcmUoJy4vX2ZhaWxzJykoZnVuY3Rpb24gKCkge1xuICByQXBwbHkoZnVuY3Rpb24gKCkgeyAvKiBlbXB0eSAqLyB9KTtcbn0pLCAnUmVmbGVjdCcsIHtcbiAgYXBwbHk6IGZ1bmN0aW9uIGFwcGx5KHRhcmdldCwgdGhpc0FyZ3VtZW50LCBhcmd1bWVudHNMaXN0KSB7XG4gICAgdmFyIFQgPSBhRnVuY3Rpb24odGFyZ2V0KTtcbiAgICB2YXIgTCA9IGFuT2JqZWN0KGFyZ3VtZW50c0xpc3QpO1xuICAgIHJldHVybiByQXBwbHkgPyByQXBwbHkoVCwgdGhpc0FyZ3VtZW50LCBMKSA6IGZBcHBseS5jYWxsKFQsIHRoaXNBcmd1bWVudCwgTCk7XG4gIH1cbn0pO1xuIiwiLy8gMjYuMS4yIFJlZmxlY3QuY29uc3RydWN0KHRhcmdldCwgYXJndW1lbnRzTGlzdCBbLCBuZXdUYXJnZXRdKVxudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciBjcmVhdGUgPSByZXF1aXJlKCcuL19vYmplY3QtY3JlYXRlJyk7XG52YXIgYUZ1bmN0aW9uID0gcmVxdWlyZSgnLi9fYS1mdW5jdGlvbicpO1xudmFyIGFuT2JqZWN0ID0gcmVxdWlyZSgnLi9fYW4tb2JqZWN0Jyk7XG52YXIgaXNPYmplY3QgPSByZXF1aXJlKCcuL19pcy1vYmplY3QnKTtcbnZhciBmYWlscyA9IHJlcXVpcmUoJy4vX2ZhaWxzJyk7XG52YXIgYmluZCA9IHJlcXVpcmUoJy4vX2JpbmQnKTtcbnZhciByQ29uc3RydWN0ID0gKHJlcXVpcmUoJy4vX2dsb2JhbCcpLlJlZmxlY3QgfHwge30pLmNvbnN0cnVjdDtcblxuLy8gTVMgRWRnZSBzdXBwb3J0cyBvbmx5IDIgYXJndW1lbnRzIGFuZCBhcmd1bWVudHNMaXN0IGFyZ3VtZW50IGlzIG9wdGlvbmFsXG4vLyBGRiBOaWdodGx5IHNldHMgdGhpcmQgYXJndW1lbnQgYXMgYG5ldy50YXJnZXRgLCBidXQgZG9lcyBub3QgY3JlYXRlIGB0aGlzYCBmcm9tIGl0XG52YXIgTkVXX1RBUkdFVF9CVUcgPSBmYWlscyhmdW5jdGlvbiAoKSB7XG4gIGZ1bmN0aW9uIEYoKSB7IC8qIGVtcHR5ICovIH1cbiAgcmV0dXJuICEockNvbnN0cnVjdChmdW5jdGlvbiAoKSB7IC8qIGVtcHR5ICovIH0sIFtdLCBGKSBpbnN0YW5jZW9mIEYpO1xufSk7XG52YXIgQVJHU19CVUcgPSAhZmFpbHMoZnVuY3Rpb24gKCkge1xuICByQ29uc3RydWN0KGZ1bmN0aW9uICgpIHsgLyogZW1wdHkgKi8gfSk7XG59KTtcblxuJGV4cG9ydCgkZXhwb3J0LlMgKyAkZXhwb3J0LkYgKiAoTkVXX1RBUkdFVF9CVUcgfHwgQVJHU19CVUcpLCAnUmVmbGVjdCcsIHtcbiAgY29uc3RydWN0OiBmdW5jdGlvbiBjb25zdHJ1Y3QoVGFyZ2V0LCBhcmdzIC8qICwgbmV3VGFyZ2V0ICovKSB7XG4gICAgYUZ1bmN0aW9uKFRhcmdldCk7XG4gICAgYW5PYmplY3QoYXJncyk7XG4gICAgdmFyIG5ld1RhcmdldCA9IGFyZ3VtZW50cy5sZW5ndGggPCAzID8gVGFyZ2V0IDogYUZ1bmN0aW9uKGFyZ3VtZW50c1syXSk7XG4gICAgaWYgKEFSR1NfQlVHICYmICFORVdfVEFSR0VUX0JVRykgcmV0dXJuIHJDb25zdHJ1Y3QoVGFyZ2V0LCBhcmdzLCBuZXdUYXJnZXQpO1xuICAgIGlmIChUYXJnZXQgPT0gbmV3VGFyZ2V0KSB7XG4gICAgICAvLyB3L28gYWx0ZXJlZCBuZXdUYXJnZXQsIG9wdGltaXphdGlvbiBmb3IgMC00IGFyZ3VtZW50c1xuICAgICAgc3dpdGNoIChhcmdzLmxlbmd0aCkge1xuICAgICAgICBjYXNlIDA6IHJldHVybiBuZXcgVGFyZ2V0KCk7XG4gICAgICAgIGNhc2UgMTogcmV0dXJuIG5ldyBUYXJnZXQoYXJnc1swXSk7XG4gICAgICAgIGNhc2UgMjogcmV0dXJuIG5ldyBUYXJnZXQoYXJnc1swXSwgYXJnc1sxXSk7XG4gICAgICAgIGNhc2UgMzogcmV0dXJuIG5ldyBUYXJnZXQoYXJnc1swXSwgYXJnc1sxXSwgYXJnc1syXSk7XG4gICAgICAgIGNhc2UgNDogcmV0dXJuIG5ldyBUYXJnZXQoYXJnc1swXSwgYXJnc1sxXSwgYXJnc1syXSwgYXJnc1szXSk7XG4gICAgICB9XG4gICAgICAvLyB3L28gYWx0ZXJlZCBuZXdUYXJnZXQsIGxvdCBvZiBhcmd1bWVudHMgY2FzZVxuICAgICAgdmFyICRhcmdzID0gW251bGxdO1xuICAgICAgJGFyZ3MucHVzaC5hcHBseSgkYXJncywgYXJncyk7XG4gICAgICByZXR1cm4gbmV3IChiaW5kLmFwcGx5KFRhcmdldCwgJGFyZ3MpKSgpO1xuICAgIH1cbiAgICAvLyB3aXRoIGFsdGVyZWQgbmV3VGFyZ2V0LCBub3Qgc3VwcG9ydCBidWlsdC1pbiBjb25zdHJ1Y3RvcnNcbiAgICB2YXIgcHJvdG8gPSBuZXdUYXJnZXQucHJvdG90eXBlO1xuICAgIHZhciBpbnN0YW5jZSA9IGNyZWF0ZShpc09iamVjdChwcm90bykgPyBwcm90byA6IE9iamVjdC5wcm90b3R5cGUpO1xuICAgIHZhciByZXN1bHQgPSBGdW5jdGlvbi5hcHBseS5jYWxsKFRhcmdldCwgaW5zdGFuY2UsIGFyZ3MpO1xuICAgIHJldHVybiBpc09iamVjdChyZXN1bHQpID8gcmVzdWx0IDogaW5zdGFuY2U7XG4gIH1cbn0pO1xuIiwiLy8gMjYuMS4zIFJlZmxlY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBwcm9wZXJ0eUtleSwgYXR0cmlidXRlcylcbnZhciBkUCA9IHJlcXVpcmUoJy4vX29iamVjdC1kcCcpO1xudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciBhbk9iamVjdCA9IHJlcXVpcmUoJy4vX2FuLW9iamVjdCcpO1xudmFyIHRvUHJpbWl0aXZlID0gcmVxdWlyZSgnLi9fdG8tcHJpbWl0aXZlJyk7XG5cbi8vIE1TIEVkZ2UgaGFzIGJyb2tlbiBSZWZsZWN0LmRlZmluZVByb3BlcnR5IC0gdGhyb3dpbmcgaW5zdGVhZCBvZiByZXR1cm5pbmcgZmFsc2VcbiRleHBvcnQoJGV4cG9ydC5TICsgJGV4cG9ydC5GICogcmVxdWlyZSgnLi9fZmFpbHMnKShmdW5jdGlvbiAoKSB7XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby11bmRlZlxuICBSZWZsZWN0LmRlZmluZVByb3BlcnR5KGRQLmYoe30sIDEsIHsgdmFsdWU6IDEgfSksIDEsIHsgdmFsdWU6IDIgfSk7XG59KSwgJ1JlZmxlY3QnLCB7XG4gIGRlZmluZVByb3BlcnR5OiBmdW5jdGlvbiBkZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIHByb3BlcnR5S2V5LCBhdHRyaWJ1dGVzKSB7XG4gICAgYW5PYmplY3QodGFyZ2V0KTtcbiAgICBwcm9wZXJ0eUtleSA9IHRvUHJpbWl0aXZlKHByb3BlcnR5S2V5LCB0cnVlKTtcbiAgICBhbk9iamVjdChhdHRyaWJ1dGVzKTtcbiAgICB0cnkge1xuICAgICAgZFAuZih0YXJnZXQsIHByb3BlcnR5S2V5LCBhdHRyaWJ1dGVzKTtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gIH1cbn0pO1xuIiwiLy8gMjYuMS40IFJlZmxlY3QuZGVsZXRlUHJvcGVydHkodGFyZ2V0LCBwcm9wZXJ0eUtleSlcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgZ09QRCA9IHJlcXVpcmUoJy4vX29iamVjdC1nb3BkJykuZjtcbnZhciBhbk9iamVjdCA9IHJlcXVpcmUoJy4vX2FuLW9iamVjdCcpO1xuXG4kZXhwb3J0KCRleHBvcnQuUywgJ1JlZmxlY3QnLCB7XG4gIGRlbGV0ZVByb3BlcnR5OiBmdW5jdGlvbiBkZWxldGVQcm9wZXJ0eSh0YXJnZXQsIHByb3BlcnR5S2V5KSB7XG4gICAgdmFyIGRlc2MgPSBnT1BEKGFuT2JqZWN0KHRhcmdldCksIHByb3BlcnR5S2V5KTtcbiAgICByZXR1cm4gZGVzYyAmJiAhZGVzYy5jb25maWd1cmFibGUgPyBmYWxzZSA6IGRlbGV0ZSB0YXJnZXRbcHJvcGVydHlLZXldO1xuICB9XG59KTtcbiIsIid1c2Ugc3RyaWN0Jztcbi8vIDI2LjEuNSBSZWZsZWN0LmVudW1lcmF0ZSh0YXJnZXQpXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyIGFuT2JqZWN0ID0gcmVxdWlyZSgnLi9fYW4tb2JqZWN0Jyk7XG52YXIgRW51bWVyYXRlID0gZnVuY3Rpb24gKGl0ZXJhdGVkKSB7XG4gIHRoaXMuX3QgPSBhbk9iamVjdChpdGVyYXRlZCk7IC8vIHRhcmdldFxuICB0aGlzLl9pID0gMDsgICAgICAgICAgICAgICAgICAvLyBuZXh0IGluZGV4XG4gIHZhciBrZXlzID0gdGhpcy5fayA9IFtdOyAgICAgIC8vIGtleXNcbiAgdmFyIGtleTtcbiAgZm9yIChrZXkgaW4gaXRlcmF0ZWQpIGtleXMucHVzaChrZXkpO1xufTtcbnJlcXVpcmUoJy4vX2l0ZXItY3JlYXRlJykoRW51bWVyYXRlLCAnT2JqZWN0JywgZnVuY3Rpb24gKCkge1xuICB2YXIgdGhhdCA9IHRoaXM7XG4gIHZhciBrZXlzID0gdGhhdC5faztcbiAgdmFyIGtleTtcbiAgZG8ge1xuICAgIGlmICh0aGF0Ll9pID49IGtleXMubGVuZ3RoKSByZXR1cm4geyB2YWx1ZTogdW5kZWZpbmVkLCBkb25lOiB0cnVlIH07XG4gIH0gd2hpbGUgKCEoKGtleSA9IGtleXNbdGhhdC5faSsrXSkgaW4gdGhhdC5fdCkpO1xuICByZXR1cm4geyB2YWx1ZToga2V5LCBkb25lOiBmYWxzZSB9O1xufSk7XG5cbiRleHBvcnQoJGV4cG9ydC5TLCAnUmVmbGVjdCcsIHtcbiAgZW51bWVyYXRlOiBmdW5jdGlvbiBlbnVtZXJhdGUodGFyZ2V0KSB7XG4gICAgcmV0dXJuIG5ldyBFbnVtZXJhdGUodGFyZ2V0KTtcbiAgfVxufSk7XG4iLCIvLyAyNi4xLjcgUmVmbGVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IodGFyZ2V0LCBwcm9wZXJ0eUtleSlcbnZhciBnT1BEID0gcmVxdWlyZSgnLi9fb2JqZWN0LWdvcGQnKTtcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgYW5PYmplY3QgPSByZXF1aXJlKCcuL19hbi1vYmplY3QnKTtcblxuJGV4cG9ydCgkZXhwb3J0LlMsICdSZWZsZWN0Jywge1xuICBnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3I6IGZ1bmN0aW9uIGdldE93blByb3BlcnR5RGVzY3JpcHRvcih0YXJnZXQsIHByb3BlcnR5S2V5KSB7XG4gICAgcmV0dXJuIGdPUEQuZihhbk9iamVjdCh0YXJnZXQpLCBwcm9wZXJ0eUtleSk7XG4gIH1cbn0pO1xuIiwiLy8gMjYuMS44IFJlZmxlY3QuZ2V0UHJvdG90eXBlT2YodGFyZ2V0KVxudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciBnZXRQcm90byA9IHJlcXVpcmUoJy4vX29iamVjdC1ncG8nKTtcbnZhciBhbk9iamVjdCA9IHJlcXVpcmUoJy4vX2FuLW9iamVjdCcpO1xuXG4kZXhwb3J0KCRleHBvcnQuUywgJ1JlZmxlY3QnLCB7XG4gIGdldFByb3RvdHlwZU9mOiBmdW5jdGlvbiBnZXRQcm90b3R5cGVPZih0YXJnZXQpIHtcbiAgICByZXR1cm4gZ2V0UHJvdG8oYW5PYmplY3QodGFyZ2V0KSk7XG4gIH1cbn0pO1xuIiwiLy8gMjYuMS42IFJlZmxlY3QuZ2V0KHRhcmdldCwgcHJvcGVydHlLZXkgWywgcmVjZWl2ZXJdKVxudmFyIGdPUEQgPSByZXF1aXJlKCcuL19vYmplY3QtZ29wZCcpO1xudmFyIGdldFByb3RvdHlwZU9mID0gcmVxdWlyZSgnLi9fb2JqZWN0LWdwbycpO1xudmFyIGhhcyA9IHJlcXVpcmUoJy4vX2hhcycpO1xudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciBpc09iamVjdCA9IHJlcXVpcmUoJy4vX2lzLW9iamVjdCcpO1xudmFyIGFuT2JqZWN0ID0gcmVxdWlyZSgnLi9fYW4tb2JqZWN0Jyk7XG5cbmZ1bmN0aW9uIGdldCh0YXJnZXQsIHByb3BlcnR5S2V5IC8qICwgcmVjZWl2ZXIgKi8pIHtcbiAgdmFyIHJlY2VpdmVyID0gYXJndW1lbnRzLmxlbmd0aCA8IDMgPyB0YXJnZXQgOiBhcmd1bWVudHNbMl07XG4gIHZhciBkZXNjLCBwcm90bztcbiAgaWYgKGFuT2JqZWN0KHRhcmdldCkgPT09IHJlY2VpdmVyKSByZXR1cm4gdGFyZ2V0W3Byb3BlcnR5S2V5XTtcbiAgaWYgKGRlc2MgPSBnT1BELmYodGFyZ2V0LCBwcm9wZXJ0eUtleSkpIHJldHVybiBoYXMoZGVzYywgJ3ZhbHVlJylcbiAgICA/IGRlc2MudmFsdWVcbiAgICA6IGRlc2MuZ2V0ICE9PSB1bmRlZmluZWRcbiAgICAgID8gZGVzYy5nZXQuY2FsbChyZWNlaXZlcilcbiAgICAgIDogdW5kZWZpbmVkO1xuICBpZiAoaXNPYmplY3QocHJvdG8gPSBnZXRQcm90b3R5cGVPZih0YXJnZXQpKSkgcmV0dXJuIGdldChwcm90bywgcHJvcGVydHlLZXksIHJlY2VpdmVyKTtcbn1cblxuJGV4cG9ydCgkZXhwb3J0LlMsICdSZWZsZWN0JywgeyBnZXQ6IGdldCB9KTtcbiIsIi8vIDI2LjEuOSBSZWZsZWN0Lmhhcyh0YXJnZXQsIHByb3BlcnR5S2V5KVxudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcblxuJGV4cG9ydCgkZXhwb3J0LlMsICdSZWZsZWN0Jywge1xuICBoYXM6IGZ1bmN0aW9uIGhhcyh0YXJnZXQsIHByb3BlcnR5S2V5KSB7XG4gICAgcmV0dXJuIHByb3BlcnR5S2V5IGluIHRhcmdldDtcbiAgfVxufSk7XG4iLCIvLyAyNi4xLjEwIFJlZmxlY3QuaXNFeHRlbnNpYmxlKHRhcmdldClcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgYW5PYmplY3QgPSByZXF1aXJlKCcuL19hbi1vYmplY3QnKTtcbnZhciAkaXNFeHRlbnNpYmxlID0gT2JqZWN0LmlzRXh0ZW5zaWJsZTtcblxuJGV4cG9ydCgkZXhwb3J0LlMsICdSZWZsZWN0Jywge1xuICBpc0V4dGVuc2libGU6IGZ1bmN0aW9uIGlzRXh0ZW5zaWJsZSh0YXJnZXQpIHtcbiAgICBhbk9iamVjdCh0YXJnZXQpO1xuICAgIHJldHVybiAkaXNFeHRlbnNpYmxlID8gJGlzRXh0ZW5zaWJsZSh0YXJnZXQpIDogdHJ1ZTtcbiAgfVxufSk7XG4iLCIvLyAyNi4xLjExIFJlZmxlY3Qub3duS2V5cyh0YXJnZXQpXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xuXG4kZXhwb3J0KCRleHBvcnQuUywgJ1JlZmxlY3QnLCB7IG93bktleXM6IHJlcXVpcmUoJy4vX293bi1rZXlzJykgfSk7XG4iLCIvLyAyNi4xLjEyIFJlZmxlY3QucHJldmVudEV4dGVuc2lvbnModGFyZ2V0KVxudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciBhbk9iamVjdCA9IHJlcXVpcmUoJy4vX2FuLW9iamVjdCcpO1xudmFyICRwcmV2ZW50RXh0ZW5zaW9ucyA9IE9iamVjdC5wcmV2ZW50RXh0ZW5zaW9ucztcblxuJGV4cG9ydCgkZXhwb3J0LlMsICdSZWZsZWN0Jywge1xuICBwcmV2ZW50RXh0ZW5zaW9uczogZnVuY3Rpb24gcHJldmVudEV4dGVuc2lvbnModGFyZ2V0KSB7XG4gICAgYW5PYmplY3QodGFyZ2V0KTtcbiAgICB0cnkge1xuICAgICAgaWYgKCRwcmV2ZW50RXh0ZW5zaW9ucykgJHByZXZlbnRFeHRlbnNpb25zKHRhcmdldCk7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICB9XG59KTtcbiIsIi8vIDI2LjEuMTQgUmVmbGVjdC5zZXRQcm90b3R5cGVPZih0YXJnZXQsIHByb3RvKVxudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciBzZXRQcm90byA9IHJlcXVpcmUoJy4vX3NldC1wcm90bycpO1xuXG5pZiAoc2V0UHJvdG8pICRleHBvcnQoJGV4cG9ydC5TLCAnUmVmbGVjdCcsIHtcbiAgc2V0UHJvdG90eXBlT2Y6IGZ1bmN0aW9uIHNldFByb3RvdHlwZU9mKHRhcmdldCwgcHJvdG8pIHtcbiAgICBzZXRQcm90by5jaGVjayh0YXJnZXQsIHByb3RvKTtcbiAgICB0cnkge1xuICAgICAgc2V0UHJvdG8uc2V0KHRhcmdldCwgcHJvdG8pO1xuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfSBjYXRjaCAoZSkge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgfVxufSk7XG4iLCIvLyAyNi4xLjEzIFJlZmxlY3Quc2V0KHRhcmdldCwgcHJvcGVydHlLZXksIFYgWywgcmVjZWl2ZXJdKVxudmFyIGRQID0gcmVxdWlyZSgnLi9fb2JqZWN0LWRwJyk7XG52YXIgZ09QRCA9IHJlcXVpcmUoJy4vX29iamVjdC1nb3BkJyk7XG52YXIgZ2V0UHJvdG90eXBlT2YgPSByZXF1aXJlKCcuL19vYmplY3QtZ3BvJyk7XG52YXIgaGFzID0gcmVxdWlyZSgnLi9faGFzJyk7XG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyIGNyZWF0ZURlc2MgPSByZXF1aXJlKCcuL19wcm9wZXJ0eS1kZXNjJyk7XG52YXIgYW5PYmplY3QgPSByZXF1aXJlKCcuL19hbi1vYmplY3QnKTtcbnZhciBpc09iamVjdCA9IHJlcXVpcmUoJy4vX2lzLW9iamVjdCcpO1xuXG5mdW5jdGlvbiBzZXQodGFyZ2V0LCBwcm9wZXJ0eUtleSwgViAvKiAsIHJlY2VpdmVyICovKSB7XG4gIHZhciByZWNlaXZlciA9IGFyZ3VtZW50cy5sZW5ndGggPCA0ID8gdGFyZ2V0IDogYXJndW1lbnRzWzNdO1xuICB2YXIgb3duRGVzYyA9IGdPUEQuZihhbk9iamVjdCh0YXJnZXQpLCBwcm9wZXJ0eUtleSk7XG4gIHZhciBleGlzdGluZ0Rlc2NyaXB0b3IsIHByb3RvO1xuICBpZiAoIW93bkRlc2MpIHtcbiAgICBpZiAoaXNPYmplY3QocHJvdG8gPSBnZXRQcm90b3R5cGVPZih0YXJnZXQpKSkge1xuICAgICAgcmV0dXJuIHNldChwcm90bywgcHJvcGVydHlLZXksIFYsIHJlY2VpdmVyKTtcbiAgICB9XG4gICAgb3duRGVzYyA9IGNyZWF0ZURlc2MoMCk7XG4gIH1cbiAgaWYgKGhhcyhvd25EZXNjLCAndmFsdWUnKSkge1xuICAgIGlmIChvd25EZXNjLndyaXRhYmxlID09PSBmYWxzZSB8fCAhaXNPYmplY3QocmVjZWl2ZXIpKSByZXR1cm4gZmFsc2U7XG4gICAgaWYgKGV4aXN0aW5nRGVzY3JpcHRvciA9IGdPUEQuZihyZWNlaXZlciwgcHJvcGVydHlLZXkpKSB7XG4gICAgICBpZiAoZXhpc3RpbmdEZXNjcmlwdG9yLmdldCB8fCBleGlzdGluZ0Rlc2NyaXB0b3Iuc2V0IHx8IGV4aXN0aW5nRGVzY3JpcHRvci53cml0YWJsZSA9PT0gZmFsc2UpIHJldHVybiBmYWxzZTtcbiAgICAgIGV4aXN0aW5nRGVzY3JpcHRvci52YWx1ZSA9IFY7XG4gICAgICBkUC5mKHJlY2VpdmVyLCBwcm9wZXJ0eUtleSwgZXhpc3RpbmdEZXNjcmlwdG9yKTtcbiAgICB9IGVsc2UgZFAuZihyZWNlaXZlciwgcHJvcGVydHlLZXksIGNyZWF0ZURlc2MoMCwgVikpO1xuICAgIHJldHVybiB0cnVlO1xuICB9XG4gIHJldHVybiBvd25EZXNjLnNldCA9PT0gdW5kZWZpbmVkID8gZmFsc2UgOiAob3duRGVzYy5zZXQuY2FsbChyZWNlaXZlciwgViksIHRydWUpO1xufVxuXG4kZXhwb3J0KCRleHBvcnQuUywgJ1JlZmxlY3QnLCB7IHNldDogc2V0IH0pO1xuIiwidmFyIGdsb2JhbCA9IHJlcXVpcmUoJy4vX2dsb2JhbCcpO1xudmFyIGluaGVyaXRJZlJlcXVpcmVkID0gcmVxdWlyZSgnLi9faW5oZXJpdC1pZi1yZXF1aXJlZCcpO1xudmFyIGRQID0gcmVxdWlyZSgnLi9fb2JqZWN0LWRwJykuZjtcbnZhciBnT1BOID0gcmVxdWlyZSgnLi9fb2JqZWN0LWdvcG4nKS5mO1xudmFyIGlzUmVnRXhwID0gcmVxdWlyZSgnLi9faXMtcmVnZXhwJyk7XG52YXIgJGZsYWdzID0gcmVxdWlyZSgnLi9fZmxhZ3MnKTtcbnZhciAkUmVnRXhwID0gZ2xvYmFsLlJlZ0V4cDtcbnZhciBCYXNlID0gJFJlZ0V4cDtcbnZhciBwcm90byA9ICRSZWdFeHAucHJvdG90eXBlO1xudmFyIHJlMSA9IC9hL2c7XG52YXIgcmUyID0gL2EvZztcbi8vIFwibmV3XCIgY3JlYXRlcyBhIG5ldyBvYmplY3QsIG9sZCB3ZWJraXQgYnVnZ3kgaGVyZVxudmFyIENPUlJFQ1RfTkVXID0gbmV3ICRSZWdFeHAocmUxKSAhPT0gcmUxO1xuXG5pZiAocmVxdWlyZSgnLi9fZGVzY3JpcHRvcnMnKSAmJiAoIUNPUlJFQ1RfTkVXIHx8IHJlcXVpcmUoJy4vX2ZhaWxzJykoZnVuY3Rpb24gKCkge1xuICByZTJbcmVxdWlyZSgnLi9fd2tzJykoJ21hdGNoJyldID0gZmFsc2U7XG4gIC8vIFJlZ0V4cCBjb25zdHJ1Y3RvciBjYW4gYWx0ZXIgZmxhZ3MgYW5kIElzUmVnRXhwIHdvcmtzIGNvcnJlY3Qgd2l0aCBAQG1hdGNoXG4gIHJldHVybiAkUmVnRXhwKHJlMSkgIT0gcmUxIHx8ICRSZWdFeHAocmUyKSA9PSByZTIgfHwgJFJlZ0V4cChyZTEsICdpJykgIT0gJy9hL2knO1xufSkpKSB7XG4gICRSZWdFeHAgPSBmdW5jdGlvbiBSZWdFeHAocCwgZikge1xuICAgIHZhciB0aVJFID0gdGhpcyBpbnN0YW5jZW9mICRSZWdFeHA7XG4gICAgdmFyIHBpUkUgPSBpc1JlZ0V4cChwKTtcbiAgICB2YXIgZmlVID0gZiA9PT0gdW5kZWZpbmVkO1xuICAgIHJldHVybiAhdGlSRSAmJiBwaVJFICYmIHAuY29uc3RydWN0b3IgPT09ICRSZWdFeHAgJiYgZmlVID8gcFxuICAgICAgOiBpbmhlcml0SWZSZXF1aXJlZChDT1JSRUNUX05FV1xuICAgICAgICA/IG5ldyBCYXNlKHBpUkUgJiYgIWZpVSA/IHAuc291cmNlIDogcCwgZilcbiAgICAgICAgOiBCYXNlKChwaVJFID0gcCBpbnN0YW5jZW9mICRSZWdFeHApID8gcC5zb3VyY2UgOiBwLCBwaVJFICYmIGZpVSA/ICRmbGFncy5jYWxsKHApIDogZilcbiAgICAgICwgdGlSRSA/IHRoaXMgOiBwcm90bywgJFJlZ0V4cCk7XG4gIH07XG4gIHZhciBwcm94eSA9IGZ1bmN0aW9uIChrZXkpIHtcbiAgICBrZXkgaW4gJFJlZ0V4cCB8fCBkUCgkUmVnRXhwLCBrZXksIHtcbiAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gQmFzZVtrZXldOyB9LFxuICAgICAgc2V0OiBmdW5jdGlvbiAoaXQpIHsgQmFzZVtrZXldID0gaXQ7IH1cbiAgICB9KTtcbiAgfTtcbiAgZm9yICh2YXIga2V5cyA9IGdPUE4oQmFzZSksIGkgPSAwOyBrZXlzLmxlbmd0aCA+IGk7KSBwcm94eShrZXlzW2krK10pO1xuICBwcm90by5jb25zdHJ1Y3RvciA9ICRSZWdFeHA7XG4gICRSZWdFeHAucHJvdG90eXBlID0gcHJvdG87XG4gIHJlcXVpcmUoJy4vX3JlZGVmaW5lJykoZ2xvYmFsLCAnUmVnRXhwJywgJFJlZ0V4cCk7XG59XG5cbnJlcXVpcmUoJy4vX3NldC1zcGVjaWVzJykoJ1JlZ0V4cCcpO1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIHJlZ2V4cEV4ZWMgPSByZXF1aXJlKCcuL19yZWdleHAtZXhlYycpO1xucmVxdWlyZSgnLi9fZXhwb3J0Jykoe1xuICB0YXJnZXQ6ICdSZWdFeHAnLFxuICBwcm90bzogdHJ1ZSxcbiAgZm9yY2VkOiByZWdleHBFeGVjICE9PSAvLi8uZXhlY1xufSwge1xuICBleGVjOiByZWdleHBFeGVjXG59KTtcbiIsIi8vIDIxLjIuNS4zIGdldCBSZWdFeHAucHJvdG90eXBlLmZsYWdzKClcbmlmIChyZXF1aXJlKCcuL19kZXNjcmlwdG9ycycpICYmIC8uL2cuZmxhZ3MgIT0gJ2cnKSByZXF1aXJlKCcuL19vYmplY3QtZHAnKS5mKFJlZ0V4cC5wcm90b3R5cGUsICdmbGFncycsIHtcbiAgY29uZmlndXJhYmxlOiB0cnVlLFxuICBnZXQ6IHJlcXVpcmUoJy4vX2ZsYWdzJylcbn0pO1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgYW5PYmplY3QgPSByZXF1aXJlKCcuL19hbi1vYmplY3QnKTtcbnZhciB0b0xlbmd0aCA9IHJlcXVpcmUoJy4vX3RvLWxlbmd0aCcpO1xudmFyIGFkdmFuY2VTdHJpbmdJbmRleCA9IHJlcXVpcmUoJy4vX2FkdmFuY2Utc3RyaW5nLWluZGV4Jyk7XG52YXIgcmVnRXhwRXhlYyA9IHJlcXVpcmUoJy4vX3JlZ2V4cC1leGVjLWFic3RyYWN0Jyk7XG5cbi8vIEBAbWF0Y2ggbG9naWNcbnJlcXVpcmUoJy4vX2ZpeC1yZS13a3MnKSgnbWF0Y2gnLCAxLCBmdW5jdGlvbiAoZGVmaW5lZCwgTUFUQ0gsICRtYXRjaCwgbWF5YmVDYWxsTmF0aXZlKSB7XG4gIHJldHVybiBbXG4gICAgLy8gYFN0cmluZy5wcm90b3R5cGUubWF0Y2hgIG1ldGhvZFxuICAgIC8vIGh0dHBzOi8vdGMzOS5naXRodWIuaW8vZWNtYTI2Mi8jc2VjLXN0cmluZy5wcm90b3R5cGUubWF0Y2hcbiAgICBmdW5jdGlvbiBtYXRjaChyZWdleHApIHtcbiAgICAgIHZhciBPID0gZGVmaW5lZCh0aGlzKTtcbiAgICAgIHZhciBmbiA9IHJlZ2V4cCA9PSB1bmRlZmluZWQgPyB1bmRlZmluZWQgOiByZWdleHBbTUFUQ0hdO1xuICAgICAgcmV0dXJuIGZuICE9PSB1bmRlZmluZWQgPyBmbi5jYWxsKHJlZ2V4cCwgTykgOiBuZXcgUmVnRXhwKHJlZ2V4cClbTUFUQ0hdKFN0cmluZyhPKSk7XG4gICAgfSxcbiAgICAvLyBgUmVnRXhwLnByb3RvdHlwZVtAQG1hdGNoXWAgbWV0aG9kXG4gICAgLy8gaHR0cHM6Ly90YzM5LmdpdGh1Yi5pby9lY21hMjYyLyNzZWMtcmVnZXhwLnByb3RvdHlwZS1AQG1hdGNoXG4gICAgZnVuY3Rpb24gKHJlZ2V4cCkge1xuICAgICAgdmFyIHJlcyA9IG1heWJlQ2FsbE5hdGl2ZSgkbWF0Y2gsIHJlZ2V4cCwgdGhpcyk7XG4gICAgICBpZiAocmVzLmRvbmUpIHJldHVybiByZXMudmFsdWU7XG4gICAgICB2YXIgcnggPSBhbk9iamVjdChyZWdleHApO1xuICAgICAgdmFyIFMgPSBTdHJpbmcodGhpcyk7XG4gICAgICBpZiAoIXJ4Lmdsb2JhbCkgcmV0dXJuIHJlZ0V4cEV4ZWMocngsIFMpO1xuICAgICAgdmFyIGZ1bGxVbmljb2RlID0gcngudW5pY29kZTtcbiAgICAgIHJ4Lmxhc3RJbmRleCA9IDA7XG4gICAgICB2YXIgQSA9IFtdO1xuICAgICAgdmFyIG4gPSAwO1xuICAgICAgdmFyIHJlc3VsdDtcbiAgICAgIHdoaWxlICgocmVzdWx0ID0gcmVnRXhwRXhlYyhyeCwgUykpICE9PSBudWxsKSB7XG4gICAgICAgIHZhciBtYXRjaFN0ciA9IFN0cmluZyhyZXN1bHRbMF0pO1xuICAgICAgICBBW25dID0gbWF0Y2hTdHI7XG4gICAgICAgIGlmIChtYXRjaFN0ciA9PT0gJycpIHJ4Lmxhc3RJbmRleCA9IGFkdmFuY2VTdHJpbmdJbmRleChTLCB0b0xlbmd0aChyeC5sYXN0SW5kZXgpLCBmdWxsVW5pY29kZSk7XG4gICAgICAgIG4rKztcbiAgICAgIH1cbiAgICAgIHJldHVybiBuID09PSAwID8gbnVsbCA6IEE7XG4gICAgfVxuICBdO1xufSk7XG4iLCIndXNlIHN0cmljdCc7XG5cbnZhciBhbk9iamVjdCA9IHJlcXVpcmUoJy4vX2FuLW9iamVjdCcpO1xudmFyIHRvT2JqZWN0ID0gcmVxdWlyZSgnLi9fdG8tb2JqZWN0Jyk7XG52YXIgdG9MZW5ndGggPSByZXF1aXJlKCcuL190by1sZW5ndGgnKTtcbnZhciB0b0ludGVnZXIgPSByZXF1aXJlKCcuL190by1pbnRlZ2VyJyk7XG52YXIgYWR2YW5jZVN0cmluZ0luZGV4ID0gcmVxdWlyZSgnLi9fYWR2YW5jZS1zdHJpbmctaW5kZXgnKTtcbnZhciByZWdFeHBFeGVjID0gcmVxdWlyZSgnLi9fcmVnZXhwLWV4ZWMtYWJzdHJhY3QnKTtcbnZhciBtYXggPSBNYXRoLm1heDtcbnZhciBtaW4gPSBNYXRoLm1pbjtcbnZhciBmbG9vciA9IE1hdGguZmxvb3I7XG52YXIgU1VCU1RJVFVUSU9OX1NZTUJPTFMgPSAvXFwkKFskJmAnXXxcXGRcXGQ/fDxbXj5dKj4pL2c7XG52YXIgU1VCU1RJVFVUSU9OX1NZTUJPTFNfTk9fTkFNRUQgPSAvXFwkKFskJmAnXXxcXGRcXGQ/KS9nO1xuXG52YXIgbWF5YmVUb1N0cmluZyA9IGZ1bmN0aW9uIChpdCkge1xuICByZXR1cm4gaXQgPT09IHVuZGVmaW5lZCA/IGl0IDogU3RyaW5nKGl0KTtcbn07XG5cbi8vIEBAcmVwbGFjZSBsb2dpY1xucmVxdWlyZSgnLi9fZml4LXJlLXdrcycpKCdyZXBsYWNlJywgMiwgZnVuY3Rpb24gKGRlZmluZWQsIFJFUExBQ0UsICRyZXBsYWNlLCBtYXliZUNhbGxOYXRpdmUpIHtcbiAgcmV0dXJuIFtcbiAgICAvLyBgU3RyaW5nLnByb3RvdHlwZS5yZXBsYWNlYCBtZXRob2RcbiAgICAvLyBodHRwczovL3RjMzkuZ2l0aHViLmlvL2VjbWEyNjIvI3NlYy1zdHJpbmcucHJvdG90eXBlLnJlcGxhY2VcbiAgICBmdW5jdGlvbiByZXBsYWNlKHNlYXJjaFZhbHVlLCByZXBsYWNlVmFsdWUpIHtcbiAgICAgIHZhciBPID0gZGVmaW5lZCh0aGlzKTtcbiAgICAgIHZhciBmbiA9IHNlYXJjaFZhbHVlID09IHVuZGVmaW5lZCA/IHVuZGVmaW5lZCA6IHNlYXJjaFZhbHVlW1JFUExBQ0VdO1xuICAgICAgcmV0dXJuIGZuICE9PSB1bmRlZmluZWRcbiAgICAgICAgPyBmbi5jYWxsKHNlYXJjaFZhbHVlLCBPLCByZXBsYWNlVmFsdWUpXG4gICAgICAgIDogJHJlcGxhY2UuY2FsbChTdHJpbmcoTyksIHNlYXJjaFZhbHVlLCByZXBsYWNlVmFsdWUpO1xuICAgIH0sXG4gICAgLy8gYFJlZ0V4cC5wcm90b3R5cGVbQEByZXBsYWNlXWAgbWV0aG9kXG4gICAgLy8gaHR0cHM6Ly90YzM5LmdpdGh1Yi5pby9lY21hMjYyLyNzZWMtcmVnZXhwLnByb3RvdHlwZS1AQHJlcGxhY2VcbiAgICBmdW5jdGlvbiAocmVnZXhwLCByZXBsYWNlVmFsdWUpIHtcbiAgICAgIHZhciByZXMgPSBtYXliZUNhbGxOYXRpdmUoJHJlcGxhY2UsIHJlZ2V4cCwgdGhpcywgcmVwbGFjZVZhbHVlKTtcbiAgICAgIGlmIChyZXMuZG9uZSkgcmV0dXJuIHJlcy52YWx1ZTtcblxuICAgICAgdmFyIHJ4ID0gYW5PYmplY3QocmVnZXhwKTtcbiAgICAgIHZhciBTID0gU3RyaW5nKHRoaXMpO1xuICAgICAgdmFyIGZ1bmN0aW9uYWxSZXBsYWNlID0gdHlwZW9mIHJlcGxhY2VWYWx1ZSA9PT0gJ2Z1bmN0aW9uJztcbiAgICAgIGlmICghZnVuY3Rpb25hbFJlcGxhY2UpIHJlcGxhY2VWYWx1ZSA9IFN0cmluZyhyZXBsYWNlVmFsdWUpO1xuICAgICAgdmFyIGdsb2JhbCA9IHJ4Lmdsb2JhbDtcbiAgICAgIGlmIChnbG9iYWwpIHtcbiAgICAgICAgdmFyIGZ1bGxVbmljb2RlID0gcngudW5pY29kZTtcbiAgICAgICAgcngubGFzdEluZGV4ID0gMDtcbiAgICAgIH1cbiAgICAgIHZhciByZXN1bHRzID0gW107XG4gICAgICB3aGlsZSAodHJ1ZSkge1xuICAgICAgICB2YXIgcmVzdWx0ID0gcmVnRXhwRXhlYyhyeCwgUyk7XG4gICAgICAgIGlmIChyZXN1bHQgPT09IG51bGwpIGJyZWFrO1xuICAgICAgICByZXN1bHRzLnB1c2gocmVzdWx0KTtcbiAgICAgICAgaWYgKCFnbG9iYWwpIGJyZWFrO1xuICAgICAgICB2YXIgbWF0Y2hTdHIgPSBTdHJpbmcocmVzdWx0WzBdKTtcbiAgICAgICAgaWYgKG1hdGNoU3RyID09PSAnJykgcngubGFzdEluZGV4ID0gYWR2YW5jZVN0cmluZ0luZGV4KFMsIHRvTGVuZ3RoKHJ4Lmxhc3RJbmRleCksIGZ1bGxVbmljb2RlKTtcbiAgICAgIH1cbiAgICAgIHZhciBhY2N1bXVsYXRlZFJlc3VsdCA9ICcnO1xuICAgICAgdmFyIG5leHRTb3VyY2VQb3NpdGlvbiA9IDA7XG4gICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHJlc3VsdHMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgcmVzdWx0ID0gcmVzdWx0c1tpXTtcbiAgICAgICAgdmFyIG1hdGNoZWQgPSBTdHJpbmcocmVzdWx0WzBdKTtcbiAgICAgICAgdmFyIHBvc2l0aW9uID0gbWF4KG1pbih0b0ludGVnZXIocmVzdWx0LmluZGV4KSwgUy5sZW5ndGgpLCAwKTtcbiAgICAgICAgdmFyIGNhcHR1cmVzID0gW107XG4gICAgICAgIC8vIE5PVEU6IFRoaXMgaXMgZXF1aXZhbGVudCB0b1xuICAgICAgICAvLyAgIGNhcHR1cmVzID0gcmVzdWx0LnNsaWNlKDEpLm1hcChtYXliZVRvU3RyaW5nKVxuICAgICAgICAvLyBidXQgZm9yIHNvbWUgcmVhc29uIGBuYXRpdmVTbGljZS5jYWxsKHJlc3VsdCwgMSwgcmVzdWx0Lmxlbmd0aClgIChjYWxsZWQgaW5cbiAgICAgICAgLy8gdGhlIHNsaWNlIHBvbHlmaWxsIHdoZW4gc2xpY2luZyBuYXRpdmUgYXJyYXlzKSBcImRvZXNuJ3Qgd29ya1wiIGluIHNhZmFyaSA5IGFuZFxuICAgICAgICAvLyBjYXVzZXMgYSBjcmFzaCAoaHR0cHM6Ly9wYXN0ZWJpbi5jb20vTjIxUXplUUEpIHdoZW4gdHJ5aW5nIHRvIGRlYnVnIGl0LlxuICAgICAgICBmb3IgKHZhciBqID0gMTsgaiA8IHJlc3VsdC5sZW5ndGg7IGorKykgY2FwdHVyZXMucHVzaChtYXliZVRvU3RyaW5nKHJlc3VsdFtqXSkpO1xuICAgICAgICB2YXIgbmFtZWRDYXB0dXJlcyA9IHJlc3VsdC5ncm91cHM7XG4gICAgICAgIGlmIChmdW5jdGlvbmFsUmVwbGFjZSkge1xuICAgICAgICAgIHZhciByZXBsYWNlckFyZ3MgPSBbbWF0Y2hlZF0uY29uY2F0KGNhcHR1cmVzLCBwb3NpdGlvbiwgUyk7XG4gICAgICAgICAgaWYgKG5hbWVkQ2FwdHVyZXMgIT09IHVuZGVmaW5lZCkgcmVwbGFjZXJBcmdzLnB1c2gobmFtZWRDYXB0dXJlcyk7XG4gICAgICAgICAgdmFyIHJlcGxhY2VtZW50ID0gU3RyaW5nKHJlcGxhY2VWYWx1ZS5hcHBseSh1bmRlZmluZWQsIHJlcGxhY2VyQXJncykpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHJlcGxhY2VtZW50ID0gZ2V0U3Vic3RpdHV0aW9uKG1hdGNoZWQsIFMsIHBvc2l0aW9uLCBjYXB0dXJlcywgbmFtZWRDYXB0dXJlcywgcmVwbGFjZVZhbHVlKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAocG9zaXRpb24gPj0gbmV4dFNvdXJjZVBvc2l0aW9uKSB7XG4gICAgICAgICAgYWNjdW11bGF0ZWRSZXN1bHQgKz0gUy5zbGljZShuZXh0U291cmNlUG9zaXRpb24sIHBvc2l0aW9uKSArIHJlcGxhY2VtZW50O1xuICAgICAgICAgIG5leHRTb3VyY2VQb3NpdGlvbiA9IHBvc2l0aW9uICsgbWF0Y2hlZC5sZW5ndGg7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIHJldHVybiBhY2N1bXVsYXRlZFJlc3VsdCArIFMuc2xpY2UobmV4dFNvdXJjZVBvc2l0aW9uKTtcbiAgICB9XG4gIF07XG5cbiAgICAvLyBodHRwczovL3RjMzkuZ2l0aHViLmlvL2VjbWEyNjIvI3NlYy1nZXRzdWJzdGl0dXRpb25cbiAgZnVuY3Rpb24gZ2V0U3Vic3RpdHV0aW9uKG1hdGNoZWQsIHN0ciwgcG9zaXRpb24sIGNhcHR1cmVzLCBuYW1lZENhcHR1cmVzLCByZXBsYWNlbWVudCkge1xuICAgIHZhciB0YWlsUG9zID0gcG9zaXRpb24gKyBtYXRjaGVkLmxlbmd0aDtcbiAgICB2YXIgbSA9IGNhcHR1cmVzLmxlbmd0aDtcbiAgICB2YXIgc3ltYm9scyA9IFNVQlNUSVRVVElPTl9TWU1CT0xTX05PX05BTUVEO1xuICAgIGlmIChuYW1lZENhcHR1cmVzICE9PSB1bmRlZmluZWQpIHtcbiAgICAgIG5hbWVkQ2FwdHVyZXMgPSB0b09iamVjdChuYW1lZENhcHR1cmVzKTtcbiAgICAgIHN5bWJvbHMgPSBTVUJTVElUVVRJT05fU1lNQk9MUztcbiAgICB9XG4gICAgcmV0dXJuICRyZXBsYWNlLmNhbGwocmVwbGFjZW1lbnQsIHN5bWJvbHMsIGZ1bmN0aW9uIChtYXRjaCwgY2gpIHtcbiAgICAgIHZhciBjYXB0dXJlO1xuICAgICAgc3dpdGNoIChjaC5jaGFyQXQoMCkpIHtcbiAgICAgICAgY2FzZSAnJCc6IHJldHVybiAnJCc7XG4gICAgICAgIGNhc2UgJyYnOiByZXR1cm4gbWF0Y2hlZDtcbiAgICAgICAgY2FzZSAnYCc6IHJldHVybiBzdHIuc2xpY2UoMCwgcG9zaXRpb24pO1xuICAgICAgICBjYXNlIFwiJ1wiOiByZXR1cm4gc3RyLnNsaWNlKHRhaWxQb3MpO1xuICAgICAgICBjYXNlICc8JzpcbiAgICAgICAgICBjYXB0dXJlID0gbmFtZWRDYXB0dXJlc1tjaC5zbGljZSgxLCAtMSldO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICBkZWZhdWx0OiAvLyBcXGRcXGQ/XG4gICAgICAgICAgdmFyIG4gPSArY2g7XG4gICAgICAgICAgaWYgKG4gPT09IDApIHJldHVybiBjaDtcbiAgICAgICAgICBpZiAobiA+IG0pIHtcbiAgICAgICAgICAgIHZhciBmID0gZmxvb3IobiAvIDEwKTtcbiAgICAgICAgICAgIGlmIChmID09PSAwKSByZXR1cm4gY2g7XG4gICAgICAgICAgICBpZiAoZiA8PSBtKSByZXR1cm4gY2FwdHVyZXNbZiAtIDFdID09PSB1bmRlZmluZWQgPyBjaC5jaGFyQXQoMSkgOiBjYXB0dXJlc1tmIC0gMV0gKyBjaC5jaGFyQXQoMSk7XG4gICAgICAgICAgICByZXR1cm4gY2g7XG4gICAgICAgICAgfVxuICAgICAgICAgIGNhcHR1cmUgPSBjYXB0dXJlc1tuIC0gMV07XG4gICAgICB9XG4gICAgICByZXR1cm4gY2FwdHVyZSA9PT0gdW5kZWZpbmVkID8gJycgOiBjYXB0dXJlO1xuICAgIH0pO1xuICB9XG59KTtcbiIsIid1c2Ugc3RyaWN0JztcblxudmFyIGFuT2JqZWN0ID0gcmVxdWlyZSgnLi9fYW4tb2JqZWN0Jyk7XG52YXIgc2FtZVZhbHVlID0gcmVxdWlyZSgnLi9fc2FtZS12YWx1ZScpO1xudmFyIHJlZ0V4cEV4ZWMgPSByZXF1aXJlKCcuL19yZWdleHAtZXhlYy1hYnN0cmFjdCcpO1xuXG4vLyBAQHNlYXJjaCBsb2dpY1xucmVxdWlyZSgnLi9fZml4LXJlLXdrcycpKCdzZWFyY2gnLCAxLCBmdW5jdGlvbiAoZGVmaW5lZCwgU0VBUkNILCAkc2VhcmNoLCBtYXliZUNhbGxOYXRpdmUpIHtcbiAgcmV0dXJuIFtcbiAgICAvLyBgU3RyaW5nLnByb3RvdHlwZS5zZWFyY2hgIG1ldGhvZFxuICAgIC8vIGh0dHBzOi8vdGMzOS5naXRodWIuaW8vZWNtYTI2Mi8jc2VjLXN0cmluZy5wcm90b3R5cGUuc2VhcmNoXG4gICAgZnVuY3Rpb24gc2VhcmNoKHJlZ2V4cCkge1xuICAgICAgdmFyIE8gPSBkZWZpbmVkKHRoaXMpO1xuICAgICAgdmFyIGZuID0gcmVnZXhwID09IHVuZGVmaW5lZCA/IHVuZGVmaW5lZCA6IHJlZ2V4cFtTRUFSQ0hdO1xuICAgICAgcmV0dXJuIGZuICE9PSB1bmRlZmluZWQgPyBmbi5jYWxsKHJlZ2V4cCwgTykgOiBuZXcgUmVnRXhwKHJlZ2V4cClbU0VBUkNIXShTdHJpbmcoTykpO1xuICAgIH0sXG4gICAgLy8gYFJlZ0V4cC5wcm90b3R5cGVbQEBzZWFyY2hdYCBtZXRob2RcbiAgICAvLyBodHRwczovL3RjMzkuZ2l0aHViLmlvL2VjbWEyNjIvI3NlYy1yZWdleHAucHJvdG90eXBlLUBAc2VhcmNoXG4gICAgZnVuY3Rpb24gKHJlZ2V4cCkge1xuICAgICAgdmFyIHJlcyA9IG1heWJlQ2FsbE5hdGl2ZSgkc2VhcmNoLCByZWdleHAsIHRoaXMpO1xuICAgICAgaWYgKHJlcy5kb25lKSByZXR1cm4gcmVzLnZhbHVlO1xuICAgICAgdmFyIHJ4ID0gYW5PYmplY3QocmVnZXhwKTtcbiAgICAgIHZhciBTID0gU3RyaW5nKHRoaXMpO1xuICAgICAgdmFyIHByZXZpb3VzTGFzdEluZGV4ID0gcngubGFzdEluZGV4O1xuICAgICAgaWYgKCFzYW1lVmFsdWUocHJldmlvdXNMYXN0SW5kZXgsIDApKSByeC5sYXN0SW5kZXggPSAwO1xuICAgICAgdmFyIHJlc3VsdCA9IHJlZ0V4cEV4ZWMocngsIFMpO1xuICAgICAgaWYgKCFzYW1lVmFsdWUocngubGFzdEluZGV4LCBwcmV2aW91c0xhc3RJbmRleCkpIHJ4Lmxhc3RJbmRleCA9IHByZXZpb3VzTGFzdEluZGV4O1xuICAgICAgcmV0dXJuIHJlc3VsdCA9PT0gbnVsbCA/IC0xIDogcmVzdWx0LmluZGV4O1xuICAgIH1cbiAgXTtcbn0pO1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgaXNSZWdFeHAgPSByZXF1aXJlKCcuL19pcy1yZWdleHAnKTtcbnZhciBhbk9iamVjdCA9IHJlcXVpcmUoJy4vX2FuLW9iamVjdCcpO1xudmFyIHNwZWNpZXNDb25zdHJ1Y3RvciA9IHJlcXVpcmUoJy4vX3NwZWNpZXMtY29uc3RydWN0b3InKTtcbnZhciBhZHZhbmNlU3RyaW5nSW5kZXggPSByZXF1aXJlKCcuL19hZHZhbmNlLXN0cmluZy1pbmRleCcpO1xudmFyIHRvTGVuZ3RoID0gcmVxdWlyZSgnLi9fdG8tbGVuZ3RoJyk7XG52YXIgY2FsbFJlZ0V4cEV4ZWMgPSByZXF1aXJlKCcuL19yZWdleHAtZXhlYy1hYnN0cmFjdCcpO1xudmFyIHJlZ2V4cEV4ZWMgPSByZXF1aXJlKCcuL19yZWdleHAtZXhlYycpO1xudmFyICRtaW4gPSBNYXRoLm1pbjtcbnZhciAkcHVzaCA9IFtdLnB1c2g7XG52YXIgJFNQTElUID0gJ3NwbGl0JztcbnZhciBMRU5HVEggPSAnbGVuZ3RoJztcbnZhciBMQVNUX0lOREVYID0gJ2xhc3RJbmRleCc7XG5cbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1lbXB0eVxudmFyIFNVUFBPUlRTX1kgPSAhIShmdW5jdGlvbiAoKSB7IHRyeSB7IHJldHVybiBuZXcgUmVnRXhwKCd4JywgJ3knKTsgfSBjYXRjaCAoZSkge30gfSkoKTtcblxuLy8gQEBzcGxpdCBsb2dpY1xucmVxdWlyZSgnLi9fZml4LXJlLXdrcycpKCdzcGxpdCcsIDIsIGZ1bmN0aW9uIChkZWZpbmVkLCBTUExJVCwgJHNwbGl0LCBtYXliZUNhbGxOYXRpdmUpIHtcbiAgdmFyIGludGVybmFsU3BsaXQ7XG4gIGlmIChcbiAgICAnYWJiYydbJFNQTElUXSgvKGIpKi8pWzFdID09ICdjJyB8fFxuICAgICd0ZXN0J1skU1BMSVRdKC8oPzopLywgLTEpW0xFTkdUSF0gIT0gNCB8fFxuICAgICdhYidbJFNQTElUXSgvKD86YWIpKi8pW0xFTkdUSF0gIT0gMiB8fFxuICAgICcuJ1skU1BMSVRdKC8oLj8pKC4/KS8pW0xFTkdUSF0gIT0gNCB8fFxuICAgICcuJ1skU1BMSVRdKC8oKSgpLylbTEVOR1RIXSA+IDEgfHxcbiAgICAnJ1skU1BMSVRdKC8uPy8pW0xFTkdUSF1cbiAgKSB7XG4gICAgLy8gYmFzZWQgb24gZXM1LXNoaW0gaW1wbGVtZW50YXRpb24sIG5lZWQgdG8gcmV3b3JrIGl0XG4gICAgaW50ZXJuYWxTcGxpdCA9IGZ1bmN0aW9uIChzZXBhcmF0b3IsIGxpbWl0KSB7XG4gICAgICB2YXIgc3RyaW5nID0gU3RyaW5nKHRoaXMpO1xuICAgICAgaWYgKHNlcGFyYXRvciA9PT0gdW5kZWZpbmVkICYmIGxpbWl0ID09PSAwKSByZXR1cm4gW107XG4gICAgICAvLyBJZiBgc2VwYXJhdG9yYCBpcyBub3QgYSByZWdleCwgdXNlIG5hdGl2ZSBzcGxpdFxuICAgICAgaWYgKCFpc1JlZ0V4cChzZXBhcmF0b3IpKSByZXR1cm4gJHNwbGl0LmNhbGwoc3RyaW5nLCBzZXBhcmF0b3IsIGxpbWl0KTtcbiAgICAgIHZhciBvdXRwdXQgPSBbXTtcbiAgICAgIHZhciBmbGFncyA9IChzZXBhcmF0b3IuaWdub3JlQ2FzZSA/ICdpJyA6ICcnKSArXG4gICAgICAgICAgICAgICAgICAoc2VwYXJhdG9yLm11bHRpbGluZSA/ICdtJyA6ICcnKSArXG4gICAgICAgICAgICAgICAgICAoc2VwYXJhdG9yLnVuaWNvZGUgPyAndScgOiAnJykgK1xuICAgICAgICAgICAgICAgICAgKHNlcGFyYXRvci5zdGlja3kgPyAneScgOiAnJyk7XG4gICAgICB2YXIgbGFzdExhc3RJbmRleCA9IDA7XG4gICAgICB2YXIgc3BsaXRMaW1pdCA9IGxpbWl0ID09PSB1bmRlZmluZWQgPyA0Mjk0OTY3Mjk1IDogbGltaXQgPj4+IDA7XG4gICAgICAvLyBNYWtlIGBnbG9iYWxgIGFuZCBhdm9pZCBgbGFzdEluZGV4YCBpc3N1ZXMgYnkgd29ya2luZyB3aXRoIGEgY29weVxuICAgICAgdmFyIHNlcGFyYXRvckNvcHkgPSBuZXcgUmVnRXhwKHNlcGFyYXRvci5zb3VyY2UsIGZsYWdzICsgJ2cnKTtcbiAgICAgIHZhciBtYXRjaCwgbGFzdEluZGV4LCBsYXN0TGVuZ3RoO1xuICAgICAgd2hpbGUgKG1hdGNoID0gcmVnZXhwRXhlYy5jYWxsKHNlcGFyYXRvckNvcHksIHN0cmluZykpIHtcbiAgICAgICAgbGFzdEluZGV4ID0gc2VwYXJhdG9yQ29weVtMQVNUX0lOREVYXTtcbiAgICAgICAgaWYgKGxhc3RJbmRleCA+IGxhc3RMYXN0SW5kZXgpIHtcbiAgICAgICAgICBvdXRwdXQucHVzaChzdHJpbmcuc2xpY2UobGFzdExhc3RJbmRleCwgbWF0Y2guaW5kZXgpKTtcbiAgICAgICAgICBpZiAobWF0Y2hbTEVOR1RIXSA+IDEgJiYgbWF0Y2guaW5kZXggPCBzdHJpbmdbTEVOR1RIXSkgJHB1c2guYXBwbHkob3V0cHV0LCBtYXRjaC5zbGljZSgxKSk7XG4gICAgICAgICAgbGFzdExlbmd0aCA9IG1hdGNoWzBdW0xFTkdUSF07XG4gICAgICAgICAgbGFzdExhc3RJbmRleCA9IGxhc3RJbmRleDtcbiAgICAgICAgICBpZiAob3V0cHV0W0xFTkdUSF0gPj0gc3BsaXRMaW1pdCkgYnJlYWs7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHNlcGFyYXRvckNvcHlbTEFTVF9JTkRFWF0gPT09IG1hdGNoLmluZGV4KSBzZXBhcmF0b3JDb3B5W0xBU1RfSU5ERVhdKys7IC8vIEF2b2lkIGFuIGluZmluaXRlIGxvb3BcbiAgICAgIH1cbiAgICAgIGlmIChsYXN0TGFzdEluZGV4ID09PSBzdHJpbmdbTEVOR1RIXSkge1xuICAgICAgICBpZiAobGFzdExlbmd0aCB8fCAhc2VwYXJhdG9yQ29weS50ZXN0KCcnKSkgb3V0cHV0LnB1c2goJycpO1xuICAgICAgfSBlbHNlIG91dHB1dC5wdXNoKHN0cmluZy5zbGljZShsYXN0TGFzdEluZGV4KSk7XG4gICAgICByZXR1cm4gb3V0cHV0W0xFTkdUSF0gPiBzcGxpdExpbWl0ID8gb3V0cHV0LnNsaWNlKDAsIHNwbGl0TGltaXQpIDogb3V0cHV0O1xuICAgIH07XG4gIC8vIENoYWtyYSwgVjhcbiAgfSBlbHNlIGlmICgnMCdbJFNQTElUXSh1bmRlZmluZWQsIDApW0xFTkdUSF0pIHtcbiAgICBpbnRlcm5hbFNwbGl0ID0gZnVuY3Rpb24gKHNlcGFyYXRvciwgbGltaXQpIHtcbiAgICAgIHJldHVybiBzZXBhcmF0b3IgPT09IHVuZGVmaW5lZCAmJiBsaW1pdCA9PT0gMCA/IFtdIDogJHNwbGl0LmNhbGwodGhpcywgc2VwYXJhdG9yLCBsaW1pdCk7XG4gICAgfTtcbiAgfSBlbHNlIHtcbiAgICBpbnRlcm5hbFNwbGl0ID0gJHNwbGl0O1xuICB9XG5cbiAgcmV0dXJuIFtcbiAgICAvLyBgU3RyaW5nLnByb3RvdHlwZS5zcGxpdGAgbWV0aG9kXG4gICAgLy8gaHR0cHM6Ly90YzM5LmdpdGh1Yi5pby9lY21hMjYyLyNzZWMtc3RyaW5nLnByb3RvdHlwZS5zcGxpdFxuICAgIGZ1bmN0aW9uIHNwbGl0KHNlcGFyYXRvciwgbGltaXQpIHtcbiAgICAgIHZhciBPID0gZGVmaW5lZCh0aGlzKTtcbiAgICAgIHZhciBzcGxpdHRlciA9IHNlcGFyYXRvciA9PSB1bmRlZmluZWQgPyB1bmRlZmluZWQgOiBzZXBhcmF0b3JbU1BMSVRdO1xuICAgICAgcmV0dXJuIHNwbGl0dGVyICE9PSB1bmRlZmluZWRcbiAgICAgICAgPyBzcGxpdHRlci5jYWxsKHNlcGFyYXRvciwgTywgbGltaXQpXG4gICAgICAgIDogaW50ZXJuYWxTcGxpdC5jYWxsKFN0cmluZyhPKSwgc2VwYXJhdG9yLCBsaW1pdCk7XG4gICAgfSxcbiAgICAvLyBgUmVnRXhwLnByb3RvdHlwZVtAQHNwbGl0XWAgbWV0aG9kXG4gICAgLy8gaHR0cHM6Ly90YzM5LmdpdGh1Yi5pby9lY21hMjYyLyNzZWMtcmVnZXhwLnByb3RvdHlwZS1AQHNwbGl0XG4gICAgLy9cbiAgICAvLyBOT1RFOiBUaGlzIGNhbm5vdCBiZSBwcm9wZXJseSBwb2x5ZmlsbGVkIGluIGVuZ2luZXMgdGhhdCBkb24ndCBzdXBwb3J0XG4gICAgLy8gdGhlICd5JyBmbGFnLlxuICAgIGZ1bmN0aW9uIChyZWdleHAsIGxpbWl0KSB7XG4gICAgICB2YXIgcmVzID0gbWF5YmVDYWxsTmF0aXZlKGludGVybmFsU3BsaXQsIHJlZ2V4cCwgdGhpcywgbGltaXQsIGludGVybmFsU3BsaXQgIT09ICRzcGxpdCk7XG4gICAgICBpZiAocmVzLmRvbmUpIHJldHVybiByZXMudmFsdWU7XG5cbiAgICAgIHZhciByeCA9IGFuT2JqZWN0KHJlZ2V4cCk7XG4gICAgICB2YXIgUyA9IFN0cmluZyh0aGlzKTtcbiAgICAgIHZhciBDID0gc3BlY2llc0NvbnN0cnVjdG9yKHJ4LCBSZWdFeHApO1xuXG4gICAgICB2YXIgdW5pY29kZU1hdGNoaW5nID0gcngudW5pY29kZTtcbiAgICAgIHZhciBmbGFncyA9IChyeC5pZ25vcmVDYXNlID8gJ2knIDogJycpICtcbiAgICAgICAgICAgICAgICAgICAgKHJ4Lm11bHRpbGluZSA/ICdtJyA6ICcnKSArXG4gICAgICAgICAgICAgICAgICAgIChyeC51bmljb2RlID8gJ3UnIDogJycpICtcbiAgICAgICAgICAgICAgICAgICAgKFNVUFBPUlRTX1kgPyAneScgOiAnZycpO1xuXG4gICAgICAvLyBeKD8gKyByeCArICkgaXMgbmVlZGVkLCBpbiBjb21iaW5hdGlvbiB3aXRoIHNvbWUgUyBzbGljaW5nLCB0b1xuICAgICAgLy8gc2ltdWxhdGUgdGhlICd5JyBmbGFnLlxuICAgICAgdmFyIHNwbGl0dGVyID0gbmV3IEMoU1VQUE9SVFNfWSA/IHJ4IDogJ14oPzonICsgcnguc291cmNlICsgJyknLCBmbGFncyk7XG4gICAgICB2YXIgbGltID0gbGltaXQgPT09IHVuZGVmaW5lZCA/IDB4ZmZmZmZmZmYgOiBsaW1pdCA+Pj4gMDtcbiAgICAgIGlmIChsaW0gPT09IDApIHJldHVybiBbXTtcbiAgICAgIGlmIChTLmxlbmd0aCA9PT0gMCkgcmV0dXJuIGNhbGxSZWdFeHBFeGVjKHNwbGl0dGVyLCBTKSA9PT0gbnVsbCA/IFtTXSA6IFtdO1xuICAgICAgdmFyIHAgPSAwO1xuICAgICAgdmFyIHEgPSAwO1xuICAgICAgdmFyIEEgPSBbXTtcbiAgICAgIHdoaWxlIChxIDwgUy5sZW5ndGgpIHtcbiAgICAgICAgc3BsaXR0ZXIubGFzdEluZGV4ID0gU1VQUE9SVFNfWSA/IHEgOiAwO1xuICAgICAgICB2YXIgeiA9IGNhbGxSZWdFeHBFeGVjKHNwbGl0dGVyLCBTVVBQT1JUU19ZID8gUyA6IFMuc2xpY2UocSkpO1xuICAgICAgICB2YXIgZTtcbiAgICAgICAgaWYgKFxuICAgICAgICAgIHogPT09IG51bGwgfHxcbiAgICAgICAgICAoZSA9ICRtaW4odG9MZW5ndGgoc3BsaXR0ZXIubGFzdEluZGV4ICsgKFNVUFBPUlRTX1kgPyAwIDogcSkpLCBTLmxlbmd0aCkpID09PSBwXG4gICAgICAgICkge1xuICAgICAgICAgIHEgPSBhZHZhbmNlU3RyaW5nSW5kZXgoUywgcSwgdW5pY29kZU1hdGNoaW5nKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBBLnB1c2goUy5zbGljZShwLCBxKSk7XG4gICAgICAgICAgaWYgKEEubGVuZ3RoID09PSBsaW0pIHJldHVybiBBO1xuICAgICAgICAgIGZvciAodmFyIGkgPSAxOyBpIDw9IHoubGVuZ3RoIC0gMTsgaSsrKSB7XG4gICAgICAgICAgICBBLnB1c2goeltpXSk7XG4gICAgICAgICAgICBpZiAoQS5sZW5ndGggPT09IGxpbSkgcmV0dXJuIEE7XG4gICAgICAgICAgfVxuICAgICAgICAgIHEgPSBwID0gZTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgQS5wdXNoKFMuc2xpY2UocCkpO1xuICAgICAgcmV0dXJuIEE7XG4gICAgfVxuICBdO1xufSk7XG4iLCIndXNlIHN0cmljdCc7XG5yZXF1aXJlKCcuL2VzNi5yZWdleHAuZmxhZ3MnKTtcbnZhciBhbk9iamVjdCA9IHJlcXVpcmUoJy4vX2FuLW9iamVjdCcpO1xudmFyICRmbGFncyA9IHJlcXVpcmUoJy4vX2ZsYWdzJyk7XG52YXIgREVTQ1JJUFRPUlMgPSByZXF1aXJlKCcuL19kZXNjcmlwdG9ycycpO1xudmFyIFRPX1NUUklORyA9ICd0b1N0cmluZyc7XG52YXIgJHRvU3RyaW5nID0gLy4vW1RPX1NUUklOR107XG5cbnZhciBkZWZpbmUgPSBmdW5jdGlvbiAoZm4pIHtcbiAgcmVxdWlyZSgnLi9fcmVkZWZpbmUnKShSZWdFeHAucHJvdG90eXBlLCBUT19TVFJJTkcsIGZuLCB0cnVlKTtcbn07XG5cbi8vIDIxLjIuNS4xNCBSZWdFeHAucHJvdG90eXBlLnRvU3RyaW5nKClcbmlmIChyZXF1aXJlKCcuL19mYWlscycpKGZ1bmN0aW9uICgpIHsgcmV0dXJuICR0b1N0cmluZy5jYWxsKHsgc291cmNlOiAnYScsIGZsYWdzOiAnYicgfSkgIT0gJy9hL2InOyB9KSkge1xuICBkZWZpbmUoZnVuY3Rpb24gdG9TdHJpbmcoKSB7XG4gICAgdmFyIFIgPSBhbk9iamVjdCh0aGlzKTtcbiAgICByZXR1cm4gJy8nLmNvbmNhdChSLnNvdXJjZSwgJy8nLFxuICAgICAgJ2ZsYWdzJyBpbiBSID8gUi5mbGFncyA6ICFERVNDUklQVE9SUyAmJiBSIGluc3RhbmNlb2YgUmVnRXhwID8gJGZsYWdzLmNhbGwoUikgOiB1bmRlZmluZWQpO1xuICB9KTtcbi8vIEZGNDQtIFJlZ0V4cCN0b1N0cmluZyBoYXMgYSB3cm9uZyBuYW1lXG59IGVsc2UgaWYgKCR0b1N0cmluZy5uYW1lICE9IFRPX1NUUklORykge1xuICBkZWZpbmUoZnVuY3Rpb24gdG9TdHJpbmcoKSB7XG4gICAgcmV0dXJuICR0b1N0cmluZy5jYWxsKHRoaXMpO1xuICB9KTtcbn1cbiIsIid1c2Ugc3RyaWN0JztcbnZhciBzdHJvbmcgPSByZXF1aXJlKCcuL19jb2xsZWN0aW9uLXN0cm9uZycpO1xudmFyIHZhbGlkYXRlID0gcmVxdWlyZSgnLi9fdmFsaWRhdGUtY29sbGVjdGlvbicpO1xudmFyIFNFVCA9ICdTZXQnO1xuXG4vLyAyMy4yIFNldCBPYmplY3RzXG5tb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vX2NvbGxlY3Rpb24nKShTRVQsIGZ1bmN0aW9uIChnZXQpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIFNldCgpIHsgcmV0dXJuIGdldCh0aGlzLCBhcmd1bWVudHMubGVuZ3RoID4gMCA/IGFyZ3VtZW50c1swXSA6IHVuZGVmaW5lZCk7IH07XG59LCB7XG4gIC8vIDIzLjIuMy4xIFNldC5wcm90b3R5cGUuYWRkKHZhbHVlKVxuICBhZGQ6IGZ1bmN0aW9uIGFkZCh2YWx1ZSkge1xuICAgIHJldHVybiBzdHJvbmcuZGVmKHZhbGlkYXRlKHRoaXMsIFNFVCksIHZhbHVlID0gdmFsdWUgPT09IDAgPyAwIDogdmFsdWUsIHZhbHVlKTtcbiAgfVxufSwgc3Ryb25nKTtcbiIsIid1c2Ugc3RyaWN0Jztcbi8vIEIuMi4zLjIgU3RyaW5nLnByb3RvdHlwZS5hbmNob3IobmFtZSlcbnJlcXVpcmUoJy4vX3N0cmluZy1odG1sJykoJ2FuY2hvcicsIGZ1bmN0aW9uIChjcmVhdGVIVE1MKSB7XG4gIHJldHVybiBmdW5jdGlvbiBhbmNob3IobmFtZSkge1xuICAgIHJldHVybiBjcmVhdGVIVE1MKHRoaXMsICdhJywgJ25hbWUnLCBuYW1lKTtcbiAgfTtcbn0pO1xuIiwiJ3VzZSBzdHJpY3QnO1xuLy8gQi4yLjMuMyBTdHJpbmcucHJvdG90eXBlLmJpZygpXG5yZXF1aXJlKCcuL19zdHJpbmctaHRtbCcpKCdiaWcnLCBmdW5jdGlvbiAoY3JlYXRlSFRNTCkge1xuICByZXR1cm4gZnVuY3Rpb24gYmlnKCkge1xuICAgIHJldHVybiBjcmVhdGVIVE1MKHRoaXMsICdiaWcnLCAnJywgJycpO1xuICB9O1xufSk7XG4iLCIndXNlIHN0cmljdCc7XG4vLyBCLjIuMy40IFN0cmluZy5wcm90b3R5cGUuYmxpbmsoKVxucmVxdWlyZSgnLi9fc3RyaW5nLWh0bWwnKSgnYmxpbmsnLCBmdW5jdGlvbiAoY3JlYXRlSFRNTCkge1xuICByZXR1cm4gZnVuY3Rpb24gYmxpbmsoKSB7XG4gICAgcmV0dXJuIGNyZWF0ZUhUTUwodGhpcywgJ2JsaW5rJywgJycsICcnKTtcbiAgfTtcbn0pO1xuIiwiJ3VzZSBzdHJpY3QnO1xuLy8gQi4yLjMuNSBTdHJpbmcucHJvdG90eXBlLmJvbGQoKVxucmVxdWlyZSgnLi9fc3RyaW5nLWh0bWwnKSgnYm9sZCcsIGZ1bmN0aW9uIChjcmVhdGVIVE1MKSB7XG4gIHJldHVybiBmdW5jdGlvbiBib2xkKCkge1xuICAgIHJldHVybiBjcmVhdGVIVE1MKHRoaXMsICdiJywgJycsICcnKTtcbiAgfTtcbn0pO1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciAkYXQgPSByZXF1aXJlKCcuL19zdHJpbmctYXQnKShmYWxzZSk7XG4kZXhwb3J0KCRleHBvcnQuUCwgJ1N0cmluZycsIHtcbiAgLy8gMjEuMS4zLjMgU3RyaW5nLnByb3RvdHlwZS5jb2RlUG9pbnRBdChwb3MpXG4gIGNvZGVQb2ludEF0OiBmdW5jdGlvbiBjb2RlUG9pbnRBdChwb3MpIHtcbiAgICByZXR1cm4gJGF0KHRoaXMsIHBvcyk7XG4gIH1cbn0pO1xuIiwiLy8gMjEuMS4zLjYgU3RyaW5nLnByb3RvdHlwZS5lbmRzV2l0aChzZWFyY2hTdHJpbmcgWywgZW5kUG9zaXRpb25dKVxuJ3VzZSBzdHJpY3QnO1xudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciB0b0xlbmd0aCA9IHJlcXVpcmUoJy4vX3RvLWxlbmd0aCcpO1xudmFyIGNvbnRleHQgPSByZXF1aXJlKCcuL19zdHJpbmctY29udGV4dCcpO1xudmFyIEVORFNfV0lUSCA9ICdlbmRzV2l0aCc7XG52YXIgJGVuZHNXaXRoID0gJydbRU5EU19XSVRIXTtcblxuJGV4cG9ydCgkZXhwb3J0LlAgKyAkZXhwb3J0LkYgKiByZXF1aXJlKCcuL19mYWlscy1pcy1yZWdleHAnKShFTkRTX1dJVEgpLCAnU3RyaW5nJywge1xuICBlbmRzV2l0aDogZnVuY3Rpb24gZW5kc1dpdGgoc2VhcmNoU3RyaW5nIC8qICwgZW5kUG9zaXRpb24gPSBAbGVuZ3RoICovKSB7XG4gICAgdmFyIHRoYXQgPSBjb250ZXh0KHRoaXMsIHNlYXJjaFN0cmluZywgRU5EU19XSVRIKTtcbiAgICB2YXIgZW5kUG9zaXRpb24gPSBhcmd1bWVudHMubGVuZ3RoID4gMSA/IGFyZ3VtZW50c1sxXSA6IHVuZGVmaW5lZDtcbiAgICB2YXIgbGVuID0gdG9MZW5ndGgodGhhdC5sZW5ndGgpO1xuICAgIHZhciBlbmQgPSBlbmRQb3NpdGlvbiA9PT0gdW5kZWZpbmVkID8gbGVuIDogTWF0aC5taW4odG9MZW5ndGgoZW5kUG9zaXRpb24pLCBsZW4pO1xuICAgIHZhciBzZWFyY2ggPSBTdHJpbmcoc2VhcmNoU3RyaW5nKTtcbiAgICByZXR1cm4gJGVuZHNXaXRoXG4gICAgICA/ICRlbmRzV2l0aC5jYWxsKHRoYXQsIHNlYXJjaCwgZW5kKVxuICAgICAgOiB0aGF0LnNsaWNlKGVuZCAtIHNlYXJjaC5sZW5ndGgsIGVuZCkgPT09IHNlYXJjaDtcbiAgfVxufSk7XG4iLCIndXNlIHN0cmljdCc7XG4vLyBCLjIuMy42IFN0cmluZy5wcm90b3R5cGUuZml4ZWQoKVxucmVxdWlyZSgnLi9fc3RyaW5nLWh0bWwnKSgnZml4ZWQnLCBmdW5jdGlvbiAoY3JlYXRlSFRNTCkge1xuICByZXR1cm4gZnVuY3Rpb24gZml4ZWQoKSB7XG4gICAgcmV0dXJuIGNyZWF0ZUhUTUwodGhpcywgJ3R0JywgJycsICcnKTtcbiAgfTtcbn0pO1xuIiwiJ3VzZSBzdHJpY3QnO1xuLy8gQi4yLjMuNyBTdHJpbmcucHJvdG90eXBlLmZvbnRjb2xvcihjb2xvcilcbnJlcXVpcmUoJy4vX3N0cmluZy1odG1sJykoJ2ZvbnRjb2xvcicsIGZ1bmN0aW9uIChjcmVhdGVIVE1MKSB7XG4gIHJldHVybiBmdW5jdGlvbiBmb250Y29sb3IoY29sb3IpIHtcbiAgICByZXR1cm4gY3JlYXRlSFRNTCh0aGlzLCAnZm9udCcsICdjb2xvcicsIGNvbG9yKTtcbiAgfTtcbn0pO1xuIiwiJ3VzZSBzdHJpY3QnO1xuLy8gQi4yLjMuOCBTdHJpbmcucHJvdG90eXBlLmZvbnRzaXplKHNpemUpXG5yZXF1aXJlKCcuL19zdHJpbmctaHRtbCcpKCdmb250c2l6ZScsIGZ1bmN0aW9uIChjcmVhdGVIVE1MKSB7XG4gIHJldHVybiBmdW5jdGlvbiBmb250c2l6ZShzaXplKSB7XG4gICAgcmV0dXJuIGNyZWF0ZUhUTUwodGhpcywgJ2ZvbnQnLCAnc2l6ZScsIHNpemUpO1xuICB9O1xufSk7XG4iLCJ2YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyIHRvQWJzb2x1dGVJbmRleCA9IHJlcXVpcmUoJy4vX3RvLWFic29sdXRlLWluZGV4Jyk7XG52YXIgZnJvbUNoYXJDb2RlID0gU3RyaW5nLmZyb21DaGFyQ29kZTtcbnZhciAkZnJvbUNvZGVQb2ludCA9IFN0cmluZy5mcm9tQ29kZVBvaW50O1xuXG4vLyBsZW5ndGggc2hvdWxkIGJlIDEsIG9sZCBGRiBwcm9ibGVtXG4kZXhwb3J0KCRleHBvcnQuUyArICRleHBvcnQuRiAqICghISRmcm9tQ29kZVBvaW50ICYmICRmcm9tQ29kZVBvaW50Lmxlbmd0aCAhPSAxKSwgJ1N0cmluZycsIHtcbiAgLy8gMjEuMS4yLjIgU3RyaW5nLmZyb21Db2RlUG9pbnQoLi4uY29kZVBvaW50cylcbiAgZnJvbUNvZGVQb2ludDogZnVuY3Rpb24gZnJvbUNvZGVQb2ludCh4KSB7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tdW51c2VkLXZhcnNcbiAgICB2YXIgcmVzID0gW107XG4gICAgdmFyIGFMZW4gPSBhcmd1bWVudHMubGVuZ3RoO1xuICAgIHZhciBpID0gMDtcbiAgICB2YXIgY29kZTtcbiAgICB3aGlsZSAoYUxlbiA+IGkpIHtcbiAgICAgIGNvZGUgPSArYXJndW1lbnRzW2krK107XG4gICAgICBpZiAodG9BYnNvbHV0ZUluZGV4KGNvZGUsIDB4MTBmZmZmKSAhPT0gY29kZSkgdGhyb3cgUmFuZ2VFcnJvcihjb2RlICsgJyBpcyBub3QgYSB2YWxpZCBjb2RlIHBvaW50Jyk7XG4gICAgICByZXMucHVzaChjb2RlIDwgMHgxMDAwMFxuICAgICAgICA/IGZyb21DaGFyQ29kZShjb2RlKVxuICAgICAgICA6IGZyb21DaGFyQ29kZSgoKGNvZGUgLT0gMHgxMDAwMCkgPj4gMTApICsgMHhkODAwLCBjb2RlICUgMHg0MDAgKyAweGRjMDApXG4gICAgICApO1xuICAgIH0gcmV0dXJuIHJlcy5qb2luKCcnKTtcbiAgfVxufSk7XG4iLCIvLyAyMS4xLjMuNyBTdHJpbmcucHJvdG90eXBlLmluY2x1ZGVzKHNlYXJjaFN0cmluZywgcG9zaXRpb24gPSAwKVxuJ3VzZSBzdHJpY3QnO1xudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciBjb250ZXh0ID0gcmVxdWlyZSgnLi9fc3RyaW5nLWNvbnRleHQnKTtcbnZhciBJTkNMVURFUyA9ICdpbmNsdWRlcyc7XG5cbiRleHBvcnQoJGV4cG9ydC5QICsgJGV4cG9ydC5GICogcmVxdWlyZSgnLi9fZmFpbHMtaXMtcmVnZXhwJykoSU5DTFVERVMpLCAnU3RyaW5nJywge1xuICBpbmNsdWRlczogZnVuY3Rpb24gaW5jbHVkZXMoc2VhcmNoU3RyaW5nIC8qICwgcG9zaXRpb24gPSAwICovKSB7XG4gICAgcmV0dXJuICEhfmNvbnRleHQodGhpcywgc2VhcmNoU3RyaW5nLCBJTkNMVURFUylcbiAgICAgIC5pbmRleE9mKHNlYXJjaFN0cmluZywgYXJndW1lbnRzLmxlbmd0aCA+IDEgPyBhcmd1bWVudHNbMV0gOiB1bmRlZmluZWQpO1xuICB9XG59KTtcbiIsIid1c2Ugc3RyaWN0Jztcbi8vIEIuMi4zLjkgU3RyaW5nLnByb3RvdHlwZS5pdGFsaWNzKClcbnJlcXVpcmUoJy4vX3N0cmluZy1odG1sJykoJ2l0YWxpY3MnLCBmdW5jdGlvbiAoY3JlYXRlSFRNTCkge1xuICByZXR1cm4gZnVuY3Rpb24gaXRhbGljcygpIHtcbiAgICByZXR1cm4gY3JlYXRlSFRNTCh0aGlzLCAnaScsICcnLCAnJyk7XG4gIH07XG59KTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciAkYXQgPSByZXF1aXJlKCcuL19zdHJpbmctYXQnKSh0cnVlKTtcblxuLy8gMjEuMS4zLjI3IFN0cmluZy5wcm90b3R5cGVbQEBpdGVyYXRvcl0oKVxucmVxdWlyZSgnLi9faXRlci1kZWZpbmUnKShTdHJpbmcsICdTdHJpbmcnLCBmdW5jdGlvbiAoaXRlcmF0ZWQpIHtcbiAgdGhpcy5fdCA9IFN0cmluZyhpdGVyYXRlZCk7IC8vIHRhcmdldFxuICB0aGlzLl9pID0gMDsgICAgICAgICAgICAgICAgLy8gbmV4dCBpbmRleFxuLy8gMjEuMS41LjIuMSAlU3RyaW5nSXRlcmF0b3JQcm90b3R5cGUlLm5leHQoKVxufSwgZnVuY3Rpb24gKCkge1xuICB2YXIgTyA9IHRoaXMuX3Q7XG4gIHZhciBpbmRleCA9IHRoaXMuX2k7XG4gIHZhciBwb2ludDtcbiAgaWYgKGluZGV4ID49IE8ubGVuZ3RoKSByZXR1cm4geyB2YWx1ZTogdW5kZWZpbmVkLCBkb25lOiB0cnVlIH07XG4gIHBvaW50ID0gJGF0KE8sIGluZGV4KTtcbiAgdGhpcy5faSArPSBwb2ludC5sZW5ndGg7XG4gIHJldHVybiB7IHZhbHVlOiBwb2ludCwgZG9uZTogZmFsc2UgfTtcbn0pO1xuIiwiJ3VzZSBzdHJpY3QnO1xuLy8gQi4yLjMuMTAgU3RyaW5nLnByb3RvdHlwZS5saW5rKHVybClcbnJlcXVpcmUoJy4vX3N0cmluZy1odG1sJykoJ2xpbmsnLCBmdW5jdGlvbiAoY3JlYXRlSFRNTCkge1xuICByZXR1cm4gZnVuY3Rpb24gbGluayh1cmwpIHtcbiAgICByZXR1cm4gY3JlYXRlSFRNTCh0aGlzLCAnYScsICdocmVmJywgdXJsKTtcbiAgfTtcbn0pO1xuIiwidmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciB0b0lPYmplY3QgPSByZXF1aXJlKCcuL190by1pb2JqZWN0Jyk7XG52YXIgdG9MZW5ndGggPSByZXF1aXJlKCcuL190by1sZW5ndGgnKTtcblxuJGV4cG9ydCgkZXhwb3J0LlMsICdTdHJpbmcnLCB7XG4gIC8vIDIxLjEuMi40IFN0cmluZy5yYXcoY2FsbFNpdGUsIC4uLnN1YnN0aXR1dGlvbnMpXG4gIHJhdzogZnVuY3Rpb24gcmF3KGNhbGxTaXRlKSB7XG4gICAgdmFyIHRwbCA9IHRvSU9iamVjdChjYWxsU2l0ZS5yYXcpO1xuICAgIHZhciBsZW4gPSB0b0xlbmd0aCh0cGwubGVuZ3RoKTtcbiAgICB2YXIgYUxlbiA9IGFyZ3VtZW50cy5sZW5ndGg7XG4gICAgdmFyIHJlcyA9IFtdO1xuICAgIHZhciBpID0gMDtcbiAgICB3aGlsZSAobGVuID4gaSkge1xuICAgICAgcmVzLnB1c2goU3RyaW5nKHRwbFtpKytdKSk7XG4gICAgICBpZiAoaSA8IGFMZW4pIHJlcy5wdXNoKFN0cmluZyhhcmd1bWVudHNbaV0pKTtcbiAgICB9IHJldHVybiByZXMuam9pbignJyk7XG4gIH1cbn0pO1xuIiwidmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcblxuJGV4cG9ydCgkZXhwb3J0LlAsICdTdHJpbmcnLCB7XG4gIC8vIDIxLjEuMy4xMyBTdHJpbmcucHJvdG90eXBlLnJlcGVhdChjb3VudClcbiAgcmVwZWF0OiByZXF1aXJlKCcuL19zdHJpbmctcmVwZWF0Jylcbn0pO1xuIiwiJ3VzZSBzdHJpY3QnO1xuLy8gQi4yLjMuMTEgU3RyaW5nLnByb3RvdHlwZS5zbWFsbCgpXG5yZXF1aXJlKCcuL19zdHJpbmctaHRtbCcpKCdzbWFsbCcsIGZ1bmN0aW9uIChjcmVhdGVIVE1MKSB7XG4gIHJldHVybiBmdW5jdGlvbiBzbWFsbCgpIHtcbiAgICByZXR1cm4gY3JlYXRlSFRNTCh0aGlzLCAnc21hbGwnLCAnJywgJycpO1xuICB9O1xufSk7XG4iLCIvLyAyMS4xLjMuMTggU3RyaW5nLnByb3RvdHlwZS5zdGFydHNXaXRoKHNlYXJjaFN0cmluZyBbLCBwb3NpdGlvbiBdKVxuJ3VzZSBzdHJpY3QnO1xudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciB0b0xlbmd0aCA9IHJlcXVpcmUoJy4vX3RvLWxlbmd0aCcpO1xudmFyIGNvbnRleHQgPSByZXF1aXJlKCcuL19zdHJpbmctY29udGV4dCcpO1xudmFyIFNUQVJUU19XSVRIID0gJ3N0YXJ0c1dpdGgnO1xudmFyICRzdGFydHNXaXRoID0gJydbU1RBUlRTX1dJVEhdO1xuXG4kZXhwb3J0KCRleHBvcnQuUCArICRleHBvcnQuRiAqIHJlcXVpcmUoJy4vX2ZhaWxzLWlzLXJlZ2V4cCcpKFNUQVJUU19XSVRIKSwgJ1N0cmluZycsIHtcbiAgc3RhcnRzV2l0aDogZnVuY3Rpb24gc3RhcnRzV2l0aChzZWFyY2hTdHJpbmcgLyogLCBwb3NpdGlvbiA9IDAgKi8pIHtcbiAgICB2YXIgdGhhdCA9IGNvbnRleHQodGhpcywgc2VhcmNoU3RyaW5nLCBTVEFSVFNfV0lUSCk7XG4gICAgdmFyIGluZGV4ID0gdG9MZW5ndGgoTWF0aC5taW4oYXJndW1lbnRzLmxlbmd0aCA+IDEgPyBhcmd1bWVudHNbMV0gOiB1bmRlZmluZWQsIHRoYXQubGVuZ3RoKSk7XG4gICAgdmFyIHNlYXJjaCA9IFN0cmluZyhzZWFyY2hTdHJpbmcpO1xuICAgIHJldHVybiAkc3RhcnRzV2l0aFxuICAgICAgPyAkc3RhcnRzV2l0aC5jYWxsKHRoYXQsIHNlYXJjaCwgaW5kZXgpXG4gICAgICA6IHRoYXQuc2xpY2UoaW5kZXgsIGluZGV4ICsgc2VhcmNoLmxlbmd0aCkgPT09IHNlYXJjaDtcbiAgfVxufSk7XG4iLCIndXNlIHN0cmljdCc7XG4vLyBCLjIuMy4xMiBTdHJpbmcucHJvdG90eXBlLnN0cmlrZSgpXG5yZXF1aXJlKCcuL19zdHJpbmctaHRtbCcpKCdzdHJpa2UnLCBmdW5jdGlvbiAoY3JlYXRlSFRNTCkge1xuICByZXR1cm4gZnVuY3Rpb24gc3RyaWtlKCkge1xuICAgIHJldHVybiBjcmVhdGVIVE1MKHRoaXMsICdzdHJpa2UnLCAnJywgJycpO1xuICB9O1xufSk7XG4iLCIndXNlIHN0cmljdCc7XG4vLyBCLjIuMy4xMyBTdHJpbmcucHJvdG90eXBlLnN1YigpXG5yZXF1aXJlKCcuL19zdHJpbmctaHRtbCcpKCdzdWInLCBmdW5jdGlvbiAoY3JlYXRlSFRNTCkge1xuICByZXR1cm4gZnVuY3Rpb24gc3ViKCkge1xuICAgIHJldHVybiBjcmVhdGVIVE1MKHRoaXMsICdzdWInLCAnJywgJycpO1xuICB9O1xufSk7XG4iLCIndXNlIHN0cmljdCc7XG4vLyBCLjIuMy4xNCBTdHJpbmcucHJvdG90eXBlLnN1cCgpXG5yZXF1aXJlKCcuL19zdHJpbmctaHRtbCcpKCdzdXAnLCBmdW5jdGlvbiAoY3JlYXRlSFRNTCkge1xuICByZXR1cm4gZnVuY3Rpb24gc3VwKCkge1xuICAgIHJldHVybiBjcmVhdGVIVE1MKHRoaXMsICdzdXAnLCAnJywgJycpO1xuICB9O1xufSk7XG4iLCIndXNlIHN0cmljdCc7XG4vLyAyMS4xLjMuMjUgU3RyaW5nLnByb3RvdHlwZS50cmltKClcbnJlcXVpcmUoJy4vX3N0cmluZy10cmltJykoJ3RyaW0nLCBmdW5jdGlvbiAoJHRyaW0pIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIHRyaW0oKSB7XG4gICAgcmV0dXJuICR0cmltKHRoaXMsIDMpO1xuICB9O1xufSk7XG4iLCIndXNlIHN0cmljdCc7XG4vLyBFQ01BU2NyaXB0IDYgc3ltYm9scyBzaGltXG52YXIgZ2xvYmFsID0gcmVxdWlyZSgnLi9fZ2xvYmFsJyk7XG52YXIgaGFzID0gcmVxdWlyZSgnLi9faGFzJyk7XG52YXIgREVTQ1JJUFRPUlMgPSByZXF1aXJlKCcuL19kZXNjcmlwdG9ycycpO1xudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciByZWRlZmluZSA9IHJlcXVpcmUoJy4vX3JlZGVmaW5lJyk7XG52YXIgTUVUQSA9IHJlcXVpcmUoJy4vX21ldGEnKS5LRVk7XG52YXIgJGZhaWxzID0gcmVxdWlyZSgnLi9fZmFpbHMnKTtcbnZhciBzaGFyZWQgPSByZXF1aXJlKCcuL19zaGFyZWQnKTtcbnZhciBzZXRUb1N0cmluZ1RhZyA9IHJlcXVpcmUoJy4vX3NldC10by1zdHJpbmctdGFnJyk7XG52YXIgdWlkID0gcmVxdWlyZSgnLi9fdWlkJyk7XG52YXIgd2tzID0gcmVxdWlyZSgnLi9fd2tzJyk7XG52YXIgd2tzRXh0ID0gcmVxdWlyZSgnLi9fd2tzLWV4dCcpO1xudmFyIHdrc0RlZmluZSA9IHJlcXVpcmUoJy4vX3drcy1kZWZpbmUnKTtcbnZhciBlbnVtS2V5cyA9IHJlcXVpcmUoJy4vX2VudW0ta2V5cycpO1xudmFyIGlzQXJyYXkgPSByZXF1aXJlKCcuL19pcy1hcnJheScpO1xudmFyIGFuT2JqZWN0ID0gcmVxdWlyZSgnLi9fYW4tb2JqZWN0Jyk7XG52YXIgaXNPYmplY3QgPSByZXF1aXJlKCcuL19pcy1vYmplY3QnKTtcbnZhciB0b0lPYmplY3QgPSByZXF1aXJlKCcuL190by1pb2JqZWN0Jyk7XG52YXIgdG9QcmltaXRpdmUgPSByZXF1aXJlKCcuL190by1wcmltaXRpdmUnKTtcbnZhciBjcmVhdGVEZXNjID0gcmVxdWlyZSgnLi9fcHJvcGVydHktZGVzYycpO1xudmFyIF9jcmVhdGUgPSByZXF1aXJlKCcuL19vYmplY3QtY3JlYXRlJyk7XG52YXIgZ09QTkV4dCA9IHJlcXVpcmUoJy4vX29iamVjdC1nb3BuLWV4dCcpO1xudmFyICRHT1BEID0gcmVxdWlyZSgnLi9fb2JqZWN0LWdvcGQnKTtcbnZhciAkRFAgPSByZXF1aXJlKCcuL19vYmplY3QtZHAnKTtcbnZhciAka2V5cyA9IHJlcXVpcmUoJy4vX29iamVjdC1rZXlzJyk7XG52YXIgZ09QRCA9ICRHT1BELmY7XG52YXIgZFAgPSAkRFAuZjtcbnZhciBnT1BOID0gZ09QTkV4dC5mO1xudmFyICRTeW1ib2wgPSBnbG9iYWwuU3ltYm9sO1xudmFyICRKU09OID0gZ2xvYmFsLkpTT047XG52YXIgX3N0cmluZ2lmeSA9ICRKU09OICYmICRKU09OLnN0cmluZ2lmeTtcbnZhciBQUk9UT1RZUEUgPSAncHJvdG90eXBlJztcbnZhciBISURERU4gPSB3a3MoJ19oaWRkZW4nKTtcbnZhciBUT19QUklNSVRJVkUgPSB3a3MoJ3RvUHJpbWl0aXZlJyk7XG52YXIgaXNFbnVtID0ge30ucHJvcGVydHlJc0VudW1lcmFibGU7XG52YXIgU3ltYm9sUmVnaXN0cnkgPSBzaGFyZWQoJ3N5bWJvbC1yZWdpc3RyeScpO1xudmFyIEFsbFN5bWJvbHMgPSBzaGFyZWQoJ3N5bWJvbHMnKTtcbnZhciBPUFN5bWJvbHMgPSBzaGFyZWQoJ29wLXN5bWJvbHMnKTtcbnZhciBPYmplY3RQcm90byA9IE9iamVjdFtQUk9UT1RZUEVdO1xudmFyIFVTRV9OQVRJVkUgPSB0eXBlb2YgJFN5bWJvbCA9PSAnZnVuY3Rpb24nO1xudmFyIFFPYmplY3QgPSBnbG9iYWwuUU9iamVjdDtcbi8vIERvbid0IHVzZSBzZXR0ZXJzIGluIFF0IFNjcmlwdCwgaHR0cHM6Ly9naXRodWIuY29tL3psb2lyb2NrL2NvcmUtanMvaXNzdWVzLzE3M1xudmFyIHNldHRlciA9ICFRT2JqZWN0IHx8ICFRT2JqZWN0W1BST1RPVFlQRV0gfHwgIVFPYmplY3RbUFJPVE9UWVBFXS5maW5kQ2hpbGQ7XG5cbi8vIGZhbGxiYWNrIGZvciBvbGQgQW5kcm9pZCwgaHR0cHM6Ly9jb2RlLmdvb2dsZS5jb20vcC92OC9pc3N1ZXMvZGV0YWlsP2lkPTY4N1xudmFyIHNldFN5bWJvbERlc2MgPSBERVNDUklQVE9SUyAmJiAkZmFpbHMoZnVuY3Rpb24gKCkge1xuICByZXR1cm4gX2NyZWF0ZShkUCh7fSwgJ2EnLCB7XG4gICAgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBkUCh0aGlzLCAnYScsIHsgdmFsdWU6IDcgfSkuYTsgfVxuICB9KSkuYSAhPSA3O1xufSkgPyBmdW5jdGlvbiAoaXQsIGtleSwgRCkge1xuICB2YXIgcHJvdG9EZXNjID0gZ09QRChPYmplY3RQcm90bywga2V5KTtcbiAgaWYgKHByb3RvRGVzYykgZGVsZXRlIE9iamVjdFByb3RvW2tleV07XG4gIGRQKGl0LCBrZXksIEQpO1xuICBpZiAocHJvdG9EZXNjICYmIGl0ICE9PSBPYmplY3RQcm90bykgZFAoT2JqZWN0UHJvdG8sIGtleSwgcHJvdG9EZXNjKTtcbn0gOiBkUDtcblxudmFyIHdyYXAgPSBmdW5jdGlvbiAodGFnKSB7XG4gIHZhciBzeW0gPSBBbGxTeW1ib2xzW3RhZ10gPSBfY3JlYXRlKCRTeW1ib2xbUFJPVE9UWVBFXSk7XG4gIHN5bS5fayA9IHRhZztcbiAgcmV0dXJuIHN5bTtcbn07XG5cbnZhciBpc1N5bWJvbCA9IFVTRV9OQVRJVkUgJiYgdHlwZW9mICRTeW1ib2wuaXRlcmF0b3IgPT0gJ3N5bWJvbCcgPyBmdW5jdGlvbiAoaXQpIHtcbiAgcmV0dXJuIHR5cGVvZiBpdCA9PSAnc3ltYm9sJztcbn0gOiBmdW5jdGlvbiAoaXQpIHtcbiAgcmV0dXJuIGl0IGluc3RhbmNlb2YgJFN5bWJvbDtcbn07XG5cbnZhciAkZGVmaW5lUHJvcGVydHkgPSBmdW5jdGlvbiBkZWZpbmVQcm9wZXJ0eShpdCwga2V5LCBEKSB7XG4gIGlmIChpdCA9PT0gT2JqZWN0UHJvdG8pICRkZWZpbmVQcm9wZXJ0eShPUFN5bWJvbHMsIGtleSwgRCk7XG4gIGFuT2JqZWN0KGl0KTtcbiAga2V5ID0gdG9QcmltaXRpdmUoa2V5LCB0cnVlKTtcbiAgYW5PYmplY3QoRCk7XG4gIGlmIChoYXMoQWxsU3ltYm9scywga2V5KSkge1xuICAgIGlmICghRC5lbnVtZXJhYmxlKSB7XG4gICAgICBpZiAoIWhhcyhpdCwgSElEREVOKSkgZFAoaXQsIEhJRERFTiwgY3JlYXRlRGVzYygxLCB7fSkpO1xuICAgICAgaXRbSElEREVOXVtrZXldID0gdHJ1ZTtcbiAgICB9IGVsc2Uge1xuICAgICAgaWYgKGhhcyhpdCwgSElEREVOKSAmJiBpdFtISURERU5dW2tleV0pIGl0W0hJRERFTl1ba2V5XSA9IGZhbHNlO1xuICAgICAgRCA9IF9jcmVhdGUoRCwgeyBlbnVtZXJhYmxlOiBjcmVhdGVEZXNjKDAsIGZhbHNlKSB9KTtcbiAgICB9IHJldHVybiBzZXRTeW1ib2xEZXNjKGl0LCBrZXksIEQpO1xuICB9IHJldHVybiBkUChpdCwga2V5LCBEKTtcbn07XG52YXIgJGRlZmluZVByb3BlcnRpZXMgPSBmdW5jdGlvbiBkZWZpbmVQcm9wZXJ0aWVzKGl0LCBQKSB7XG4gIGFuT2JqZWN0KGl0KTtcbiAgdmFyIGtleXMgPSBlbnVtS2V5cyhQID0gdG9JT2JqZWN0KFApKTtcbiAgdmFyIGkgPSAwO1xuICB2YXIgbCA9IGtleXMubGVuZ3RoO1xuICB2YXIga2V5O1xuICB3aGlsZSAobCA+IGkpICRkZWZpbmVQcm9wZXJ0eShpdCwga2V5ID0ga2V5c1tpKytdLCBQW2tleV0pO1xuICByZXR1cm4gaXQ7XG59O1xudmFyICRjcmVhdGUgPSBmdW5jdGlvbiBjcmVhdGUoaXQsIFApIHtcbiAgcmV0dXJuIFAgPT09IHVuZGVmaW5lZCA/IF9jcmVhdGUoaXQpIDogJGRlZmluZVByb3BlcnRpZXMoX2NyZWF0ZShpdCksIFApO1xufTtcbnZhciAkcHJvcGVydHlJc0VudW1lcmFibGUgPSBmdW5jdGlvbiBwcm9wZXJ0eUlzRW51bWVyYWJsZShrZXkpIHtcbiAgdmFyIEUgPSBpc0VudW0uY2FsbCh0aGlzLCBrZXkgPSB0b1ByaW1pdGl2ZShrZXksIHRydWUpKTtcbiAgaWYgKHRoaXMgPT09IE9iamVjdFByb3RvICYmIGhhcyhBbGxTeW1ib2xzLCBrZXkpICYmICFoYXMoT1BTeW1ib2xzLCBrZXkpKSByZXR1cm4gZmFsc2U7XG4gIHJldHVybiBFIHx8ICFoYXModGhpcywga2V5KSB8fCAhaGFzKEFsbFN5bWJvbHMsIGtleSkgfHwgaGFzKHRoaXMsIEhJRERFTikgJiYgdGhpc1tISURERU5dW2tleV0gPyBFIDogdHJ1ZTtcbn07XG52YXIgJGdldE93blByb3BlcnR5RGVzY3JpcHRvciA9IGZ1bmN0aW9uIGdldE93blByb3BlcnR5RGVzY3JpcHRvcihpdCwga2V5KSB7XG4gIGl0ID0gdG9JT2JqZWN0KGl0KTtcbiAga2V5ID0gdG9QcmltaXRpdmUoa2V5LCB0cnVlKTtcbiAgaWYgKGl0ID09PSBPYmplY3RQcm90byAmJiBoYXMoQWxsU3ltYm9scywga2V5KSAmJiAhaGFzKE9QU3ltYm9scywga2V5KSkgcmV0dXJuO1xuICB2YXIgRCA9IGdPUEQoaXQsIGtleSk7XG4gIGlmIChEICYmIGhhcyhBbGxTeW1ib2xzLCBrZXkpICYmICEoaGFzKGl0LCBISURERU4pICYmIGl0W0hJRERFTl1ba2V5XSkpIEQuZW51bWVyYWJsZSA9IHRydWU7XG4gIHJldHVybiBEO1xufTtcbnZhciAkZ2V0T3duUHJvcGVydHlOYW1lcyA9IGZ1bmN0aW9uIGdldE93blByb3BlcnR5TmFtZXMoaXQpIHtcbiAgdmFyIG5hbWVzID0gZ09QTih0b0lPYmplY3QoaXQpKTtcbiAgdmFyIHJlc3VsdCA9IFtdO1xuICB2YXIgaSA9IDA7XG4gIHZhciBrZXk7XG4gIHdoaWxlIChuYW1lcy5sZW5ndGggPiBpKSB7XG4gICAgaWYgKCFoYXMoQWxsU3ltYm9scywga2V5ID0gbmFtZXNbaSsrXSkgJiYga2V5ICE9IEhJRERFTiAmJiBrZXkgIT0gTUVUQSkgcmVzdWx0LnB1c2goa2V5KTtcbiAgfSByZXR1cm4gcmVzdWx0O1xufTtcbnZhciAkZ2V0T3duUHJvcGVydHlTeW1ib2xzID0gZnVuY3Rpb24gZ2V0T3duUHJvcGVydHlTeW1ib2xzKGl0KSB7XG4gIHZhciBJU19PUCA9IGl0ID09PSBPYmplY3RQcm90bztcbiAgdmFyIG5hbWVzID0gZ09QTihJU19PUCA/IE9QU3ltYm9scyA6IHRvSU9iamVjdChpdCkpO1xuICB2YXIgcmVzdWx0ID0gW107XG4gIHZhciBpID0gMDtcbiAgdmFyIGtleTtcbiAgd2hpbGUgKG5hbWVzLmxlbmd0aCA+IGkpIHtcbiAgICBpZiAoaGFzKEFsbFN5bWJvbHMsIGtleSA9IG5hbWVzW2krK10pICYmIChJU19PUCA/IGhhcyhPYmplY3RQcm90bywga2V5KSA6IHRydWUpKSByZXN1bHQucHVzaChBbGxTeW1ib2xzW2tleV0pO1xuICB9IHJldHVybiByZXN1bHQ7XG59O1xuXG4vLyAxOS40LjEuMSBTeW1ib2woW2Rlc2NyaXB0aW9uXSlcbmlmICghVVNFX05BVElWRSkge1xuICAkU3ltYm9sID0gZnVuY3Rpb24gU3ltYm9sKCkge1xuICAgIGlmICh0aGlzIGluc3RhbmNlb2YgJFN5bWJvbCkgdGhyb3cgVHlwZUVycm9yKCdTeW1ib2wgaXMgbm90IGEgY29uc3RydWN0b3IhJyk7XG4gICAgdmFyIHRhZyA9IHVpZChhcmd1bWVudHMubGVuZ3RoID4gMCA/IGFyZ3VtZW50c1swXSA6IHVuZGVmaW5lZCk7XG4gICAgdmFyICRzZXQgPSBmdW5jdGlvbiAodmFsdWUpIHtcbiAgICAgIGlmICh0aGlzID09PSBPYmplY3RQcm90bykgJHNldC5jYWxsKE9QU3ltYm9scywgdmFsdWUpO1xuICAgICAgaWYgKGhhcyh0aGlzLCBISURERU4pICYmIGhhcyh0aGlzW0hJRERFTl0sIHRhZykpIHRoaXNbSElEREVOXVt0YWddID0gZmFsc2U7XG4gICAgICBzZXRTeW1ib2xEZXNjKHRoaXMsIHRhZywgY3JlYXRlRGVzYygxLCB2YWx1ZSkpO1xuICAgIH07XG4gICAgaWYgKERFU0NSSVBUT1JTICYmIHNldHRlcikgc2V0U3ltYm9sRGVzYyhPYmplY3RQcm90bywgdGFnLCB7IGNvbmZpZ3VyYWJsZTogdHJ1ZSwgc2V0OiAkc2V0IH0pO1xuICAgIHJldHVybiB3cmFwKHRhZyk7XG4gIH07XG4gIHJlZGVmaW5lKCRTeW1ib2xbUFJPVE9UWVBFXSwgJ3RvU3RyaW5nJywgZnVuY3Rpb24gdG9TdHJpbmcoKSB7XG4gICAgcmV0dXJuIHRoaXMuX2s7XG4gIH0pO1xuXG4gICRHT1BELmYgPSAkZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yO1xuICAkRFAuZiA9ICRkZWZpbmVQcm9wZXJ0eTtcbiAgcmVxdWlyZSgnLi9fb2JqZWN0LWdvcG4nKS5mID0gZ09QTkV4dC5mID0gJGdldE93blByb3BlcnR5TmFtZXM7XG4gIHJlcXVpcmUoJy4vX29iamVjdC1waWUnKS5mID0gJHByb3BlcnR5SXNFbnVtZXJhYmxlO1xuICByZXF1aXJlKCcuL19vYmplY3QtZ29wcycpLmYgPSAkZ2V0T3duUHJvcGVydHlTeW1ib2xzO1xuXG4gIGlmIChERVNDUklQVE9SUyAmJiAhcmVxdWlyZSgnLi9fbGlicmFyeScpKSB7XG4gICAgcmVkZWZpbmUoT2JqZWN0UHJvdG8sICdwcm9wZXJ0eUlzRW51bWVyYWJsZScsICRwcm9wZXJ0eUlzRW51bWVyYWJsZSwgdHJ1ZSk7XG4gIH1cblxuICB3a3NFeHQuZiA9IGZ1bmN0aW9uIChuYW1lKSB7XG4gICAgcmV0dXJuIHdyYXAod2tzKG5hbWUpKTtcbiAgfTtcbn1cblxuJGV4cG9ydCgkZXhwb3J0LkcgKyAkZXhwb3J0LlcgKyAkZXhwb3J0LkYgKiAhVVNFX05BVElWRSwgeyBTeW1ib2w6ICRTeW1ib2wgfSk7XG5cbmZvciAodmFyIGVzNlN5bWJvbHMgPSAoXG4gIC8vIDE5LjQuMi4yLCAxOS40LjIuMywgMTkuNC4yLjQsIDE5LjQuMi42LCAxOS40LjIuOCwgMTkuNC4yLjksIDE5LjQuMi4xMCwgMTkuNC4yLjExLCAxOS40LjIuMTIsIDE5LjQuMi4xMywgMTkuNC4yLjE0XG4gICdoYXNJbnN0YW5jZSxpc0NvbmNhdFNwcmVhZGFibGUsaXRlcmF0b3IsbWF0Y2gscmVwbGFjZSxzZWFyY2gsc3BlY2llcyxzcGxpdCx0b1ByaW1pdGl2ZSx0b1N0cmluZ1RhZyx1bnNjb3BhYmxlcydcbikuc3BsaXQoJywnKSwgaiA9IDA7IGVzNlN5bWJvbHMubGVuZ3RoID4gajspd2tzKGVzNlN5bWJvbHNbaisrXSk7XG5cbmZvciAodmFyIHdlbGxLbm93blN5bWJvbHMgPSAka2V5cyh3a3Muc3RvcmUpLCBrID0gMDsgd2VsbEtub3duU3ltYm9scy5sZW5ndGggPiBrOykgd2tzRGVmaW5lKHdlbGxLbm93blN5bWJvbHNbaysrXSk7XG5cbiRleHBvcnQoJGV4cG9ydC5TICsgJGV4cG9ydC5GICogIVVTRV9OQVRJVkUsICdTeW1ib2wnLCB7XG4gIC8vIDE5LjQuMi4xIFN5bWJvbC5mb3Ioa2V5KVxuICAnZm9yJzogZnVuY3Rpb24gKGtleSkge1xuICAgIHJldHVybiBoYXMoU3ltYm9sUmVnaXN0cnksIGtleSArPSAnJylcbiAgICAgID8gU3ltYm9sUmVnaXN0cnlba2V5XVxuICAgICAgOiBTeW1ib2xSZWdpc3RyeVtrZXldID0gJFN5bWJvbChrZXkpO1xuICB9LFxuICAvLyAxOS40LjIuNSBTeW1ib2wua2V5Rm9yKHN5bSlcbiAga2V5Rm9yOiBmdW5jdGlvbiBrZXlGb3Ioc3ltKSB7XG4gICAgaWYgKCFpc1N5bWJvbChzeW0pKSB0aHJvdyBUeXBlRXJyb3Ioc3ltICsgJyBpcyBub3QgYSBzeW1ib2whJyk7XG4gICAgZm9yICh2YXIga2V5IGluIFN5bWJvbFJlZ2lzdHJ5KSBpZiAoU3ltYm9sUmVnaXN0cnlba2V5XSA9PT0gc3ltKSByZXR1cm4ga2V5O1xuICB9LFxuICB1c2VTZXR0ZXI6IGZ1bmN0aW9uICgpIHsgc2V0dGVyID0gdHJ1ZTsgfSxcbiAgdXNlU2ltcGxlOiBmdW5jdGlvbiAoKSB7IHNldHRlciA9IGZhbHNlOyB9XG59KTtcblxuJGV4cG9ydCgkZXhwb3J0LlMgKyAkZXhwb3J0LkYgKiAhVVNFX05BVElWRSwgJ09iamVjdCcsIHtcbiAgLy8gMTkuMS4yLjIgT2JqZWN0LmNyZWF0ZShPIFssIFByb3BlcnRpZXNdKVxuICBjcmVhdGU6ICRjcmVhdGUsXG4gIC8vIDE5LjEuMi40IE9iamVjdC5kZWZpbmVQcm9wZXJ0eShPLCBQLCBBdHRyaWJ1dGVzKVxuICBkZWZpbmVQcm9wZXJ0eTogJGRlZmluZVByb3BlcnR5LFxuICAvLyAxOS4xLjIuMyBPYmplY3QuZGVmaW5lUHJvcGVydGllcyhPLCBQcm9wZXJ0aWVzKVxuICBkZWZpbmVQcm9wZXJ0aWVzOiAkZGVmaW5lUHJvcGVydGllcyxcbiAgLy8gMTkuMS4yLjYgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihPLCBQKVxuICBnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3I6ICRnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IsXG4gIC8vIDE5LjEuMi43IE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKE8pXG4gIGdldE93blByb3BlcnR5TmFtZXM6ICRnZXRPd25Qcm9wZXJ0eU5hbWVzLFxuICAvLyAxOS4xLjIuOCBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKE8pXG4gIGdldE93blByb3BlcnR5U3ltYm9sczogJGdldE93blByb3BlcnR5U3ltYm9sc1xufSk7XG5cbi8vIDI0LjMuMiBKU09OLnN0cmluZ2lmeSh2YWx1ZSBbLCByZXBsYWNlciBbLCBzcGFjZV1dKVxuJEpTT04gJiYgJGV4cG9ydCgkZXhwb3J0LlMgKyAkZXhwb3J0LkYgKiAoIVVTRV9OQVRJVkUgfHwgJGZhaWxzKGZ1bmN0aW9uICgpIHtcbiAgdmFyIFMgPSAkU3ltYm9sKCk7XG4gIC8vIE1TIEVkZ2UgY29udmVydHMgc3ltYm9sIHZhbHVlcyB0byBKU09OIGFzIHt9XG4gIC8vIFdlYktpdCBjb252ZXJ0cyBzeW1ib2wgdmFsdWVzIHRvIEpTT04gYXMgbnVsbFxuICAvLyBWOCB0aHJvd3Mgb24gYm94ZWQgc3ltYm9sc1xuICByZXR1cm4gX3N0cmluZ2lmeShbU10pICE9ICdbbnVsbF0nIHx8IF9zdHJpbmdpZnkoeyBhOiBTIH0pICE9ICd7fScgfHwgX3N0cmluZ2lmeShPYmplY3QoUykpICE9ICd7fSc7XG59KSksICdKU09OJywge1xuICBzdHJpbmdpZnk6IGZ1bmN0aW9uIHN0cmluZ2lmeShpdCkge1xuICAgIHZhciBhcmdzID0gW2l0XTtcbiAgICB2YXIgaSA9IDE7XG4gICAgdmFyIHJlcGxhY2VyLCAkcmVwbGFjZXI7XG4gICAgd2hpbGUgKGFyZ3VtZW50cy5sZW5ndGggPiBpKSBhcmdzLnB1c2goYXJndW1lbnRzW2krK10pO1xuICAgICRyZXBsYWNlciA9IHJlcGxhY2VyID0gYXJnc1sxXTtcbiAgICBpZiAoIWlzT2JqZWN0KHJlcGxhY2VyKSAmJiBpdCA9PT0gdW5kZWZpbmVkIHx8IGlzU3ltYm9sKGl0KSkgcmV0dXJuOyAvLyBJRTggcmV0dXJucyBzdHJpbmcgb24gdW5kZWZpbmVkXG4gICAgaWYgKCFpc0FycmF5KHJlcGxhY2VyKSkgcmVwbGFjZXIgPSBmdW5jdGlvbiAoa2V5LCB2YWx1ZSkge1xuICAgICAgaWYgKHR5cGVvZiAkcmVwbGFjZXIgPT0gJ2Z1bmN0aW9uJykgdmFsdWUgPSAkcmVwbGFjZXIuY2FsbCh0aGlzLCBrZXksIHZhbHVlKTtcbiAgICAgIGlmICghaXNTeW1ib2wodmFsdWUpKSByZXR1cm4gdmFsdWU7XG4gICAgfTtcbiAgICBhcmdzWzFdID0gcmVwbGFjZXI7XG4gICAgcmV0dXJuIF9zdHJpbmdpZnkuYXBwbHkoJEpTT04sIGFyZ3MpO1xuICB9XG59KTtcblxuLy8gMTkuNC4zLjQgU3ltYm9sLnByb3RvdHlwZVtAQHRvUHJpbWl0aXZlXShoaW50KVxuJFN5bWJvbFtQUk9UT1RZUEVdW1RPX1BSSU1JVElWRV0gfHwgcmVxdWlyZSgnLi9faGlkZScpKCRTeW1ib2xbUFJPVE9UWVBFXSwgVE9fUFJJTUlUSVZFLCAkU3ltYm9sW1BST1RPVFlQRV0udmFsdWVPZik7XG4vLyAxOS40LjMuNSBTeW1ib2wucHJvdG90eXBlW0BAdG9TdHJpbmdUYWddXG5zZXRUb1N0cmluZ1RhZygkU3ltYm9sLCAnU3ltYm9sJyk7XG4vLyAyMC4yLjEuOSBNYXRoW0BAdG9TdHJpbmdUYWddXG5zZXRUb1N0cmluZ1RhZyhNYXRoLCAnTWF0aCcsIHRydWUpO1xuLy8gMjQuMy4zIEpTT05bQEB0b1N0cmluZ1RhZ11cbnNldFRvU3RyaW5nVGFnKGdsb2JhbC5KU09OLCAnSlNPTicsIHRydWUpO1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciAkdHlwZWQgPSByZXF1aXJlKCcuL190eXBlZCcpO1xudmFyIGJ1ZmZlciA9IHJlcXVpcmUoJy4vX3R5cGVkLWJ1ZmZlcicpO1xudmFyIGFuT2JqZWN0ID0gcmVxdWlyZSgnLi9fYW4tb2JqZWN0Jyk7XG52YXIgdG9BYnNvbHV0ZUluZGV4ID0gcmVxdWlyZSgnLi9fdG8tYWJzb2x1dGUtaW5kZXgnKTtcbnZhciB0b0xlbmd0aCA9IHJlcXVpcmUoJy4vX3RvLWxlbmd0aCcpO1xudmFyIGlzT2JqZWN0ID0gcmVxdWlyZSgnLi9faXMtb2JqZWN0Jyk7XG52YXIgQXJyYXlCdWZmZXIgPSByZXF1aXJlKCcuL19nbG9iYWwnKS5BcnJheUJ1ZmZlcjtcbnZhciBzcGVjaWVzQ29uc3RydWN0b3IgPSByZXF1aXJlKCcuL19zcGVjaWVzLWNvbnN0cnVjdG9yJyk7XG52YXIgJEFycmF5QnVmZmVyID0gYnVmZmVyLkFycmF5QnVmZmVyO1xudmFyICREYXRhVmlldyA9IGJ1ZmZlci5EYXRhVmlldztcbnZhciAkaXNWaWV3ID0gJHR5cGVkLkFCViAmJiBBcnJheUJ1ZmZlci5pc1ZpZXc7XG52YXIgJHNsaWNlID0gJEFycmF5QnVmZmVyLnByb3RvdHlwZS5zbGljZTtcbnZhciBWSUVXID0gJHR5cGVkLlZJRVc7XG52YXIgQVJSQVlfQlVGRkVSID0gJ0FycmF5QnVmZmVyJztcblxuJGV4cG9ydCgkZXhwb3J0LkcgKyAkZXhwb3J0LlcgKyAkZXhwb3J0LkYgKiAoQXJyYXlCdWZmZXIgIT09ICRBcnJheUJ1ZmZlciksIHsgQXJyYXlCdWZmZXI6ICRBcnJheUJ1ZmZlciB9KTtcblxuJGV4cG9ydCgkZXhwb3J0LlMgKyAkZXhwb3J0LkYgKiAhJHR5cGVkLkNPTlNUUiwgQVJSQVlfQlVGRkVSLCB7XG4gIC8vIDI0LjEuMy4xIEFycmF5QnVmZmVyLmlzVmlldyhhcmcpXG4gIGlzVmlldzogZnVuY3Rpb24gaXNWaWV3KGl0KSB7XG4gICAgcmV0dXJuICRpc1ZpZXcgJiYgJGlzVmlldyhpdCkgfHwgaXNPYmplY3QoaXQpICYmIFZJRVcgaW4gaXQ7XG4gIH1cbn0pO1xuXG4kZXhwb3J0KCRleHBvcnQuUCArICRleHBvcnQuVSArICRleHBvcnQuRiAqIHJlcXVpcmUoJy4vX2ZhaWxzJykoZnVuY3Rpb24gKCkge1xuICByZXR1cm4gIW5ldyAkQXJyYXlCdWZmZXIoMikuc2xpY2UoMSwgdW5kZWZpbmVkKS5ieXRlTGVuZ3RoO1xufSksIEFSUkFZX0JVRkZFUiwge1xuICAvLyAyNC4xLjQuMyBBcnJheUJ1ZmZlci5wcm90b3R5cGUuc2xpY2Uoc3RhcnQsIGVuZClcbiAgc2xpY2U6IGZ1bmN0aW9uIHNsaWNlKHN0YXJ0LCBlbmQpIHtcbiAgICBpZiAoJHNsaWNlICE9PSB1bmRlZmluZWQgJiYgZW5kID09PSB1bmRlZmluZWQpIHJldHVybiAkc2xpY2UuY2FsbChhbk9iamVjdCh0aGlzKSwgc3RhcnQpOyAvLyBGRiBmaXhcbiAgICB2YXIgbGVuID0gYW5PYmplY3QodGhpcykuYnl0ZUxlbmd0aDtcbiAgICB2YXIgZmlyc3QgPSB0b0Fic29sdXRlSW5kZXgoc3RhcnQsIGxlbik7XG4gICAgdmFyIGZpbiA9IHRvQWJzb2x1dGVJbmRleChlbmQgPT09IHVuZGVmaW5lZCA/IGxlbiA6IGVuZCwgbGVuKTtcbiAgICB2YXIgcmVzdWx0ID0gbmV3IChzcGVjaWVzQ29uc3RydWN0b3IodGhpcywgJEFycmF5QnVmZmVyKSkodG9MZW5ndGgoZmluIC0gZmlyc3QpKTtcbiAgICB2YXIgdmlld1MgPSBuZXcgJERhdGFWaWV3KHRoaXMpO1xuICAgIHZhciB2aWV3VCA9IG5ldyAkRGF0YVZpZXcocmVzdWx0KTtcbiAgICB2YXIgaW5kZXggPSAwO1xuICAgIHdoaWxlIChmaXJzdCA8IGZpbikge1xuICAgICAgdmlld1Quc2V0VWludDgoaW5kZXgrKywgdmlld1MuZ2V0VWludDgoZmlyc3QrKykpO1xuICAgIH0gcmV0dXJuIHJlc3VsdDtcbiAgfVxufSk7XG5cbnJlcXVpcmUoJy4vX3NldC1zcGVjaWVzJykoQVJSQVlfQlVGRkVSKTtcbiIsInZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG4kZXhwb3J0KCRleHBvcnQuRyArICRleHBvcnQuVyArICRleHBvcnQuRiAqICFyZXF1aXJlKCcuL190eXBlZCcpLkFCViwge1xuICBEYXRhVmlldzogcmVxdWlyZSgnLi9fdHlwZWQtYnVmZmVyJykuRGF0YVZpZXdcbn0pO1xuIiwicmVxdWlyZSgnLi9fdHlwZWQtYXJyYXknKSgnRmxvYXQzMicsIDQsIGZ1bmN0aW9uIChpbml0KSB7XG4gIHJldHVybiBmdW5jdGlvbiBGbG9hdDMyQXJyYXkoZGF0YSwgYnl0ZU9mZnNldCwgbGVuZ3RoKSB7XG4gICAgcmV0dXJuIGluaXQodGhpcywgZGF0YSwgYnl0ZU9mZnNldCwgbGVuZ3RoKTtcbiAgfTtcbn0pO1xuIiwicmVxdWlyZSgnLi9fdHlwZWQtYXJyYXknKSgnRmxvYXQ2NCcsIDgsIGZ1bmN0aW9uIChpbml0KSB7XG4gIHJldHVybiBmdW5jdGlvbiBGbG9hdDY0QXJyYXkoZGF0YSwgYnl0ZU9mZnNldCwgbGVuZ3RoKSB7XG4gICAgcmV0dXJuIGluaXQodGhpcywgZGF0YSwgYnl0ZU9mZnNldCwgbGVuZ3RoKTtcbiAgfTtcbn0pO1xuIiwicmVxdWlyZSgnLi9fdHlwZWQtYXJyYXknKSgnSW50MTYnLCAyLCBmdW5jdGlvbiAoaW5pdCkge1xuICByZXR1cm4gZnVuY3Rpb24gSW50MTZBcnJheShkYXRhLCBieXRlT2Zmc2V0LCBsZW5ndGgpIHtcbiAgICByZXR1cm4gaW5pdCh0aGlzLCBkYXRhLCBieXRlT2Zmc2V0LCBsZW5ndGgpO1xuICB9O1xufSk7XG4iLCJyZXF1aXJlKCcuL190eXBlZC1hcnJheScpKCdJbnQzMicsIDQsIGZ1bmN0aW9uIChpbml0KSB7XG4gIHJldHVybiBmdW5jdGlvbiBJbnQzMkFycmF5KGRhdGEsIGJ5dGVPZmZzZXQsIGxlbmd0aCkge1xuICAgIHJldHVybiBpbml0KHRoaXMsIGRhdGEsIGJ5dGVPZmZzZXQsIGxlbmd0aCk7XG4gIH07XG59KTtcbiIsInJlcXVpcmUoJy4vX3R5cGVkLWFycmF5JykoJ0ludDgnLCAxLCBmdW5jdGlvbiAoaW5pdCkge1xuICByZXR1cm4gZnVuY3Rpb24gSW50OEFycmF5KGRhdGEsIGJ5dGVPZmZzZXQsIGxlbmd0aCkge1xuICAgIHJldHVybiBpbml0KHRoaXMsIGRhdGEsIGJ5dGVPZmZzZXQsIGxlbmd0aCk7XG4gIH07XG59KTtcbiIsInJlcXVpcmUoJy4vX3R5cGVkLWFycmF5JykoJ1VpbnQxNicsIDIsIGZ1bmN0aW9uIChpbml0KSB7XG4gIHJldHVybiBmdW5jdGlvbiBVaW50MTZBcnJheShkYXRhLCBieXRlT2Zmc2V0LCBsZW5ndGgpIHtcbiAgICByZXR1cm4gaW5pdCh0aGlzLCBkYXRhLCBieXRlT2Zmc2V0LCBsZW5ndGgpO1xuICB9O1xufSk7XG4iLCJyZXF1aXJlKCcuL190eXBlZC1hcnJheScpKCdVaW50MzInLCA0LCBmdW5jdGlvbiAoaW5pdCkge1xuICByZXR1cm4gZnVuY3Rpb24gVWludDMyQXJyYXkoZGF0YSwgYnl0ZU9mZnNldCwgbGVuZ3RoKSB7XG4gICAgcmV0dXJuIGluaXQodGhpcywgZGF0YSwgYnl0ZU9mZnNldCwgbGVuZ3RoKTtcbiAgfTtcbn0pO1xuIiwicmVxdWlyZSgnLi9fdHlwZWQtYXJyYXknKSgnVWludDgnLCAxLCBmdW5jdGlvbiAoaW5pdCkge1xuICByZXR1cm4gZnVuY3Rpb24gVWludDhBcnJheShkYXRhLCBieXRlT2Zmc2V0LCBsZW5ndGgpIHtcbiAgICByZXR1cm4gaW5pdCh0aGlzLCBkYXRhLCBieXRlT2Zmc2V0LCBsZW5ndGgpO1xuICB9O1xufSk7XG4iLCJyZXF1aXJlKCcuL190eXBlZC1hcnJheScpKCdVaW50OCcsIDEsIGZ1bmN0aW9uIChpbml0KSB7XG4gIHJldHVybiBmdW5jdGlvbiBVaW50OENsYW1wZWRBcnJheShkYXRhLCBieXRlT2Zmc2V0LCBsZW5ndGgpIHtcbiAgICByZXR1cm4gaW5pdCh0aGlzLCBkYXRhLCBieXRlT2Zmc2V0LCBsZW5ndGgpO1xuICB9O1xufSwgdHJ1ZSk7XG4iLCIndXNlIHN0cmljdCc7XG52YXIgZWFjaCA9IHJlcXVpcmUoJy4vX2FycmF5LW1ldGhvZHMnKSgwKTtcbnZhciByZWRlZmluZSA9IHJlcXVpcmUoJy4vX3JlZGVmaW5lJyk7XG52YXIgbWV0YSA9IHJlcXVpcmUoJy4vX21ldGEnKTtcbnZhciBhc3NpZ24gPSByZXF1aXJlKCcuL19vYmplY3QtYXNzaWduJyk7XG52YXIgd2VhayA9IHJlcXVpcmUoJy4vX2NvbGxlY3Rpb24td2VhaycpO1xudmFyIGlzT2JqZWN0ID0gcmVxdWlyZSgnLi9faXMtb2JqZWN0Jyk7XG52YXIgZmFpbHMgPSByZXF1aXJlKCcuL19mYWlscycpO1xudmFyIHZhbGlkYXRlID0gcmVxdWlyZSgnLi9fdmFsaWRhdGUtY29sbGVjdGlvbicpO1xudmFyIFdFQUtfTUFQID0gJ1dlYWtNYXAnO1xudmFyIGdldFdlYWsgPSBtZXRhLmdldFdlYWs7XG52YXIgaXNFeHRlbnNpYmxlID0gT2JqZWN0LmlzRXh0ZW5zaWJsZTtcbnZhciB1bmNhdWdodEZyb3plblN0b3JlID0gd2Vhay51ZnN0b3JlO1xudmFyIHRtcCA9IHt9O1xudmFyIEludGVybmFsTWFwO1xuXG52YXIgd3JhcHBlciA9IGZ1bmN0aW9uIChnZXQpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIFdlYWtNYXAoKSB7XG4gICAgcmV0dXJuIGdldCh0aGlzLCBhcmd1bWVudHMubGVuZ3RoID4gMCA/IGFyZ3VtZW50c1swXSA6IHVuZGVmaW5lZCk7XG4gIH07XG59O1xuXG52YXIgbWV0aG9kcyA9IHtcbiAgLy8gMjMuMy4zLjMgV2Vha01hcC5wcm90b3R5cGUuZ2V0KGtleSlcbiAgZ2V0OiBmdW5jdGlvbiBnZXQoa2V5KSB7XG4gICAgaWYgKGlzT2JqZWN0KGtleSkpIHtcbiAgICAgIHZhciBkYXRhID0gZ2V0V2VhayhrZXkpO1xuICAgICAgaWYgKGRhdGEgPT09IHRydWUpIHJldHVybiB1bmNhdWdodEZyb3plblN0b3JlKHZhbGlkYXRlKHRoaXMsIFdFQUtfTUFQKSkuZ2V0KGtleSk7XG4gICAgICByZXR1cm4gZGF0YSA/IGRhdGFbdGhpcy5faV0gOiB1bmRlZmluZWQ7XG4gICAgfVxuICB9LFxuICAvLyAyMy4zLjMuNSBXZWFrTWFwLnByb3RvdHlwZS5zZXQoa2V5LCB2YWx1ZSlcbiAgc2V0OiBmdW5jdGlvbiBzZXQoa2V5LCB2YWx1ZSkge1xuICAgIHJldHVybiB3ZWFrLmRlZih2YWxpZGF0ZSh0aGlzLCBXRUFLX01BUCksIGtleSwgdmFsdWUpO1xuICB9XG59O1xuXG4vLyAyMy4zIFdlYWtNYXAgT2JqZWN0c1xudmFyICRXZWFrTWFwID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL19jb2xsZWN0aW9uJykoV0VBS19NQVAsIHdyYXBwZXIsIG1ldGhvZHMsIHdlYWssIHRydWUsIHRydWUpO1xuXG4vLyBJRTExIFdlYWtNYXAgZnJvemVuIGtleXMgZml4XG5pZiAoZmFpbHMoZnVuY3Rpb24gKCkgeyByZXR1cm4gbmV3ICRXZWFrTWFwKCkuc2V0KChPYmplY3QuZnJlZXplIHx8IE9iamVjdCkodG1wKSwgNykuZ2V0KHRtcCkgIT0gNzsgfSkpIHtcbiAgSW50ZXJuYWxNYXAgPSB3ZWFrLmdldENvbnN0cnVjdG9yKHdyYXBwZXIsIFdFQUtfTUFQKTtcbiAgYXNzaWduKEludGVybmFsTWFwLnByb3RvdHlwZSwgbWV0aG9kcyk7XG4gIG1ldGEuTkVFRCA9IHRydWU7XG4gIGVhY2goWydkZWxldGUnLCAnaGFzJywgJ2dldCcsICdzZXQnXSwgZnVuY3Rpb24gKGtleSkge1xuICAgIHZhciBwcm90byA9ICRXZWFrTWFwLnByb3RvdHlwZTtcbiAgICB2YXIgbWV0aG9kID0gcHJvdG9ba2V5XTtcbiAgICByZWRlZmluZShwcm90bywga2V5LCBmdW5jdGlvbiAoYSwgYikge1xuICAgICAgLy8gc3RvcmUgZnJvemVuIG9iamVjdHMgb24gaW50ZXJuYWwgd2Vha21hcCBzaGltXG4gICAgICBpZiAoaXNPYmplY3QoYSkgJiYgIWlzRXh0ZW5zaWJsZShhKSkge1xuICAgICAgICBpZiAoIXRoaXMuX2YpIHRoaXMuX2YgPSBuZXcgSW50ZXJuYWxNYXAoKTtcbiAgICAgICAgdmFyIHJlc3VsdCA9IHRoaXMuX2Zba2V5XShhLCBiKTtcbiAgICAgICAgcmV0dXJuIGtleSA9PSAnc2V0JyA/IHRoaXMgOiByZXN1bHQ7XG4gICAgICAvLyBzdG9yZSBhbGwgdGhlIHJlc3Qgb24gbmF0aXZlIHdlYWttYXBcbiAgICAgIH0gcmV0dXJuIG1ldGhvZC5jYWxsKHRoaXMsIGEsIGIpO1xuICAgIH0pO1xuICB9KTtcbn1cbiIsIid1c2Ugc3RyaWN0JztcbnZhciB3ZWFrID0gcmVxdWlyZSgnLi9fY29sbGVjdGlvbi13ZWFrJyk7XG52YXIgdmFsaWRhdGUgPSByZXF1aXJlKCcuL192YWxpZGF0ZS1jb2xsZWN0aW9uJyk7XG52YXIgV0VBS19TRVQgPSAnV2Vha1NldCc7XG5cbi8vIDIzLjQgV2Vha1NldCBPYmplY3RzXG5yZXF1aXJlKCcuL19jb2xsZWN0aW9uJykoV0VBS19TRVQsIGZ1bmN0aW9uIChnZXQpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIFdlYWtTZXQoKSB7IHJldHVybiBnZXQodGhpcywgYXJndW1lbnRzLmxlbmd0aCA+IDAgPyBhcmd1bWVudHNbMF0gOiB1bmRlZmluZWQpOyB9O1xufSwge1xuICAvLyAyMy40LjMuMSBXZWFrU2V0LnByb3RvdHlwZS5hZGQodmFsdWUpXG4gIGFkZDogZnVuY3Rpb24gYWRkKHZhbHVlKSB7XG4gICAgcmV0dXJuIHdlYWsuZGVmKHZhbGlkYXRlKHRoaXMsIFdFQUtfU0VUKSwgdmFsdWUsIHRydWUpO1xuICB9XG59LCB3ZWFrLCBmYWxzZSwgdHJ1ZSk7XG4iLCIndXNlIHN0cmljdCc7XG4vLyBodHRwczovL2dpdGh1Yi5jb20vdGMzOS9BcnJheS5wcm90b3R5cGUuaW5jbHVkZXNcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgJGluY2x1ZGVzID0gcmVxdWlyZSgnLi9fYXJyYXktaW5jbHVkZXMnKSh0cnVlKTtcblxuJGV4cG9ydCgkZXhwb3J0LlAsICdBcnJheScsIHtcbiAgaW5jbHVkZXM6IGZ1bmN0aW9uIGluY2x1ZGVzKGVsIC8qICwgZnJvbUluZGV4ID0gMCAqLykge1xuICAgIHJldHVybiAkaW5jbHVkZXModGhpcywgZWwsIGFyZ3VtZW50cy5sZW5ndGggPiAxID8gYXJndW1lbnRzWzFdIDogdW5kZWZpbmVkKTtcbiAgfVxufSk7XG5cbnJlcXVpcmUoJy4vX2FkZC10by11bnNjb3BhYmxlcycpKCdpbmNsdWRlcycpO1xuIiwiLy8gaHR0cHM6Ly9naXRodWIuY29tL3RjMzkvcHJvcG9zYWwtb2JqZWN0LXZhbHVlcy1lbnRyaWVzXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyICRlbnRyaWVzID0gcmVxdWlyZSgnLi9fb2JqZWN0LXRvLWFycmF5JykodHJ1ZSk7XG5cbiRleHBvcnQoJGV4cG9ydC5TLCAnT2JqZWN0Jywge1xuICBlbnRyaWVzOiBmdW5jdGlvbiBlbnRyaWVzKGl0KSB7XG4gICAgcmV0dXJuICRlbnRyaWVzKGl0KTtcbiAgfVxufSk7XG4iLCIvLyBodHRwczovL2dpdGh1Yi5jb20vdGMzOS9wcm9wb3NhbC1vYmplY3QtZ2V0b3ducHJvcGVydHlkZXNjcmlwdG9yc1xudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciBvd25LZXlzID0gcmVxdWlyZSgnLi9fb3duLWtleXMnKTtcbnZhciB0b0lPYmplY3QgPSByZXF1aXJlKCcuL190by1pb2JqZWN0Jyk7XG52YXIgZ09QRCA9IHJlcXVpcmUoJy4vX29iamVjdC1nb3BkJyk7XG52YXIgY3JlYXRlUHJvcGVydHkgPSByZXF1aXJlKCcuL19jcmVhdGUtcHJvcGVydHknKTtcblxuJGV4cG9ydCgkZXhwb3J0LlMsICdPYmplY3QnLCB7XG4gIGdldE93blByb3BlcnR5RGVzY3JpcHRvcnM6IGZ1bmN0aW9uIGdldE93blByb3BlcnR5RGVzY3JpcHRvcnMob2JqZWN0KSB7XG4gICAgdmFyIE8gPSB0b0lPYmplY3Qob2JqZWN0KTtcbiAgICB2YXIgZ2V0RGVzYyA9IGdPUEQuZjtcbiAgICB2YXIga2V5cyA9IG93bktleXMoTyk7XG4gICAgdmFyIHJlc3VsdCA9IHt9O1xuICAgIHZhciBpID0gMDtcbiAgICB2YXIga2V5LCBkZXNjO1xuICAgIHdoaWxlIChrZXlzLmxlbmd0aCA+IGkpIHtcbiAgICAgIGRlc2MgPSBnZXREZXNjKE8sIGtleSA9IGtleXNbaSsrXSk7XG4gICAgICBpZiAoZGVzYyAhPT0gdW5kZWZpbmVkKSBjcmVhdGVQcm9wZXJ0eShyZXN1bHQsIGtleSwgZGVzYyk7XG4gICAgfVxuICAgIHJldHVybiByZXN1bHQ7XG4gIH1cbn0pO1xuIiwiLy8gaHR0cHM6Ly9naXRodWIuY29tL3RjMzkvcHJvcG9zYWwtb2JqZWN0LXZhbHVlcy1lbnRyaWVzXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyICR2YWx1ZXMgPSByZXF1aXJlKCcuL19vYmplY3QtdG8tYXJyYXknKShmYWxzZSk7XG5cbiRleHBvcnQoJGV4cG9ydC5TLCAnT2JqZWN0Jywge1xuICB2YWx1ZXM6IGZ1bmN0aW9uIHZhbHVlcyhpdCkge1xuICAgIHJldHVybiAkdmFsdWVzKGl0KTtcbiAgfVxufSk7XG4iLCIvLyBodHRwczovL2dpdGh1Yi5jb20vdGMzOS9wcm9wb3NhbC1wcm9taXNlLWZpbmFsbHlcbid1c2Ugc3RyaWN0JztcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgY29yZSA9IHJlcXVpcmUoJy4vX2NvcmUnKTtcbnZhciBnbG9iYWwgPSByZXF1aXJlKCcuL19nbG9iYWwnKTtcbnZhciBzcGVjaWVzQ29uc3RydWN0b3IgPSByZXF1aXJlKCcuL19zcGVjaWVzLWNvbnN0cnVjdG9yJyk7XG52YXIgcHJvbWlzZVJlc29sdmUgPSByZXF1aXJlKCcuL19wcm9taXNlLXJlc29sdmUnKTtcblxuJGV4cG9ydCgkZXhwb3J0LlAgKyAkZXhwb3J0LlIsICdQcm9taXNlJywgeyAnZmluYWxseSc6IGZ1bmN0aW9uIChvbkZpbmFsbHkpIHtcbiAgdmFyIEMgPSBzcGVjaWVzQ29uc3RydWN0b3IodGhpcywgY29yZS5Qcm9taXNlIHx8IGdsb2JhbC5Qcm9taXNlKTtcbiAgdmFyIGlzRnVuY3Rpb24gPSB0eXBlb2Ygb25GaW5hbGx5ID09ICdmdW5jdGlvbic7XG4gIHJldHVybiB0aGlzLnRoZW4oXG4gICAgaXNGdW5jdGlvbiA/IGZ1bmN0aW9uICh4KSB7XG4gICAgICByZXR1cm4gcHJvbWlzZVJlc29sdmUoQywgb25GaW5hbGx5KCkpLnRoZW4oZnVuY3Rpb24gKCkgeyByZXR1cm4geDsgfSk7XG4gICAgfSA6IG9uRmluYWxseSxcbiAgICBpc0Z1bmN0aW9uID8gZnVuY3Rpb24gKGUpIHtcbiAgICAgIHJldHVybiBwcm9taXNlUmVzb2x2ZShDLCBvbkZpbmFsbHkoKSkudGhlbihmdW5jdGlvbiAoKSB7IHRocm93IGU7IH0pO1xuICAgIH0gOiBvbkZpbmFsbHlcbiAgKTtcbn0gfSk7XG4iLCIndXNlIHN0cmljdCc7XG4vLyBodHRwczovL2dpdGh1Yi5jb20vdGMzOS9wcm9wb3NhbC1zdHJpbmctcGFkLXN0YXJ0LWVuZFxudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciAkcGFkID0gcmVxdWlyZSgnLi9fc3RyaW5nLXBhZCcpO1xudmFyIHVzZXJBZ2VudCA9IHJlcXVpcmUoJy4vX3VzZXItYWdlbnQnKTtcblxuLy8gaHR0cHM6Ly9naXRodWIuY29tL3psb2lyb2NrL2NvcmUtanMvaXNzdWVzLzI4MFxuJGV4cG9ydCgkZXhwb3J0LlAgKyAkZXhwb3J0LkYgKiAvVmVyc2lvblxcLzEwXFwuXFxkKyhcXC5cXGQrKT8gU2FmYXJpXFwvLy50ZXN0KHVzZXJBZ2VudCksICdTdHJpbmcnLCB7XG4gIHBhZEVuZDogZnVuY3Rpb24gcGFkRW5kKG1heExlbmd0aCAvKiAsIGZpbGxTdHJpbmcgPSAnICcgKi8pIHtcbiAgICByZXR1cm4gJHBhZCh0aGlzLCBtYXhMZW5ndGgsIGFyZ3VtZW50cy5sZW5ndGggPiAxID8gYXJndW1lbnRzWzFdIDogdW5kZWZpbmVkLCBmYWxzZSk7XG4gIH1cbn0pO1xuIiwiJ3VzZSBzdHJpY3QnO1xuLy8gaHR0cHM6Ly9naXRodWIuY29tL3RjMzkvcHJvcG9zYWwtc3RyaW5nLXBhZC1zdGFydC1lbmRcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgJHBhZCA9IHJlcXVpcmUoJy4vX3N0cmluZy1wYWQnKTtcbnZhciB1c2VyQWdlbnQgPSByZXF1aXJlKCcuL191c2VyLWFnZW50Jyk7XG5cbi8vIGh0dHBzOi8vZ2l0aHViLmNvbS96bG9pcm9jay9jb3JlLWpzL2lzc3Vlcy8yODBcbiRleHBvcnQoJGV4cG9ydC5QICsgJGV4cG9ydC5GICogL1ZlcnNpb25cXC8xMFxcLlxcZCsoXFwuXFxkKyk/IFNhZmFyaVxcLy8udGVzdCh1c2VyQWdlbnQpLCAnU3RyaW5nJywge1xuICBwYWRTdGFydDogZnVuY3Rpb24gcGFkU3RhcnQobWF4TGVuZ3RoIC8qICwgZmlsbFN0cmluZyA9ICcgJyAqLykge1xuICAgIHJldHVybiAkcGFkKHRoaXMsIG1heExlbmd0aCwgYXJndW1lbnRzLmxlbmd0aCA+IDEgPyBhcmd1bWVudHNbMV0gOiB1bmRlZmluZWQsIHRydWUpO1xuICB9XG59KTtcbiIsInJlcXVpcmUoJy4vX3drcy1kZWZpbmUnKSgnYXN5bmNJdGVyYXRvcicpO1xuIiwidmFyICRpdGVyYXRvcnMgPSByZXF1aXJlKCcuL2VzNi5hcnJheS5pdGVyYXRvcicpO1xudmFyIGdldEtleXMgPSByZXF1aXJlKCcuL19vYmplY3Qta2V5cycpO1xudmFyIHJlZGVmaW5lID0gcmVxdWlyZSgnLi9fcmVkZWZpbmUnKTtcbnZhciBnbG9iYWwgPSByZXF1aXJlKCcuL19nbG9iYWwnKTtcbnZhciBoaWRlID0gcmVxdWlyZSgnLi9faGlkZScpO1xudmFyIEl0ZXJhdG9ycyA9IHJlcXVpcmUoJy4vX2l0ZXJhdG9ycycpO1xudmFyIHdrcyA9IHJlcXVpcmUoJy4vX3drcycpO1xudmFyIElURVJBVE9SID0gd2tzKCdpdGVyYXRvcicpO1xudmFyIFRPX1NUUklOR19UQUcgPSB3a3MoJ3RvU3RyaW5nVGFnJyk7XG52YXIgQXJyYXlWYWx1ZXMgPSBJdGVyYXRvcnMuQXJyYXk7XG5cbnZhciBET01JdGVyYWJsZXMgPSB7XG4gIENTU1J1bGVMaXN0OiB0cnVlLCAvLyBUT0RPOiBOb3Qgc3BlYyBjb21wbGlhbnQsIHNob3VsZCBiZSBmYWxzZS5cbiAgQ1NTU3R5bGVEZWNsYXJhdGlvbjogZmFsc2UsXG4gIENTU1ZhbHVlTGlzdDogZmFsc2UsXG4gIENsaWVudFJlY3RMaXN0OiBmYWxzZSxcbiAgRE9NUmVjdExpc3Q6IGZhbHNlLFxuICBET01TdHJpbmdMaXN0OiBmYWxzZSxcbiAgRE9NVG9rZW5MaXN0OiB0cnVlLFxuICBEYXRhVHJhbnNmZXJJdGVtTGlzdDogZmFsc2UsXG4gIEZpbGVMaXN0OiBmYWxzZSxcbiAgSFRNTEFsbENvbGxlY3Rpb246IGZhbHNlLFxuICBIVE1MQ29sbGVjdGlvbjogZmFsc2UsXG4gIEhUTUxGb3JtRWxlbWVudDogZmFsc2UsXG4gIEhUTUxTZWxlY3RFbGVtZW50OiBmYWxzZSxcbiAgTWVkaWFMaXN0OiB0cnVlLCAvLyBUT0RPOiBOb3Qgc3BlYyBjb21wbGlhbnQsIHNob3VsZCBiZSBmYWxzZS5cbiAgTWltZVR5cGVBcnJheTogZmFsc2UsXG4gIE5hbWVkTm9kZU1hcDogZmFsc2UsXG4gIE5vZGVMaXN0OiB0cnVlLFxuICBQYWludFJlcXVlc3RMaXN0OiBmYWxzZSxcbiAgUGx1Z2luOiBmYWxzZSxcbiAgUGx1Z2luQXJyYXk6IGZhbHNlLFxuICBTVkdMZW5ndGhMaXN0OiBmYWxzZSxcbiAgU1ZHTnVtYmVyTGlzdDogZmFsc2UsXG4gIFNWR1BhdGhTZWdMaXN0OiBmYWxzZSxcbiAgU1ZHUG9pbnRMaXN0OiBmYWxzZSxcbiAgU1ZHU3RyaW5nTGlzdDogZmFsc2UsXG4gIFNWR1RyYW5zZm9ybUxpc3Q6IGZhbHNlLFxuICBTb3VyY2VCdWZmZXJMaXN0OiBmYWxzZSxcbiAgU3R5bGVTaGVldExpc3Q6IHRydWUsIC8vIFRPRE86IE5vdCBzcGVjIGNvbXBsaWFudCwgc2hvdWxkIGJlIGZhbHNlLlxuICBUZXh0VHJhY2tDdWVMaXN0OiBmYWxzZSxcbiAgVGV4dFRyYWNrTGlzdDogZmFsc2UsXG4gIFRvdWNoTGlzdDogZmFsc2Vcbn07XG5cbmZvciAodmFyIGNvbGxlY3Rpb25zID0gZ2V0S2V5cyhET01JdGVyYWJsZXMpLCBpID0gMDsgaSA8IGNvbGxlY3Rpb25zLmxlbmd0aDsgaSsrKSB7XG4gIHZhciBOQU1FID0gY29sbGVjdGlvbnNbaV07XG4gIHZhciBleHBsaWNpdCA9IERPTUl0ZXJhYmxlc1tOQU1FXTtcbiAgdmFyIENvbGxlY3Rpb24gPSBnbG9iYWxbTkFNRV07XG4gIHZhciBwcm90byA9IENvbGxlY3Rpb24gJiYgQ29sbGVjdGlvbi5wcm90b3R5cGU7XG4gIHZhciBrZXk7XG4gIGlmIChwcm90bykge1xuICAgIGlmICghcHJvdG9bSVRFUkFUT1JdKSBoaWRlKHByb3RvLCBJVEVSQVRPUiwgQXJyYXlWYWx1ZXMpO1xuICAgIGlmICghcHJvdG9bVE9fU1RSSU5HX1RBR10pIGhpZGUocHJvdG8sIFRPX1NUUklOR19UQUcsIE5BTUUpO1xuICAgIEl0ZXJhdG9yc1tOQU1FXSA9IEFycmF5VmFsdWVzO1xuICAgIGlmIChleHBsaWNpdCkgZm9yIChrZXkgaW4gJGl0ZXJhdG9ycykgaWYgKCFwcm90b1trZXldKSByZWRlZmluZShwcm90bywga2V5LCAkaXRlcmF0b3JzW2tleV0sIHRydWUpO1xuICB9XG59XG4iLCJ2YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyICR0YXNrID0gcmVxdWlyZSgnLi9fdGFzaycpO1xuJGV4cG9ydCgkZXhwb3J0LkcgKyAkZXhwb3J0LkIsIHtcbiAgc2V0SW1tZWRpYXRlOiAkdGFzay5zZXQsXG4gIGNsZWFySW1tZWRpYXRlOiAkdGFzay5jbGVhclxufSk7XG4iLCIvLyBpZTktIHNldFRpbWVvdXQgJiBzZXRJbnRlcnZhbCBhZGRpdGlvbmFsIHBhcmFtZXRlcnMgZml4XG52YXIgZ2xvYmFsID0gcmVxdWlyZSgnLi9fZ2xvYmFsJyk7XG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyIHVzZXJBZ2VudCA9IHJlcXVpcmUoJy4vX3VzZXItYWdlbnQnKTtcbnZhciBzbGljZSA9IFtdLnNsaWNlO1xudmFyIE1TSUUgPSAvTVNJRSAuXFwuLy50ZXN0KHVzZXJBZ2VudCk7IC8vIDwtIGRpcnR5IGllOS0gY2hlY2tcbnZhciB3cmFwID0gZnVuY3Rpb24gKHNldCkge1xuICByZXR1cm4gZnVuY3Rpb24gKGZuLCB0aW1lIC8qICwgLi4uYXJncyAqLykge1xuICAgIHZhciBib3VuZEFyZ3MgPSBhcmd1bWVudHMubGVuZ3RoID4gMjtcbiAgICB2YXIgYXJncyA9IGJvdW5kQXJncyA/IHNsaWNlLmNhbGwoYXJndW1lbnRzLCAyKSA6IGZhbHNlO1xuICAgIHJldHVybiBzZXQoYm91bmRBcmdzID8gZnVuY3Rpb24gKCkge1xuICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLW5ldy1mdW5jXG4gICAgICAodHlwZW9mIGZuID09ICdmdW5jdGlvbicgPyBmbiA6IEZ1bmN0aW9uKGZuKSkuYXBwbHkodGhpcywgYXJncyk7XG4gICAgfSA6IGZuLCB0aW1lKTtcbiAgfTtcbn07XG4kZXhwb3J0KCRleHBvcnQuRyArICRleHBvcnQuQiArICRleHBvcnQuRiAqIE1TSUUsIHtcbiAgc2V0VGltZW91dDogd3JhcChnbG9iYWwuc2V0VGltZW91dCksXG4gIHNldEludGVydmFsOiB3cmFwKGdsb2JhbC5zZXRJbnRlcnZhbClcbn0pO1xuIiwicmVxdWlyZSgnLi4vbW9kdWxlcy93ZWIudGltZXJzJyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL3dlYi5pbW1lZGlhdGUnKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvd2ViLmRvbS5pdGVyYWJsZScpO1xubW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuLi9tb2R1bGVzL19jb3JlJyk7XG4iLCIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxNC1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbiEoZnVuY3Rpb24oZ2xvYmFsKSB7XG4gIFwidXNlIHN0cmljdFwiO1xuXG4gIHZhciBPcCA9IE9iamVjdC5wcm90b3R5cGU7XG4gIHZhciBoYXNPd24gPSBPcC5oYXNPd25Qcm9wZXJ0eTtcbiAgdmFyIHVuZGVmaW5lZDsgLy8gTW9yZSBjb21wcmVzc2libGUgdGhhbiB2b2lkIDAuXG4gIHZhciAkU3ltYm9sID0gdHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiID8gU3ltYm9sIDoge307XG4gIHZhciBpdGVyYXRvclN5bWJvbCA9ICRTeW1ib2wuaXRlcmF0b3IgfHwgXCJAQGl0ZXJhdG9yXCI7XG4gIHZhciBhc3luY0l0ZXJhdG9yU3ltYm9sID0gJFN5bWJvbC5hc3luY0l0ZXJhdG9yIHx8IFwiQEBhc3luY0l0ZXJhdG9yXCI7XG4gIHZhciB0b1N0cmluZ1RhZ1N5bWJvbCA9ICRTeW1ib2wudG9TdHJpbmdUYWcgfHwgXCJAQHRvU3RyaW5nVGFnXCI7XG5cbiAgdmFyIGluTW9kdWxlID0gdHlwZW9mIG1vZHVsZSA9PT0gXCJvYmplY3RcIjtcbiAgdmFyIHJ1bnRpbWUgPSBnbG9iYWwucmVnZW5lcmF0b3JSdW50aW1lO1xuICBpZiAocnVudGltZSkge1xuICAgIGlmIChpbk1vZHVsZSkge1xuICAgICAgLy8gSWYgcmVnZW5lcmF0b3JSdW50aW1lIGlzIGRlZmluZWQgZ2xvYmFsbHkgYW5kIHdlJ3JlIGluIGEgbW9kdWxlLFxuICAgICAgLy8gbWFrZSB0aGUgZXhwb3J0cyBvYmplY3QgaWRlbnRpY2FsIHRvIHJlZ2VuZXJhdG9yUnVudGltZS5cbiAgICAgIG1vZHVsZS5leHBvcnRzID0gcnVudGltZTtcbiAgICB9XG4gICAgLy8gRG9uJ3QgYm90aGVyIGV2YWx1YXRpbmcgdGhlIHJlc3Qgb2YgdGhpcyBmaWxlIGlmIHRoZSBydW50aW1lIHdhc1xuICAgIC8vIGFscmVhZHkgZGVmaW5lZCBnbG9iYWxseS5cbiAgICByZXR1cm47XG4gIH1cblxuICAvLyBEZWZpbmUgdGhlIHJ1bnRpbWUgZ2xvYmFsbHkgKGFzIGV4cGVjdGVkIGJ5IGdlbmVyYXRlZCBjb2RlKSBhcyBlaXRoZXJcbiAgLy8gbW9kdWxlLmV4cG9ydHMgKGlmIHdlJ3JlIGluIGEgbW9kdWxlKSBvciBhIG5ldywgZW1wdHkgb2JqZWN0LlxuICBydW50aW1lID0gZ2xvYmFsLnJlZ2VuZXJhdG9yUnVudGltZSA9IGluTW9kdWxlID8gbW9kdWxlLmV4cG9ydHMgOiB7fTtcblxuICBmdW5jdGlvbiB3cmFwKGlubmVyRm4sIG91dGVyRm4sIHNlbGYsIHRyeUxvY3NMaXN0KSB7XG4gICAgLy8gSWYgb3V0ZXJGbiBwcm92aWRlZCBhbmQgb3V0ZXJGbi5wcm90b3R5cGUgaXMgYSBHZW5lcmF0b3IsIHRoZW4gb3V0ZXJGbi5wcm90b3R5cGUgaW5zdGFuY2VvZiBHZW5lcmF0b3IuXG4gICAgdmFyIHByb3RvR2VuZXJhdG9yID0gb3V0ZXJGbiAmJiBvdXRlckZuLnByb3RvdHlwZSBpbnN0YW5jZW9mIEdlbmVyYXRvciA/IG91dGVyRm4gOiBHZW5lcmF0b3I7XG4gICAgdmFyIGdlbmVyYXRvciA9IE9iamVjdC5jcmVhdGUocHJvdG9HZW5lcmF0b3IucHJvdG90eXBlKTtcbiAgICB2YXIgY29udGV4dCA9IG5ldyBDb250ZXh0KHRyeUxvY3NMaXN0IHx8IFtdKTtcblxuICAgIC8vIFRoZSAuX2ludm9rZSBtZXRob2QgdW5pZmllcyB0aGUgaW1wbGVtZW50YXRpb25zIG9mIHRoZSAubmV4dCxcbiAgICAvLyAudGhyb3csIGFuZCAucmV0dXJuIG1ldGhvZHMuXG4gICAgZ2VuZXJhdG9yLl9pbnZva2UgPSBtYWtlSW52b2tlTWV0aG9kKGlubmVyRm4sIHNlbGYsIGNvbnRleHQpO1xuXG4gICAgcmV0dXJuIGdlbmVyYXRvcjtcbiAgfVxuICBydW50aW1lLndyYXAgPSB3cmFwO1xuXG4gIC8vIFRyeS9jYXRjaCBoZWxwZXIgdG8gbWluaW1pemUgZGVvcHRpbWl6YXRpb25zLiBSZXR1cm5zIGEgY29tcGxldGlvblxuICAvLyByZWNvcmQgbGlrZSBjb250ZXh0LnRyeUVudHJpZXNbaV0uY29tcGxldGlvbi4gVGhpcyBpbnRlcmZhY2UgY291bGRcbiAgLy8gaGF2ZSBiZWVuIChhbmQgd2FzIHByZXZpb3VzbHkpIGRlc2lnbmVkIHRvIHRha2UgYSBjbG9zdXJlIHRvIGJlXG4gIC8vIGludm9rZWQgd2l0aG91dCBhcmd1bWVudHMsIGJ1dCBpbiBhbGwgdGhlIGNhc2VzIHdlIGNhcmUgYWJvdXQgd2VcbiAgLy8gYWxyZWFkeSBoYXZlIGFuIGV4aXN0aW5nIG1ldGhvZCB3ZSB3YW50IHRvIGNhbGwsIHNvIHRoZXJlJ3Mgbm8gbmVlZFxuICAvLyB0byBjcmVhdGUgYSBuZXcgZnVuY3Rpb24gb2JqZWN0LiBXZSBjYW4gZXZlbiBnZXQgYXdheSB3aXRoIGFzc3VtaW5nXG4gIC8vIHRoZSBtZXRob2QgdGFrZXMgZXhhY3RseSBvbmUgYXJndW1lbnQsIHNpbmNlIHRoYXQgaGFwcGVucyB0byBiZSB0cnVlXG4gIC8vIGluIGV2ZXJ5IGNhc2UsIHNvIHdlIGRvbid0IGhhdmUgdG8gdG91Y2ggdGhlIGFyZ3VtZW50cyBvYmplY3QuIFRoZVxuICAvLyBvbmx5IGFkZGl0aW9uYWwgYWxsb2NhdGlvbiByZXF1aXJlZCBpcyB0aGUgY29tcGxldGlvbiByZWNvcmQsIHdoaWNoXG4gIC8vIGhhcyBhIHN0YWJsZSBzaGFwZSBhbmQgc28gaG9wZWZ1bGx5IHNob3VsZCBiZSBjaGVhcCB0byBhbGxvY2F0ZS5cbiAgZnVuY3Rpb24gdHJ5Q2F0Y2goZm4sIG9iaiwgYXJnKSB7XG4gICAgdHJ5IHtcbiAgICAgIHJldHVybiB7IHR5cGU6IFwibm9ybWFsXCIsIGFyZzogZm4uY2FsbChvYmosIGFyZykgfTtcbiAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgIHJldHVybiB7IHR5cGU6IFwidGhyb3dcIiwgYXJnOiBlcnIgfTtcbiAgICB9XG4gIH1cblxuICB2YXIgR2VuU3RhdGVTdXNwZW5kZWRTdGFydCA9IFwic3VzcGVuZGVkU3RhcnRcIjtcbiAgdmFyIEdlblN0YXRlU3VzcGVuZGVkWWllbGQgPSBcInN1c3BlbmRlZFlpZWxkXCI7XG4gIHZhciBHZW5TdGF0ZUV4ZWN1dGluZyA9IFwiZXhlY3V0aW5nXCI7XG4gIHZhciBHZW5TdGF0ZUNvbXBsZXRlZCA9IFwiY29tcGxldGVkXCI7XG5cbiAgLy8gUmV0dXJuaW5nIHRoaXMgb2JqZWN0IGZyb20gdGhlIGlubmVyRm4gaGFzIHRoZSBzYW1lIGVmZmVjdCBhc1xuICAvLyBicmVha2luZyBvdXQgb2YgdGhlIGRpc3BhdGNoIHN3aXRjaCBzdGF0ZW1lbnQuXG4gIHZhciBDb250aW51ZVNlbnRpbmVsID0ge307XG5cbiAgLy8gRHVtbXkgY29uc3RydWN0b3IgZnVuY3Rpb25zIHRoYXQgd2UgdXNlIGFzIHRoZSAuY29uc3RydWN0b3IgYW5kXG4gIC8vIC5jb25zdHJ1Y3Rvci5wcm90b3R5cGUgcHJvcGVydGllcyBmb3IgZnVuY3Rpb25zIHRoYXQgcmV0dXJuIEdlbmVyYXRvclxuICAvLyBvYmplY3RzLiBGb3IgZnVsbCBzcGVjIGNvbXBsaWFuY2UsIHlvdSBtYXkgd2lzaCB0byBjb25maWd1cmUgeW91clxuICAvLyBtaW5pZmllciBub3QgdG8gbWFuZ2xlIHRoZSBuYW1lcyBvZiB0aGVzZSB0d28gZnVuY3Rpb25zLlxuICBmdW5jdGlvbiBHZW5lcmF0b3IoKSB7fVxuICBmdW5jdGlvbiBHZW5lcmF0b3JGdW5jdGlvbigpIHt9XG4gIGZ1bmN0aW9uIEdlbmVyYXRvckZ1bmN0aW9uUHJvdG90eXBlKCkge31cblxuICAvLyBUaGlzIGlzIGEgcG9seWZpbGwgZm9yICVJdGVyYXRvclByb3RvdHlwZSUgZm9yIGVudmlyb25tZW50cyB0aGF0XG4gIC8vIGRvbid0IG5hdGl2ZWx5IHN1cHBvcnQgaXQuXG4gIHZhciBJdGVyYXRvclByb3RvdHlwZSA9IHt9O1xuICBJdGVyYXRvclByb3RvdHlwZVtpdGVyYXRvclN5bWJvbF0gPSBmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIHRoaXM7XG4gIH07XG5cbiAgdmFyIGdldFByb3RvID0gT2JqZWN0LmdldFByb3RvdHlwZU9mO1xuICB2YXIgTmF0aXZlSXRlcmF0b3JQcm90b3R5cGUgPSBnZXRQcm90byAmJiBnZXRQcm90byhnZXRQcm90byh2YWx1ZXMoW10pKSk7XG4gIGlmIChOYXRpdmVJdGVyYXRvclByb3RvdHlwZSAmJlxuICAgICAgTmF0aXZlSXRlcmF0b3JQcm90b3R5cGUgIT09IE9wICYmXG4gICAgICBoYXNPd24uY2FsbChOYXRpdmVJdGVyYXRvclByb3RvdHlwZSwgaXRlcmF0b3JTeW1ib2wpKSB7XG4gICAgLy8gVGhpcyBlbnZpcm9ubWVudCBoYXMgYSBuYXRpdmUgJUl0ZXJhdG9yUHJvdG90eXBlJTsgdXNlIGl0IGluc3RlYWRcbiAgICAvLyBvZiB0aGUgcG9seWZpbGwuXG4gICAgSXRlcmF0b3JQcm90b3R5cGUgPSBOYXRpdmVJdGVyYXRvclByb3RvdHlwZTtcbiAgfVxuXG4gIHZhciBHcCA9IEdlbmVyYXRvckZ1bmN0aW9uUHJvdG90eXBlLnByb3RvdHlwZSA9XG4gICAgR2VuZXJhdG9yLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoSXRlcmF0b3JQcm90b3R5cGUpO1xuICBHZW5lcmF0b3JGdW5jdGlvbi5wcm90b3R5cGUgPSBHcC5jb25zdHJ1Y3RvciA9IEdlbmVyYXRvckZ1bmN0aW9uUHJvdG90eXBlO1xuICBHZW5lcmF0b3JGdW5jdGlvblByb3RvdHlwZS5jb25zdHJ1Y3RvciA9IEdlbmVyYXRvckZ1bmN0aW9uO1xuICBHZW5lcmF0b3JGdW5jdGlvblByb3RvdHlwZVt0b1N0cmluZ1RhZ1N5bWJvbF0gPVxuICAgIEdlbmVyYXRvckZ1bmN0aW9uLmRpc3BsYXlOYW1lID0gXCJHZW5lcmF0b3JGdW5jdGlvblwiO1xuXG4gIC8vIEhlbHBlciBmb3IgZGVmaW5pbmcgdGhlIC5uZXh0LCAudGhyb3csIGFuZCAucmV0dXJuIG1ldGhvZHMgb2YgdGhlXG4gIC8vIEl0ZXJhdG9yIGludGVyZmFjZSBpbiB0ZXJtcyBvZiBhIHNpbmdsZSAuX2ludm9rZSBtZXRob2QuXG4gIGZ1bmN0aW9uIGRlZmluZUl0ZXJhdG9yTWV0aG9kcyhwcm90b3R5cGUpIHtcbiAgICBbXCJuZXh0XCIsIFwidGhyb3dcIiwgXCJyZXR1cm5cIl0uZm9yRWFjaChmdW5jdGlvbihtZXRob2QpIHtcbiAgICAgIHByb3RvdHlwZVttZXRob2RdID0gZnVuY3Rpb24oYXJnKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9pbnZva2UobWV0aG9kLCBhcmcpO1xuICAgICAgfTtcbiAgICB9KTtcbiAgfVxuXG4gIHJ1bnRpbWUuaXNHZW5lcmF0b3JGdW5jdGlvbiA9IGZ1bmN0aW9uKGdlbkZ1bikge1xuICAgIHZhciBjdG9yID0gdHlwZW9mIGdlbkZ1biA9PT0gXCJmdW5jdGlvblwiICYmIGdlbkZ1bi5jb25zdHJ1Y3RvcjtcbiAgICByZXR1cm4gY3RvclxuICAgICAgPyBjdG9yID09PSBHZW5lcmF0b3JGdW5jdGlvbiB8fFxuICAgICAgICAvLyBGb3IgdGhlIG5hdGl2ZSBHZW5lcmF0b3JGdW5jdGlvbiBjb25zdHJ1Y3RvciwgdGhlIGJlc3Qgd2UgY2FuXG4gICAgICAgIC8vIGRvIGlzIHRvIGNoZWNrIGl0cyAubmFtZSBwcm9wZXJ0eS5cbiAgICAgICAgKGN0b3IuZGlzcGxheU5hbWUgfHwgY3Rvci5uYW1lKSA9PT0gXCJHZW5lcmF0b3JGdW5jdGlvblwiXG4gICAgICA6IGZhbHNlO1xuICB9O1xuXG4gIHJ1bnRpbWUubWFyayA9IGZ1bmN0aW9uKGdlbkZ1bikge1xuICAgIGlmIChPYmplY3Quc2V0UHJvdG90eXBlT2YpIHtcbiAgICAgIE9iamVjdC5zZXRQcm90b3R5cGVPZihnZW5GdW4sIEdlbmVyYXRvckZ1bmN0aW9uUHJvdG90eXBlKTtcbiAgICB9IGVsc2Uge1xuICAgICAgZ2VuRnVuLl9fcHJvdG9fXyA9IEdlbmVyYXRvckZ1bmN0aW9uUHJvdG90eXBlO1xuICAgICAgaWYgKCEodG9TdHJpbmdUYWdTeW1ib2wgaW4gZ2VuRnVuKSkge1xuICAgICAgICBnZW5GdW5bdG9TdHJpbmdUYWdTeW1ib2xdID0gXCJHZW5lcmF0b3JGdW5jdGlvblwiO1xuICAgICAgfVxuICAgIH1cbiAgICBnZW5GdW4ucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShHcCk7XG4gICAgcmV0dXJuIGdlbkZ1bjtcbiAgfTtcblxuICAvLyBXaXRoaW4gdGhlIGJvZHkgb2YgYW55IGFzeW5jIGZ1bmN0aW9uLCBgYXdhaXQgeGAgaXMgdHJhbnNmb3JtZWQgdG9cbiAgLy8gYHlpZWxkIHJlZ2VuZXJhdG9yUnVudGltZS5hd3JhcCh4KWAsIHNvIHRoYXQgdGhlIHJ1bnRpbWUgY2FuIHRlc3RcbiAgLy8gYGhhc093bi5jYWxsKHZhbHVlLCBcIl9fYXdhaXRcIilgIHRvIGRldGVybWluZSBpZiB0aGUgeWllbGRlZCB2YWx1ZSBpc1xuICAvLyBtZWFudCB0byBiZSBhd2FpdGVkLlxuICBydW50aW1lLmF3cmFwID0gZnVuY3Rpb24oYXJnKSB7XG4gICAgcmV0dXJuIHsgX19hd2FpdDogYXJnIH07XG4gIH07XG5cbiAgZnVuY3Rpb24gQXN5bmNJdGVyYXRvcihnZW5lcmF0b3IpIHtcbiAgICBmdW5jdGlvbiBpbnZva2UobWV0aG9kLCBhcmcsIHJlc29sdmUsIHJlamVjdCkge1xuICAgICAgdmFyIHJlY29yZCA9IHRyeUNhdGNoKGdlbmVyYXRvclttZXRob2RdLCBnZW5lcmF0b3IsIGFyZyk7XG4gICAgICBpZiAocmVjb3JkLnR5cGUgPT09IFwidGhyb3dcIikge1xuICAgICAgICByZWplY3QocmVjb3JkLmFyZyk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB2YXIgcmVzdWx0ID0gcmVjb3JkLmFyZztcbiAgICAgICAgdmFyIHZhbHVlID0gcmVzdWx0LnZhbHVlO1xuICAgICAgICBpZiAodmFsdWUgJiZcbiAgICAgICAgICAgIHR5cGVvZiB2YWx1ZSA9PT0gXCJvYmplY3RcIiAmJlxuICAgICAgICAgICAgaGFzT3duLmNhbGwodmFsdWUsIFwiX19hd2FpdFwiKSkge1xuICAgICAgICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUodmFsdWUuX19hd2FpdCkudGhlbihmdW5jdGlvbih2YWx1ZSkge1xuICAgICAgICAgICAgaW52b2tlKFwibmV4dFwiLCB2YWx1ZSwgcmVzb2x2ZSwgcmVqZWN0KTtcbiAgICAgICAgICB9LCBmdW5jdGlvbihlcnIpIHtcbiAgICAgICAgICAgIGludm9rZShcInRocm93XCIsIGVyciwgcmVzb2x2ZSwgcmVqZWN0KTtcbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUodmFsdWUpLnRoZW4oZnVuY3Rpb24odW53cmFwcGVkKSB7XG4gICAgICAgICAgLy8gV2hlbiBhIHlpZWxkZWQgUHJvbWlzZSBpcyByZXNvbHZlZCwgaXRzIGZpbmFsIHZhbHVlIGJlY29tZXNcbiAgICAgICAgICAvLyB0aGUgLnZhbHVlIG9mIHRoZSBQcm9taXNlPHt2YWx1ZSxkb25lfT4gcmVzdWx0IGZvciB0aGVcbiAgICAgICAgICAvLyBjdXJyZW50IGl0ZXJhdGlvbi5cbiAgICAgICAgICByZXN1bHQudmFsdWUgPSB1bndyYXBwZWQ7XG4gICAgICAgICAgcmVzb2x2ZShyZXN1bHQpO1xuICAgICAgICB9LCBmdW5jdGlvbihlcnJvcikge1xuICAgICAgICAgIC8vIElmIGEgcmVqZWN0ZWQgUHJvbWlzZSB3YXMgeWllbGRlZCwgdGhyb3cgdGhlIHJlamVjdGlvbiBiYWNrXG4gICAgICAgICAgLy8gaW50byB0aGUgYXN5bmMgZ2VuZXJhdG9yIGZ1bmN0aW9uIHNvIGl0IGNhbiBiZSBoYW5kbGVkIHRoZXJlLlxuICAgICAgICAgIHJldHVybiBpbnZva2UoXCJ0aHJvd1wiLCBlcnJvciwgcmVzb2x2ZSwgcmVqZWN0KTtcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgdmFyIHByZXZpb3VzUHJvbWlzZTtcblxuICAgIGZ1bmN0aW9uIGVucXVldWUobWV0aG9kLCBhcmcpIHtcbiAgICAgIGZ1bmN0aW9uIGNhbGxJbnZva2VXaXRoTWV0aG9kQW5kQXJnKCkge1xuICAgICAgICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24ocmVzb2x2ZSwgcmVqZWN0KSB7XG4gICAgICAgICAgaW52b2tlKG1ldGhvZCwgYXJnLCByZXNvbHZlLCByZWplY3QpO1xuICAgICAgICB9KTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHByZXZpb3VzUHJvbWlzZSA9XG4gICAgICAgIC8vIElmIGVucXVldWUgaGFzIGJlZW4gY2FsbGVkIGJlZm9yZSwgdGhlbiB3ZSB3YW50IHRvIHdhaXQgdW50aWxcbiAgICAgICAgLy8gYWxsIHByZXZpb3VzIFByb21pc2VzIGhhdmUgYmVlbiByZXNvbHZlZCBiZWZvcmUgY2FsbGluZyBpbnZva2UsXG4gICAgICAgIC8vIHNvIHRoYXQgcmVzdWx0cyBhcmUgYWx3YXlzIGRlbGl2ZXJlZCBpbiB0aGUgY29ycmVjdCBvcmRlci4gSWZcbiAgICAgICAgLy8gZW5xdWV1ZSBoYXMgbm90IGJlZW4gY2FsbGVkIGJlZm9yZSwgdGhlbiBpdCBpcyBpbXBvcnRhbnQgdG9cbiAgICAgICAgLy8gY2FsbCBpbnZva2UgaW1tZWRpYXRlbHksIHdpdGhvdXQgd2FpdGluZyBvbiBhIGNhbGxiYWNrIHRvIGZpcmUsXG4gICAgICAgIC8vIHNvIHRoYXQgdGhlIGFzeW5jIGdlbmVyYXRvciBmdW5jdGlvbiBoYXMgdGhlIG9wcG9ydHVuaXR5IHRvIGRvXG4gICAgICAgIC8vIGFueSBuZWNlc3Nhcnkgc2V0dXAgaW4gYSBwcmVkaWN0YWJsZSB3YXkuIFRoaXMgcHJlZGljdGFiaWxpdHlcbiAgICAgICAgLy8gaXMgd2h5IHRoZSBQcm9taXNlIGNvbnN0cnVjdG9yIHN5bmNocm9ub3VzbHkgaW52b2tlcyBpdHNcbiAgICAgICAgLy8gZXhlY3V0b3IgY2FsbGJhY2ssIGFuZCB3aHkgYXN5bmMgZnVuY3Rpb25zIHN5bmNocm9ub3VzbHlcbiAgICAgICAgLy8gZXhlY3V0ZSBjb2RlIGJlZm9yZSB0aGUgZmlyc3QgYXdhaXQuIFNpbmNlIHdlIGltcGxlbWVudCBzaW1wbGVcbiAgICAgICAgLy8gYXN5bmMgZnVuY3Rpb25zIGluIHRlcm1zIG9mIGFzeW5jIGdlbmVyYXRvcnMsIGl0IGlzIGVzcGVjaWFsbHlcbiAgICAgICAgLy8gaW1wb3J0YW50IHRvIGdldCB0aGlzIHJpZ2h0LCBldmVuIHRob3VnaCBpdCByZXF1aXJlcyBjYXJlLlxuICAgICAgICBwcmV2aW91c1Byb21pc2UgPyBwcmV2aW91c1Byb21pc2UudGhlbihcbiAgICAgICAgICBjYWxsSW52b2tlV2l0aE1ldGhvZEFuZEFyZyxcbiAgICAgICAgICAvLyBBdm9pZCBwcm9wYWdhdGluZyBmYWlsdXJlcyB0byBQcm9taXNlcyByZXR1cm5lZCBieSBsYXRlclxuICAgICAgICAgIC8vIGludm9jYXRpb25zIG9mIHRoZSBpdGVyYXRvci5cbiAgICAgICAgICBjYWxsSW52b2tlV2l0aE1ldGhvZEFuZEFyZ1xuICAgICAgICApIDogY2FsbEludm9rZVdpdGhNZXRob2RBbmRBcmcoKTtcbiAgICB9XG5cbiAgICAvLyBEZWZpbmUgdGhlIHVuaWZpZWQgaGVscGVyIG1ldGhvZCB0aGF0IGlzIHVzZWQgdG8gaW1wbGVtZW50IC5uZXh0LFxuICAgIC8vIC50aHJvdywgYW5kIC5yZXR1cm4gKHNlZSBkZWZpbmVJdGVyYXRvck1ldGhvZHMpLlxuICAgIHRoaXMuX2ludm9rZSA9IGVucXVldWU7XG4gIH1cblxuICBkZWZpbmVJdGVyYXRvck1ldGhvZHMoQXN5bmNJdGVyYXRvci5wcm90b3R5cGUpO1xuICBBc3luY0l0ZXJhdG9yLnByb3RvdHlwZVthc3luY0l0ZXJhdG9yU3ltYm9sXSA9IGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gdGhpcztcbiAgfTtcbiAgcnVudGltZS5Bc3luY0l0ZXJhdG9yID0gQXN5bmNJdGVyYXRvcjtcblxuICAvLyBOb3RlIHRoYXQgc2ltcGxlIGFzeW5jIGZ1bmN0aW9ucyBhcmUgaW1wbGVtZW50ZWQgb24gdG9wIG9mXG4gIC8vIEFzeW5jSXRlcmF0b3Igb2JqZWN0czsgdGhleSBqdXN0IHJldHVybiBhIFByb21pc2UgZm9yIHRoZSB2YWx1ZSBvZlxuICAvLyB0aGUgZmluYWwgcmVzdWx0IHByb2R1Y2VkIGJ5IHRoZSBpdGVyYXRvci5cbiAgcnVudGltZS5hc3luYyA9IGZ1bmN0aW9uKGlubmVyRm4sIG91dGVyRm4sIHNlbGYsIHRyeUxvY3NMaXN0KSB7XG4gICAgdmFyIGl0ZXIgPSBuZXcgQXN5bmNJdGVyYXRvcihcbiAgICAgIHdyYXAoaW5uZXJGbiwgb3V0ZXJGbiwgc2VsZiwgdHJ5TG9jc0xpc3QpXG4gICAgKTtcblxuICAgIHJldHVybiBydW50aW1lLmlzR2VuZXJhdG9yRnVuY3Rpb24ob3V0ZXJGbilcbiAgICAgID8gaXRlciAvLyBJZiBvdXRlckZuIGlzIGEgZ2VuZXJhdG9yLCByZXR1cm4gdGhlIGZ1bGwgaXRlcmF0b3IuXG4gICAgICA6IGl0ZXIubmV4dCgpLnRoZW4oZnVuY3Rpb24ocmVzdWx0KSB7XG4gICAgICAgICAgcmV0dXJuIHJlc3VsdC5kb25lID8gcmVzdWx0LnZhbHVlIDogaXRlci5uZXh0KCk7XG4gICAgICAgIH0pO1xuICB9O1xuXG4gIGZ1bmN0aW9uIG1ha2VJbnZva2VNZXRob2QoaW5uZXJGbiwgc2VsZiwgY29udGV4dCkge1xuICAgIHZhciBzdGF0ZSA9IEdlblN0YXRlU3VzcGVuZGVkU3RhcnQ7XG5cbiAgICByZXR1cm4gZnVuY3Rpb24gaW52b2tlKG1ldGhvZCwgYXJnKSB7XG4gICAgICBpZiAoc3RhdGUgPT09IEdlblN0YXRlRXhlY3V0aW5nKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIkdlbmVyYXRvciBpcyBhbHJlYWR5IHJ1bm5pbmdcIik7XG4gICAgICB9XG5cbiAgICAgIGlmIChzdGF0ZSA9PT0gR2VuU3RhdGVDb21wbGV0ZWQpIHtcbiAgICAgICAgaWYgKG1ldGhvZCA9PT0gXCJ0aHJvd1wiKSB7XG4gICAgICAgICAgdGhyb3cgYXJnO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gQmUgZm9yZ2l2aW5nLCBwZXIgMjUuMy4zLjMuMyBvZiB0aGUgc3BlYzpcbiAgICAgICAgLy8gaHR0cHM6Ly9wZW9wbGUubW96aWxsYS5vcmcvfmpvcmVuZG9yZmYvZXM2LWRyYWZ0Lmh0bWwjc2VjLWdlbmVyYXRvcnJlc3VtZVxuICAgICAgICByZXR1cm4gZG9uZVJlc3VsdCgpO1xuICAgICAgfVxuXG4gICAgICBjb250ZXh0Lm1ldGhvZCA9IG1ldGhvZDtcbiAgICAgIGNvbnRleHQuYXJnID0gYXJnO1xuXG4gICAgICB3aGlsZSAodHJ1ZSkge1xuICAgICAgICB2YXIgZGVsZWdhdGUgPSBjb250ZXh0LmRlbGVnYXRlO1xuICAgICAgICBpZiAoZGVsZWdhdGUpIHtcbiAgICAgICAgICB2YXIgZGVsZWdhdGVSZXN1bHQgPSBtYXliZUludm9rZURlbGVnYXRlKGRlbGVnYXRlLCBjb250ZXh0KTtcbiAgICAgICAgICBpZiAoZGVsZWdhdGVSZXN1bHQpIHtcbiAgICAgICAgICAgIGlmIChkZWxlZ2F0ZVJlc3VsdCA9PT0gQ29udGludWVTZW50aW5lbCkgY29udGludWU7XG4gICAgICAgICAgICByZXR1cm4gZGVsZWdhdGVSZXN1bHQ7XG4gICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgaWYgKGNvbnRleHQubWV0aG9kID09PSBcIm5leHRcIikge1xuICAgICAgICAgIC8vIFNldHRpbmcgY29udGV4dC5fc2VudCBmb3IgbGVnYWN5IHN1cHBvcnQgb2YgQmFiZWwnc1xuICAgICAgICAgIC8vIGZ1bmN0aW9uLnNlbnQgaW1wbGVtZW50YXRpb24uXG4gICAgICAgICAgY29udGV4dC5zZW50ID0gY29udGV4dC5fc2VudCA9IGNvbnRleHQuYXJnO1xuXG4gICAgICAgIH0gZWxzZSBpZiAoY29udGV4dC5tZXRob2QgPT09IFwidGhyb3dcIikge1xuICAgICAgICAgIGlmIChzdGF0ZSA9PT0gR2VuU3RhdGVTdXNwZW5kZWRTdGFydCkge1xuICAgICAgICAgICAgc3RhdGUgPSBHZW5TdGF0ZUNvbXBsZXRlZDtcbiAgICAgICAgICAgIHRocm93IGNvbnRleHQuYXJnO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIGNvbnRleHQuZGlzcGF0Y2hFeGNlcHRpb24oY29udGV4dC5hcmcpO1xuXG4gICAgICAgIH0gZWxzZSBpZiAoY29udGV4dC5tZXRob2QgPT09IFwicmV0dXJuXCIpIHtcbiAgICAgICAgICBjb250ZXh0LmFicnVwdChcInJldHVyblwiLCBjb250ZXh0LmFyZyk7XG4gICAgICAgIH1cblxuICAgICAgICBzdGF0ZSA9IEdlblN0YXRlRXhlY3V0aW5nO1xuXG4gICAgICAgIHZhciByZWNvcmQgPSB0cnlDYXRjaChpbm5lckZuLCBzZWxmLCBjb250ZXh0KTtcbiAgICAgICAgaWYgKHJlY29yZC50eXBlID09PSBcIm5vcm1hbFwiKSB7XG4gICAgICAgICAgLy8gSWYgYW4gZXhjZXB0aW9uIGlzIHRocm93biBmcm9tIGlubmVyRm4sIHdlIGxlYXZlIHN0YXRlID09PVxuICAgICAgICAgIC8vIEdlblN0YXRlRXhlY3V0aW5nIGFuZCBsb29wIGJhY2sgZm9yIGFub3RoZXIgaW52b2NhdGlvbi5cbiAgICAgICAgICBzdGF0ZSA9IGNvbnRleHQuZG9uZVxuICAgICAgICAgICAgPyBHZW5TdGF0ZUNvbXBsZXRlZFxuICAgICAgICAgICAgOiBHZW5TdGF0ZVN1c3BlbmRlZFlpZWxkO1xuXG4gICAgICAgICAgaWYgKHJlY29yZC5hcmcgPT09IENvbnRpbnVlU2VudGluZWwpIHtcbiAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICB2YWx1ZTogcmVjb3JkLmFyZyxcbiAgICAgICAgICAgIGRvbmU6IGNvbnRleHQuZG9uZVxuICAgICAgICAgIH07XG5cbiAgICAgICAgfSBlbHNlIGlmIChyZWNvcmQudHlwZSA9PT0gXCJ0aHJvd1wiKSB7XG4gICAgICAgICAgc3RhdGUgPSBHZW5TdGF0ZUNvbXBsZXRlZDtcbiAgICAgICAgICAvLyBEaXNwYXRjaCB0aGUgZXhjZXB0aW9uIGJ5IGxvb3BpbmcgYmFjayBhcm91bmQgdG8gdGhlXG4gICAgICAgICAgLy8gY29udGV4dC5kaXNwYXRjaEV4Y2VwdGlvbihjb250ZXh0LmFyZykgY2FsbCBhYm92ZS5cbiAgICAgICAgICBjb250ZXh0Lm1ldGhvZCA9IFwidGhyb3dcIjtcbiAgICAgICAgICBjb250ZXh0LmFyZyA9IHJlY29yZC5hcmc7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9O1xuICB9XG5cbiAgLy8gQ2FsbCBkZWxlZ2F0ZS5pdGVyYXRvcltjb250ZXh0Lm1ldGhvZF0oY29udGV4dC5hcmcpIGFuZCBoYW5kbGUgdGhlXG4gIC8vIHJlc3VsdCwgZWl0aGVyIGJ5IHJldHVybmluZyBhIHsgdmFsdWUsIGRvbmUgfSByZXN1bHQgZnJvbSB0aGVcbiAgLy8gZGVsZWdhdGUgaXRlcmF0b3IsIG9yIGJ5IG1vZGlmeWluZyBjb250ZXh0Lm1ldGhvZCBhbmQgY29udGV4dC5hcmcsXG4gIC8vIHNldHRpbmcgY29udGV4dC5kZWxlZ2F0ZSB0byBudWxsLCBhbmQgcmV0dXJuaW5nIHRoZSBDb250aW51ZVNlbnRpbmVsLlxuICBmdW5jdGlvbiBtYXliZUludm9rZURlbGVnYXRlKGRlbGVnYXRlLCBjb250ZXh0KSB7XG4gICAgdmFyIG1ldGhvZCA9IGRlbGVnYXRlLml0ZXJhdG9yW2NvbnRleHQubWV0aG9kXTtcbiAgICBpZiAobWV0aG9kID09PSB1bmRlZmluZWQpIHtcbiAgICAgIC8vIEEgLnRocm93IG9yIC5yZXR1cm4gd2hlbiB0aGUgZGVsZWdhdGUgaXRlcmF0b3IgaGFzIG5vIC50aHJvd1xuICAgICAgLy8gbWV0aG9kIGFsd2F5cyB0ZXJtaW5hdGVzIHRoZSB5aWVsZCogbG9vcC5cbiAgICAgIGNvbnRleHQuZGVsZWdhdGUgPSBudWxsO1xuXG4gICAgICBpZiAoY29udGV4dC5tZXRob2QgPT09IFwidGhyb3dcIikge1xuICAgICAgICBpZiAoZGVsZWdhdGUuaXRlcmF0b3IucmV0dXJuKSB7XG4gICAgICAgICAgLy8gSWYgdGhlIGRlbGVnYXRlIGl0ZXJhdG9yIGhhcyBhIHJldHVybiBtZXRob2QsIGdpdmUgaXQgYVxuICAgICAgICAgIC8vIGNoYW5jZSB0byBjbGVhbiB1cC5cbiAgICAgICAgICBjb250ZXh0Lm1ldGhvZCA9IFwicmV0dXJuXCI7XG4gICAgICAgICAgY29udGV4dC5hcmcgPSB1bmRlZmluZWQ7XG4gICAgICAgICAgbWF5YmVJbnZva2VEZWxlZ2F0ZShkZWxlZ2F0ZSwgY29udGV4dCk7XG5cbiAgICAgICAgICBpZiAoY29udGV4dC5tZXRob2QgPT09IFwidGhyb3dcIikge1xuICAgICAgICAgICAgLy8gSWYgbWF5YmVJbnZva2VEZWxlZ2F0ZShjb250ZXh0KSBjaGFuZ2VkIGNvbnRleHQubWV0aG9kIGZyb21cbiAgICAgICAgICAgIC8vIFwicmV0dXJuXCIgdG8gXCJ0aHJvd1wiLCBsZXQgdGhhdCBvdmVycmlkZSB0aGUgVHlwZUVycm9yIGJlbG93LlxuICAgICAgICAgICAgcmV0dXJuIENvbnRpbnVlU2VudGluZWw7XG4gICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgY29udGV4dC5tZXRob2QgPSBcInRocm93XCI7XG4gICAgICAgIGNvbnRleHQuYXJnID0gbmV3IFR5cGVFcnJvcihcbiAgICAgICAgICBcIlRoZSBpdGVyYXRvciBkb2VzIG5vdCBwcm92aWRlIGEgJ3Rocm93JyBtZXRob2RcIik7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBDb250aW51ZVNlbnRpbmVsO1xuICAgIH1cblxuICAgIHZhciByZWNvcmQgPSB0cnlDYXRjaChtZXRob2QsIGRlbGVnYXRlLml0ZXJhdG9yLCBjb250ZXh0LmFyZyk7XG5cbiAgICBpZiAocmVjb3JkLnR5cGUgPT09IFwidGhyb3dcIikge1xuICAgICAgY29udGV4dC5tZXRob2QgPSBcInRocm93XCI7XG4gICAgICBjb250ZXh0LmFyZyA9IHJlY29yZC5hcmc7XG4gICAgICBjb250ZXh0LmRlbGVnYXRlID0gbnVsbDtcbiAgICAgIHJldHVybiBDb250aW51ZVNlbnRpbmVsO1xuICAgIH1cblxuICAgIHZhciBpbmZvID0gcmVjb3JkLmFyZztcblxuICAgIGlmICghIGluZm8pIHtcbiAgICAgIGNvbnRleHQubWV0aG9kID0gXCJ0aHJvd1wiO1xuICAgICAgY29udGV4dC5hcmcgPSBuZXcgVHlwZUVycm9yKFwiaXRlcmF0b3IgcmVzdWx0IGlzIG5vdCBhbiBvYmplY3RcIik7XG4gICAgICBjb250ZXh0LmRlbGVnYXRlID0gbnVsbDtcbiAgICAgIHJldHVybiBDb250aW51ZVNlbnRpbmVsO1xuICAgIH1cblxuICAgIGlmIChpbmZvLmRvbmUpIHtcbiAgICAgIC8vIEFzc2lnbiB0aGUgcmVzdWx0IG9mIHRoZSBmaW5pc2hlZCBkZWxlZ2F0ZSB0byB0aGUgdGVtcG9yYXJ5XG4gICAgICAvLyB2YXJpYWJsZSBzcGVjaWZpZWQgYnkgZGVsZWdhdGUucmVzdWx0TmFtZSAoc2VlIGRlbGVnYXRlWWllbGQpLlxuICAgICAgY29udGV4dFtkZWxlZ2F0ZS5yZXN1bHROYW1lXSA9IGluZm8udmFsdWU7XG5cbiAgICAgIC8vIFJlc3VtZSBleGVjdXRpb24gYXQgdGhlIGRlc2lyZWQgbG9jYXRpb24gKHNlZSBkZWxlZ2F0ZVlpZWxkKS5cbiAgICAgIGNvbnRleHQubmV4dCA9IGRlbGVnYXRlLm5leHRMb2M7XG5cbiAgICAgIC8vIElmIGNvbnRleHQubWV0aG9kIHdhcyBcInRocm93XCIgYnV0IHRoZSBkZWxlZ2F0ZSBoYW5kbGVkIHRoZVxuICAgICAgLy8gZXhjZXB0aW9uLCBsZXQgdGhlIG91dGVyIGdlbmVyYXRvciBwcm9jZWVkIG5vcm1hbGx5LiBJZlxuICAgICAgLy8gY29udGV4dC5tZXRob2Qgd2FzIFwibmV4dFwiLCBmb3JnZXQgY29udGV4dC5hcmcgc2luY2UgaXQgaGFzIGJlZW5cbiAgICAgIC8vIFwiY29uc3VtZWRcIiBieSB0aGUgZGVsZWdhdGUgaXRlcmF0b3IuIElmIGNvbnRleHQubWV0aG9kIHdhc1xuICAgICAgLy8gXCJyZXR1cm5cIiwgYWxsb3cgdGhlIG9yaWdpbmFsIC5yZXR1cm4gY2FsbCB0byBjb250aW51ZSBpbiB0aGVcbiAgICAgIC8vIG91dGVyIGdlbmVyYXRvci5cbiAgICAgIGlmIChjb250ZXh0Lm1ldGhvZCAhPT0gXCJyZXR1cm5cIikge1xuICAgICAgICBjb250ZXh0Lm1ldGhvZCA9IFwibmV4dFwiO1xuICAgICAgICBjb250ZXh0LmFyZyA9IHVuZGVmaW5lZDtcbiAgICAgIH1cblxuICAgIH0gZWxzZSB7XG4gICAgICAvLyBSZS15aWVsZCB0aGUgcmVzdWx0IHJldHVybmVkIGJ5IHRoZSBkZWxlZ2F0ZSBtZXRob2QuXG4gICAgICByZXR1cm4gaW5mbztcbiAgICB9XG5cbiAgICAvLyBUaGUgZGVsZWdhdGUgaXRlcmF0b3IgaXMgZmluaXNoZWQsIHNvIGZvcmdldCBpdCBhbmQgY29udGludWUgd2l0aFxuICAgIC8vIHRoZSBvdXRlciBnZW5lcmF0b3IuXG4gICAgY29udGV4dC5kZWxlZ2F0ZSA9IG51bGw7XG4gICAgcmV0dXJuIENvbnRpbnVlU2VudGluZWw7XG4gIH1cblxuICAvLyBEZWZpbmUgR2VuZXJhdG9yLnByb3RvdHlwZS57bmV4dCx0aHJvdyxyZXR1cm59IGluIHRlcm1zIG9mIHRoZVxuICAvLyB1bmlmaWVkIC5faW52b2tlIGhlbHBlciBtZXRob2QuXG4gIGRlZmluZUl0ZXJhdG9yTWV0aG9kcyhHcCk7XG5cbiAgR3BbdG9TdHJpbmdUYWdTeW1ib2xdID0gXCJHZW5lcmF0b3JcIjtcblxuICAvLyBBIEdlbmVyYXRvciBzaG91bGQgYWx3YXlzIHJldHVybiBpdHNlbGYgYXMgdGhlIGl0ZXJhdG9yIG9iamVjdCB3aGVuIHRoZVxuICAvLyBAQGl0ZXJhdG9yIGZ1bmN0aW9uIGlzIGNhbGxlZCBvbiBpdC4gU29tZSBicm93c2VycycgaW1wbGVtZW50YXRpb25zIG9mIHRoZVxuICAvLyBpdGVyYXRvciBwcm90b3R5cGUgY2hhaW4gaW5jb3JyZWN0bHkgaW1wbGVtZW50IHRoaXMsIGNhdXNpbmcgdGhlIEdlbmVyYXRvclxuICAvLyBvYmplY3QgdG8gbm90IGJlIHJldHVybmVkIGZyb20gdGhpcyBjYWxsLiBUaGlzIGVuc3VyZXMgdGhhdCBkb2Vzbid0IGhhcHBlbi5cbiAgLy8gU2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9mYWNlYm9vay9yZWdlbmVyYXRvci9pc3N1ZXMvMjc0IGZvciBtb3JlIGRldGFpbHMuXG4gIEdwW2l0ZXJhdG9yU3ltYm9sXSA9IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiB0aGlzO1xuICB9O1xuXG4gIEdwLnRvU3RyaW5nID0gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIFwiW29iamVjdCBHZW5lcmF0b3JdXCI7XG4gIH07XG5cbiAgZnVuY3Rpb24gcHVzaFRyeUVudHJ5KGxvY3MpIHtcbiAgICB2YXIgZW50cnkgPSB7IHRyeUxvYzogbG9jc1swXSB9O1xuXG4gICAgaWYgKDEgaW4gbG9jcykge1xuICAgICAgZW50cnkuY2F0Y2hMb2MgPSBsb2NzWzFdO1xuICAgIH1cblxuICAgIGlmICgyIGluIGxvY3MpIHtcbiAgICAgIGVudHJ5LmZpbmFsbHlMb2MgPSBsb2NzWzJdO1xuICAgICAgZW50cnkuYWZ0ZXJMb2MgPSBsb2NzWzNdO1xuICAgIH1cblxuICAgIHRoaXMudHJ5RW50cmllcy5wdXNoKGVudHJ5KTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHJlc2V0VHJ5RW50cnkoZW50cnkpIHtcbiAgICB2YXIgcmVjb3JkID0gZW50cnkuY29tcGxldGlvbiB8fCB7fTtcbiAgICByZWNvcmQudHlwZSA9IFwibm9ybWFsXCI7XG4gICAgZGVsZXRlIHJlY29yZC5hcmc7XG4gICAgZW50cnkuY29tcGxldGlvbiA9IHJlY29yZDtcbiAgfVxuXG4gIGZ1bmN0aW9uIENvbnRleHQodHJ5TG9jc0xpc3QpIHtcbiAgICAvLyBUaGUgcm9vdCBlbnRyeSBvYmplY3QgKGVmZmVjdGl2ZWx5IGEgdHJ5IHN0YXRlbWVudCB3aXRob3V0IGEgY2F0Y2hcbiAgICAvLyBvciBhIGZpbmFsbHkgYmxvY2spIGdpdmVzIHVzIGEgcGxhY2UgdG8gc3RvcmUgdmFsdWVzIHRocm93biBmcm9tXG4gICAgLy8gbG9jYXRpb25zIHdoZXJlIHRoZXJlIGlzIG5vIGVuY2xvc2luZyB0cnkgc3RhdGVtZW50LlxuICAgIHRoaXMudHJ5RW50cmllcyA9IFt7IHRyeUxvYzogXCJyb290XCIgfV07XG4gICAgdHJ5TG9jc0xpc3QuZm9yRWFjaChwdXNoVHJ5RW50cnksIHRoaXMpO1xuICAgIHRoaXMucmVzZXQodHJ1ZSk7XG4gIH1cblxuICBydW50aW1lLmtleXMgPSBmdW5jdGlvbihvYmplY3QpIHtcbiAgICB2YXIga2V5cyA9IFtdO1xuICAgIGZvciAodmFyIGtleSBpbiBvYmplY3QpIHtcbiAgICAgIGtleXMucHVzaChrZXkpO1xuICAgIH1cbiAgICBrZXlzLnJldmVyc2UoKTtcblxuICAgIC8vIFJhdGhlciB0aGFuIHJldHVybmluZyBhbiBvYmplY3Qgd2l0aCBhIG5leHQgbWV0aG9kLCB3ZSBrZWVwXG4gICAgLy8gdGhpbmdzIHNpbXBsZSBhbmQgcmV0dXJuIHRoZSBuZXh0IGZ1bmN0aW9uIGl0c2VsZi5cbiAgICByZXR1cm4gZnVuY3Rpb24gbmV4dCgpIHtcbiAgICAgIHdoaWxlIChrZXlzLmxlbmd0aCkge1xuICAgICAgICB2YXIga2V5ID0ga2V5cy5wb3AoKTtcbiAgICAgICAgaWYgKGtleSBpbiBvYmplY3QpIHtcbiAgICAgICAgICBuZXh0LnZhbHVlID0ga2V5O1xuICAgICAgICAgIG5leHQuZG9uZSA9IGZhbHNlO1xuICAgICAgICAgIHJldHVybiBuZXh0O1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIC8vIFRvIGF2b2lkIGNyZWF0aW5nIGFuIGFkZGl0aW9uYWwgb2JqZWN0LCB3ZSBqdXN0IGhhbmcgdGhlIC52YWx1ZVxuICAgICAgLy8gYW5kIC5kb25lIHByb3BlcnRpZXMgb2ZmIHRoZSBuZXh0IGZ1bmN0aW9uIG9iamVjdCBpdHNlbGYuIFRoaXNcbiAgICAgIC8vIGFsc28gZW5zdXJlcyB0aGF0IHRoZSBtaW5pZmllciB3aWxsIG5vdCBhbm9ueW1pemUgdGhlIGZ1bmN0aW9uLlxuICAgICAgbmV4dC5kb25lID0gdHJ1ZTtcbiAgICAgIHJldHVybiBuZXh0O1xuICAgIH07XG4gIH07XG5cbiAgZnVuY3Rpb24gdmFsdWVzKGl0ZXJhYmxlKSB7XG4gICAgaWYgKGl0ZXJhYmxlKSB7XG4gICAgICB2YXIgaXRlcmF0b3JNZXRob2QgPSBpdGVyYWJsZVtpdGVyYXRvclN5bWJvbF07XG4gICAgICBpZiAoaXRlcmF0b3JNZXRob2QpIHtcbiAgICAgICAgcmV0dXJuIGl0ZXJhdG9yTWV0aG9kLmNhbGwoaXRlcmFibGUpO1xuICAgICAgfVxuXG4gICAgICBpZiAodHlwZW9mIGl0ZXJhYmxlLm5leHQgPT09IFwiZnVuY3Rpb25cIikge1xuICAgICAgICByZXR1cm4gaXRlcmFibGU7XG4gICAgICB9XG5cbiAgICAgIGlmICghaXNOYU4oaXRlcmFibGUubGVuZ3RoKSkge1xuICAgICAgICB2YXIgaSA9IC0xLCBuZXh0ID0gZnVuY3Rpb24gbmV4dCgpIHtcbiAgICAgICAgICB3aGlsZSAoKytpIDwgaXRlcmFibGUubGVuZ3RoKSB7XG4gICAgICAgICAgICBpZiAoaGFzT3duLmNhbGwoaXRlcmFibGUsIGkpKSB7XG4gICAgICAgICAgICAgIG5leHQudmFsdWUgPSBpdGVyYWJsZVtpXTtcbiAgICAgICAgICAgICAgbmV4dC5kb25lID0gZmFsc2U7XG4gICAgICAgICAgICAgIHJldHVybiBuZXh0O1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cblxuICAgICAgICAgIG5leHQudmFsdWUgPSB1bmRlZmluZWQ7XG4gICAgICAgICAgbmV4dC5kb25lID0gdHJ1ZTtcblxuICAgICAgICAgIHJldHVybiBuZXh0O1xuICAgICAgICB9O1xuXG4gICAgICAgIHJldHVybiBuZXh0Lm5leHQgPSBuZXh0O1xuICAgICAgfVxuICAgIH1cblxuICAgIC8vIFJldHVybiBhbiBpdGVyYXRvciB3aXRoIG5vIHZhbHVlcy5cbiAgICByZXR1cm4geyBuZXh0OiBkb25lUmVzdWx0IH07XG4gIH1cbiAgcnVudGltZS52YWx1ZXMgPSB2YWx1ZXM7XG5cbiAgZnVuY3Rpb24gZG9uZVJlc3VsdCgpIHtcbiAgICByZXR1cm4geyB2YWx1ZTogdW5kZWZpbmVkLCBkb25lOiB0cnVlIH07XG4gIH1cblxuICBDb250ZXh0LnByb3RvdHlwZSA9IHtcbiAgICBjb25zdHJ1Y3RvcjogQ29udGV4dCxcblxuICAgIHJlc2V0OiBmdW5jdGlvbihza2lwVGVtcFJlc2V0KSB7XG4gICAgICB0aGlzLnByZXYgPSAwO1xuICAgICAgdGhpcy5uZXh0ID0gMDtcbiAgICAgIC8vIFJlc2V0dGluZyBjb250ZXh0Ll9zZW50IGZvciBsZWdhY3kgc3VwcG9ydCBvZiBCYWJlbCdzXG4gICAgICAvLyBmdW5jdGlvbi5zZW50IGltcGxlbWVudGF0aW9uLlxuICAgICAgdGhpcy5zZW50ID0gdGhpcy5fc2VudCA9IHVuZGVmaW5lZDtcbiAgICAgIHRoaXMuZG9uZSA9IGZhbHNlO1xuICAgICAgdGhpcy5kZWxlZ2F0ZSA9IG51bGw7XG5cbiAgICAgIHRoaXMubWV0aG9kID0gXCJuZXh0XCI7XG4gICAgICB0aGlzLmFyZyA9IHVuZGVmaW5lZDtcblxuICAgICAgdGhpcy50cnlFbnRyaWVzLmZvckVhY2gocmVzZXRUcnlFbnRyeSk7XG5cbiAgICAgIGlmICghc2tpcFRlbXBSZXNldCkge1xuICAgICAgICBmb3IgKHZhciBuYW1lIGluIHRoaXMpIHtcbiAgICAgICAgICAvLyBOb3Qgc3VyZSBhYm91dCB0aGUgb3B0aW1hbCBvcmRlciBvZiB0aGVzZSBjb25kaXRpb25zOlxuICAgICAgICAgIGlmIChuYW1lLmNoYXJBdCgwKSA9PT0gXCJ0XCIgJiZcbiAgICAgICAgICAgICAgaGFzT3duLmNhbGwodGhpcywgbmFtZSkgJiZcbiAgICAgICAgICAgICAgIWlzTmFOKCtuYW1lLnNsaWNlKDEpKSkge1xuICAgICAgICAgICAgdGhpc1tuYW1lXSA9IHVuZGVmaW5lZDtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9LFxuXG4gICAgc3RvcDogZnVuY3Rpb24oKSB7XG4gICAgICB0aGlzLmRvbmUgPSB0cnVlO1xuXG4gICAgICB2YXIgcm9vdEVudHJ5ID0gdGhpcy50cnlFbnRyaWVzWzBdO1xuICAgICAgdmFyIHJvb3RSZWNvcmQgPSByb290RW50cnkuY29tcGxldGlvbjtcbiAgICAgIGlmIChyb290UmVjb3JkLnR5cGUgPT09IFwidGhyb3dcIikge1xuICAgICAgICB0aHJvdyByb290UmVjb3JkLmFyZztcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHRoaXMucnZhbDtcbiAgICB9LFxuXG4gICAgZGlzcGF0Y2hFeGNlcHRpb246IGZ1bmN0aW9uKGV4Y2VwdGlvbikge1xuICAgICAgaWYgKHRoaXMuZG9uZSkge1xuICAgICAgICB0aHJvdyBleGNlcHRpb247XG4gICAgICB9XG5cbiAgICAgIHZhciBjb250ZXh0ID0gdGhpcztcbiAgICAgIGZ1bmN0aW9uIGhhbmRsZShsb2MsIGNhdWdodCkge1xuICAgICAgICByZWNvcmQudHlwZSA9IFwidGhyb3dcIjtcbiAgICAgICAgcmVjb3JkLmFyZyA9IGV4Y2VwdGlvbjtcbiAgICAgICAgY29udGV4dC5uZXh0ID0gbG9jO1xuXG4gICAgICAgIGlmIChjYXVnaHQpIHtcbiAgICAgICAgICAvLyBJZiB0aGUgZGlzcGF0Y2hlZCBleGNlcHRpb24gd2FzIGNhdWdodCBieSBhIGNhdGNoIGJsb2NrLFxuICAgICAgICAgIC8vIHRoZW4gbGV0IHRoYXQgY2F0Y2ggYmxvY2sgaGFuZGxlIHRoZSBleGNlcHRpb24gbm9ybWFsbHkuXG4gICAgICAgICAgY29udGV4dC5tZXRob2QgPSBcIm5leHRcIjtcbiAgICAgICAgICBjb250ZXh0LmFyZyA9IHVuZGVmaW5lZDtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiAhISBjYXVnaHQ7XG4gICAgICB9XG5cbiAgICAgIGZvciAodmFyIGkgPSB0aGlzLnRyeUVudHJpZXMubGVuZ3RoIC0gMTsgaSA+PSAwOyAtLWkpIHtcbiAgICAgICAgdmFyIGVudHJ5ID0gdGhpcy50cnlFbnRyaWVzW2ldO1xuICAgICAgICB2YXIgcmVjb3JkID0gZW50cnkuY29tcGxldGlvbjtcblxuICAgICAgICBpZiAoZW50cnkudHJ5TG9jID09PSBcInJvb3RcIikge1xuICAgICAgICAgIC8vIEV4Y2VwdGlvbiB0aHJvd24gb3V0c2lkZSBvZiBhbnkgdHJ5IGJsb2NrIHRoYXQgY291bGQgaGFuZGxlXG4gICAgICAgICAgLy8gaXQsIHNvIHNldCB0aGUgY29tcGxldGlvbiB2YWx1ZSBvZiB0aGUgZW50aXJlIGZ1bmN0aW9uIHRvXG4gICAgICAgICAgLy8gdGhyb3cgdGhlIGV4Y2VwdGlvbi5cbiAgICAgICAgICByZXR1cm4gaGFuZGxlKFwiZW5kXCIpO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKGVudHJ5LnRyeUxvYyA8PSB0aGlzLnByZXYpIHtcbiAgICAgICAgICB2YXIgaGFzQ2F0Y2ggPSBoYXNPd24uY2FsbChlbnRyeSwgXCJjYXRjaExvY1wiKTtcbiAgICAgICAgICB2YXIgaGFzRmluYWxseSA9IGhhc093bi5jYWxsKGVudHJ5LCBcImZpbmFsbHlMb2NcIik7XG5cbiAgICAgICAgICBpZiAoaGFzQ2F0Y2ggJiYgaGFzRmluYWxseSkge1xuICAgICAgICAgICAgaWYgKHRoaXMucHJldiA8IGVudHJ5LmNhdGNoTG9jKSB7XG4gICAgICAgICAgICAgIHJldHVybiBoYW5kbGUoZW50cnkuY2F0Y2hMb2MsIHRydWUpO1xuICAgICAgICAgICAgfSBlbHNlIGlmICh0aGlzLnByZXYgPCBlbnRyeS5maW5hbGx5TG9jKSB7XG4gICAgICAgICAgICAgIHJldHVybiBoYW5kbGUoZW50cnkuZmluYWxseUxvYyk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICB9IGVsc2UgaWYgKGhhc0NhdGNoKSB7XG4gICAgICAgICAgICBpZiAodGhpcy5wcmV2IDwgZW50cnkuY2F0Y2hMb2MpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIGhhbmRsZShlbnRyeS5jYXRjaExvYywgdHJ1ZSk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICB9IGVsc2UgaWYgKGhhc0ZpbmFsbHkpIHtcbiAgICAgICAgICAgIGlmICh0aGlzLnByZXYgPCBlbnRyeS5maW5hbGx5TG9jKSB7XG4gICAgICAgICAgICAgIHJldHVybiBoYW5kbGUoZW50cnkuZmluYWxseUxvYyk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwidHJ5IHN0YXRlbWVudCB3aXRob3V0IGNhdGNoIG9yIGZpbmFsbHlcIik7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfSxcblxuICAgIGFicnVwdDogZnVuY3Rpb24odHlwZSwgYXJnKSB7XG4gICAgICBmb3IgKHZhciBpID0gdGhpcy50cnlFbnRyaWVzLmxlbmd0aCAtIDE7IGkgPj0gMDsgLS1pKSB7XG4gICAgICAgIHZhciBlbnRyeSA9IHRoaXMudHJ5RW50cmllc1tpXTtcbiAgICAgICAgaWYgKGVudHJ5LnRyeUxvYyA8PSB0aGlzLnByZXYgJiZcbiAgICAgICAgICAgIGhhc093bi5jYWxsKGVudHJ5LCBcImZpbmFsbHlMb2NcIikgJiZcbiAgICAgICAgICAgIHRoaXMucHJldiA8IGVudHJ5LmZpbmFsbHlMb2MpIHtcbiAgICAgICAgICB2YXIgZmluYWxseUVudHJ5ID0gZW50cnk7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgaWYgKGZpbmFsbHlFbnRyeSAmJlxuICAgICAgICAgICh0eXBlID09PSBcImJyZWFrXCIgfHxcbiAgICAgICAgICAgdHlwZSA9PT0gXCJjb250aW51ZVwiKSAmJlxuICAgICAgICAgIGZpbmFsbHlFbnRyeS50cnlMb2MgPD0gYXJnICYmXG4gICAgICAgICAgYXJnIDw9IGZpbmFsbHlFbnRyeS5maW5hbGx5TG9jKSB7XG4gICAgICAgIC8vIElnbm9yZSB0aGUgZmluYWxseSBlbnRyeSBpZiBjb250cm9sIGlzIG5vdCBqdW1waW5nIHRvIGFcbiAgICAgICAgLy8gbG9jYXRpb24gb3V0c2lkZSB0aGUgdHJ5L2NhdGNoIGJsb2NrLlxuICAgICAgICBmaW5hbGx5RW50cnkgPSBudWxsO1xuICAgICAgfVxuXG4gICAgICB2YXIgcmVjb3JkID0gZmluYWxseUVudHJ5ID8gZmluYWxseUVudHJ5LmNvbXBsZXRpb24gOiB7fTtcbiAgICAgIHJlY29yZC50eXBlID0gdHlwZTtcbiAgICAgIHJlY29yZC5hcmcgPSBhcmc7XG5cbiAgICAgIGlmIChmaW5hbGx5RW50cnkpIHtcbiAgICAgICAgdGhpcy5tZXRob2QgPSBcIm5leHRcIjtcbiAgICAgICAgdGhpcy5uZXh0ID0gZmluYWxseUVudHJ5LmZpbmFsbHlMb2M7XG4gICAgICAgIHJldHVybiBDb250aW51ZVNlbnRpbmVsO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gdGhpcy5jb21wbGV0ZShyZWNvcmQpO1xuICAgIH0sXG5cbiAgICBjb21wbGV0ZTogZnVuY3Rpb24ocmVjb3JkLCBhZnRlckxvYykge1xuICAgICAgaWYgKHJlY29yZC50eXBlID09PSBcInRocm93XCIpIHtcbiAgICAgICAgdGhyb3cgcmVjb3JkLmFyZztcbiAgICAgIH1cblxuICAgICAgaWYgKHJlY29yZC50eXBlID09PSBcImJyZWFrXCIgfHxcbiAgICAgICAgICByZWNvcmQudHlwZSA9PT0gXCJjb250aW51ZVwiKSB7XG4gICAgICAgIHRoaXMubmV4dCA9IHJlY29yZC5hcmc7XG4gICAgICB9IGVsc2UgaWYgKHJlY29yZC50eXBlID09PSBcInJldHVyblwiKSB7XG4gICAgICAgIHRoaXMucnZhbCA9IHRoaXMuYXJnID0gcmVjb3JkLmFyZztcbiAgICAgICAgdGhpcy5tZXRob2QgPSBcInJldHVyblwiO1xuICAgICAgICB0aGlzLm5leHQgPSBcImVuZFwiO1xuICAgICAgfSBlbHNlIGlmIChyZWNvcmQudHlwZSA9PT0gXCJub3JtYWxcIiAmJiBhZnRlckxvYykge1xuICAgICAgICB0aGlzLm5leHQgPSBhZnRlckxvYztcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIENvbnRpbnVlU2VudGluZWw7XG4gICAgfSxcblxuICAgIGZpbmlzaDogZnVuY3Rpb24oZmluYWxseUxvYykge1xuICAgICAgZm9yICh2YXIgaSA9IHRoaXMudHJ5RW50cmllcy5sZW5ndGggLSAxOyBpID49IDA7IC0taSkge1xuICAgICAgICB2YXIgZW50cnkgPSB0aGlzLnRyeUVudHJpZXNbaV07XG4gICAgICAgIGlmIChlbnRyeS5maW5hbGx5TG9jID09PSBmaW5hbGx5TG9jKSB7XG4gICAgICAgICAgdGhpcy5jb21wbGV0ZShlbnRyeS5jb21wbGV0aW9uLCBlbnRyeS5hZnRlckxvYyk7XG4gICAgICAgICAgcmVzZXRUcnlFbnRyeShlbnRyeSk7XG4gICAgICAgICAgcmV0dXJuIENvbnRpbnVlU2VudGluZWw7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9LFxuXG4gICAgXCJjYXRjaFwiOiBmdW5jdGlvbih0cnlMb2MpIHtcbiAgICAgIGZvciAodmFyIGkgPSB0aGlzLnRyeUVudHJpZXMubGVuZ3RoIC0gMTsgaSA+PSAwOyAtLWkpIHtcbiAgICAgICAgdmFyIGVudHJ5ID0gdGhpcy50cnlFbnRyaWVzW2ldO1xuICAgICAgICBpZiAoZW50cnkudHJ5TG9jID09PSB0cnlMb2MpIHtcbiAgICAgICAgICB2YXIgcmVjb3JkID0gZW50cnkuY29tcGxldGlvbjtcbiAgICAgICAgICBpZiAocmVjb3JkLnR5cGUgPT09IFwidGhyb3dcIikge1xuICAgICAgICAgICAgdmFyIHRocm93biA9IHJlY29yZC5hcmc7XG4gICAgICAgICAgICByZXNldFRyeUVudHJ5KGVudHJ5KTtcbiAgICAgICAgICB9XG4gICAgICAgICAgcmV0dXJuIHRocm93bjtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICAvLyBUaGUgY29udGV4dC5jYXRjaCBtZXRob2QgbXVzdCBvbmx5IGJlIGNhbGxlZCB3aXRoIGEgbG9jYXRpb25cbiAgICAgIC8vIGFyZ3VtZW50IHRoYXQgY29ycmVzcG9uZHMgdG8gYSBrbm93biBjYXRjaCBibG9jay5cbiAgICAgIHRocm93IG5ldyBFcnJvcihcImlsbGVnYWwgY2F0Y2ggYXR0ZW1wdFwiKTtcbiAgICB9LFxuXG4gICAgZGVsZWdhdGVZaWVsZDogZnVuY3Rpb24oaXRlcmFibGUsIHJlc3VsdE5hbWUsIG5leHRMb2MpIHtcbiAgICAgIHRoaXMuZGVsZWdhdGUgPSB7XG4gICAgICAgIGl0ZXJhdG9yOiB2YWx1ZXMoaXRlcmFibGUpLFxuICAgICAgICByZXN1bHROYW1lOiByZXN1bHROYW1lLFxuICAgICAgICBuZXh0TG9jOiBuZXh0TG9jXG4gICAgICB9O1xuXG4gICAgICBpZiAodGhpcy5tZXRob2QgPT09IFwibmV4dFwiKSB7XG4gICAgICAgIC8vIERlbGliZXJhdGVseSBmb3JnZXQgdGhlIGxhc3Qgc2VudCB2YWx1ZSBzbyB0aGF0IHdlIGRvbid0XG4gICAgICAgIC8vIGFjY2lkZW50YWxseSBwYXNzIGl0IG9uIHRvIHRoZSBkZWxlZ2F0ZS5cbiAgICAgICAgdGhpcy5hcmcgPSB1bmRlZmluZWQ7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBDb250aW51ZVNlbnRpbmVsO1xuICAgIH1cbiAgfTtcbn0pKFxuICAvLyBJbiBzbG9wcHkgbW9kZSwgdW5ib3VuZCBgdGhpc2AgcmVmZXJzIHRvIHRoZSBnbG9iYWwgb2JqZWN0LCBmYWxsYmFjayB0b1xuICAvLyBGdW5jdGlvbiBjb25zdHJ1Y3RvciBpZiB3ZSdyZSBpbiBnbG9iYWwgc3RyaWN0IG1vZGUuIFRoYXQgaXMgc2FkbHkgYSBmb3JtXG4gIC8vIG9mIGluZGlyZWN0IGV2YWwgd2hpY2ggdmlvbGF0ZXMgQ29udGVudCBTZWN1cml0eSBQb2xpY3kuXG4gIChmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gdGhpcyB8fCAodHlwZW9mIHNlbGYgPT09IFwib2JqZWN0XCIgJiYgc2VsZik7XG4gIH0pKCkgfHwgRnVuY3Rpb24oXCJyZXR1cm4gdGhpc1wiKSgpXG4pO1xuIiwidmFyIGc7XG5cbi8vIFRoaXMgd29ya3MgaW4gbm9uLXN0cmljdCBtb2RlXG5nID0gKGZ1bmN0aW9uKCkge1xuXHRyZXR1cm4gdGhpcztcbn0pKCk7XG5cbnRyeSB7XG5cdC8vIFRoaXMgd29ya3MgaWYgZXZhbCBpcyBhbGxvd2VkIChzZWUgQ1NQKVxuXHRnID0gZyB8fCBuZXcgRnVuY3Rpb24oXCJyZXR1cm4gdGhpc1wiKSgpO1xufSBjYXRjaCAoZSkge1xuXHQvLyBUaGlzIHdvcmtzIGlmIHRoZSB3aW5kb3cgcmVmZXJlbmNlIGlzIGF2YWlsYWJsZVxuXHRpZiAodHlwZW9mIHdpbmRvdyA9PT0gXCJvYmplY3RcIikgZyA9IHdpbmRvdztcbn1cblxuLy8gZyBjYW4gc3RpbGwgYmUgdW5kZWZpbmVkLCBidXQgbm90aGluZyB0byBkbyBhYm91dCBpdC4uLlxuLy8gV2UgcmV0dXJuIHVuZGVmaW5lZCwgaW5zdGVhZCBvZiBub3RoaW5nIGhlcmUsIHNvIGl0J3Ncbi8vIGVhc2llciB0byBoYW5kbGUgdGhpcyBjYXNlLiBpZighZ2xvYmFsKSB7IC4uLn1cblxubW9kdWxlLmV4cG9ydHMgPSBnO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==